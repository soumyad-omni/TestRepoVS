/**********************************************************************
Name:  QuoteLineTriggerHandlerTest
Copyright © 2018
======================================================
======================================================
Purpose: 
This is the test class for QuoteLineTriggerHandler                                                           
======================================================
======================================================
History                                                            
-------                                                            
VERSION      AUTHOR                      DATE             DETAIL                     Description
0.1         Sravan Kumar              9/21/2018      Developed by CG Team        INITIAL DEVELOPMENT
***********************************************************************/
@isTest 
public class QuoteLineTriggerHandlerTest {
    
    @testsetup
    static void testdatasetup(){
        CastIronIntegration__c  setting = new CastIronIntegration__c ();
        setting.Name = 'CastIronIntegration';
        setting.EndPoint__c = 'https://castirondatadev.omnicell.com/QuoteHeaderSFToCRM';
        setting.QuoteHeaderUpdateEndpoint__c = 'https://castirondatadev.omnicell.com/ QuoteHeaderSFToCRMUpdate';
        insert setting;
        
        ECC_Sales_Org_to_CRM__c  setting1 = new ECC_Sales_Org_to_CRM__c ();
        setting1.Name = 'AU SalesOrg Omnicell';
        setting1.CRM_Code__c = 'O 50008662';
        insert setting1;
        ECC_Sales_Org_to_CRM__c  setting2 = new ECC_Sales_Org_to_CRM__c ();
        setting2.Name = 'MACH4 - GmbH';
        setting2.CRM_Code__c = 'O 50008654';
        insert setting2;
        ECC_Sales_Org_to_CRM__c  setting3 = new ECC_Sales_Org_to_CRM__c ();
        setting3.Name = 'Omnicell - St.Petes';
        setting3.CRM_Code__c = 'O 50008663';
        insert setting3;
        ECC_Sales_Org_to_CRM__c  setting4 = new ECC_Sales_Org_to_CRM__c ();
        setting4.Name = 'Omnicell Inc.';
        setting4.CRM_Code__c = 'O 50000029';
        insert setting4;
        ECC_Sales_Org_to_CRM__c  setting5 = new ECC_Sales_Org_to_CRM__c ();
        setting5.Name = 'Omnicell Ltd';
        setting5.CRM_Code__c = 'O 50008655';
        insert setting5;
        ECC_Sales_Org_to_CRM__c  setting6 = new ECC_Sales_Org_to_CRM__c ();
        setting6.Name = 'Omnicell SAS';
        setting6.CRM_Code__c = 'O 50011128';
        insert setting6;
        
        Default_Currency_by_Country_Code__c    setting7 = new Default_Currency_by_Country_Code__c   ();
        setting7.Name = 'AZ';
        setting7.Currency_Code__c = 'USD';
        insert setting7;
        
        SCP_Integration_Details__c setting8 = new SCP_Integration_Details__c();
        setting8.Name = 'SCP_ContactSFToCRM'; 
        setting8.SCP_End_Point__c = 'https://www.test.com';
        insert setting8; 
        
        SCP_Integration_Details__c setting9 = new SCP_Integration_Details__c();
        setting9.Name = 'SCP_Mulesoft_Authorization'; 
        setting9.SCP_End_Point__c = 'https://www.test1.com';
        setting9.SCP_Method_Type__c = 'get';
        setting9.SCP_Key_Client_Id__c = '123456687991738187867909809';  
        setting9.SCP_Password_Client_Secret__c = '678965432';
        setting9.SCP_Grant_Type__c = 'OAuth 2.0';  
        insert setting9;  
        
        SCP_Integration_Details__c setting10 = new SCP_Integration_Details__c();  
        setting10.Name = 'SCP_ContactSFToCRM_Update';
        setting10.SCP_End_Point__c = 'https://www.test2.com';
        insert setting10;
        
    } 
    public static testmethod void quoteLineTriggerHandlerTestone1(){
        OpportunityTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        OpportunityTriggerHandler.TriggerDisabled = true;
        QuoteTriggerHandler.TriggerDisabled = True;
        QuoteLineTriggerHandler.TriggerDisabled = True;
        AccountCreateController.isFirstRun= false;
        
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = TestDataFactory.createTestQuote_Integration().Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Rebate_Buyout_Adjustment__c = 400.00;
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        Product2 prod = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '123456',ProductCode = 'FREIGHT');
        insert prod;
        ql.Product__c = prod.id;
        System.debug('Prod : '+ql.product__r.productcode);
        Quote_Line__c ql2 = new Quote_Line__c();
        ql2.RecordTypeId = qlNonConfigRecordType.id;
        ql2.Quote__c = ql.Quote__c;
        ql2.Higher_Level_Item__c = 0;
        ql2.Quantity__c = 1;
        ql2.SAP_Line_Number__c = 600;
        ql2.SAP_Line_Item_GUID__c = '402';
        ql2.Contract_List_Price__c = 200;
        ql2.Conga_product__c = 'LEASE BUYOUT';
        ql2.Rebate_Buyout_Adjustment__c = 400.00;
        ql2.Material_Type__c = 'SERVICE';
        ql2.Part_of_a_Bundle__c = FALSE; 
        ql2.Customer_Price__c = 200;
        Product2 prod2 = new Product2(Name = 'LEASE BUYOUT',Family = 'test',External_ID__c = '12345678',ProductCode = 'LEASE BUYOUT');
        insert prod2;
        ql2.Product__c = prod2.id;
        ql2.Sales_Text__c = 'test';
        System.debug('Prod : '+ql2.product__r.productcode);
        List<Quote_Line__c> qlList = new List<Quote_Line__c>();
        qlList.add(ql);
        qlList.add(ql2);
        test.startTest();
        insert qlList;
        UpdateSAPExpBookingValueBatch obj = new UpdateSAPExpBookingValueBatch();
        DataBase.executeBatch(obj); 
        delete qlList[0];
        test.stopTest();
        
        
    }
    public static testmethod void quoteLineTriggerHandlerTestone4(){
        OpportunityTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        AccountCreateController.isFirstRun= false;
        
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        Quote q = TestDataFactory.createTestQuote_Integration();
        ql.Quote__c = q.Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Material_Type__c = 'SERVICE';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        ql.Line_Status__c = 'E0006';
        Product2 prod = new Product2(Name = 'TestProduct-SV',Family = 'test',External_ID__c = '1234567890123',ProductCode = 'TestProduct-SV');
        insert prod;
        ql.Product__c = prod.id;
        System.debug('Prod : '+ql.product__r.productcode);
        test.startTest();
        insert ql;
        ql.Customer_Price__c = 400;
        QuoteLineTriggerHandler.fromprint = false;
        QuoteLineTriggerHandler.isinsert = false;
        
        update ql;
        test.stopTest();
        
        
    }
    public static testmethod void quoteLineTriggerHandlerTestone2(){
        OpportunityTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        OpportunityTriggerHandler.TriggerDisabled = true;
        QuoteTriggerHandler.TriggerDisabled = True;
        QuoteLineTriggerHandler.TriggerDisabled = True;
        AccountCreateController.isFirstRun= false;
        
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = TestDataFactory.createTestQuote_Integration().Id;
        ql.Higher_Level_Item__c = 200;
        ql.conga_higher_level_item__c = '200';
        ql.Quantity__c = 1;
        ql.SAP_Line_Number__c = 201;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Contract_List_Price__c = 200;
        ql.Material_Type__c = 'SERVICE';
        ql.Part_of_a_Bundle__c = true; 
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct';
        Product2 prod = new Product2(Name = 'Renewal',Family = 'test',External_ID__c = '123456',ProductCode = 'Renewal-SV');
        insert prod;
        ql.Product__c = prod.id;
        System.debug('Prod : '+ql.product__r.productcode);
        Quote_Line__c ql1 = new Quote_Line__c();
        RecordType qlNonConfigRecordType1 = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql1.RecordTypeId = qlNonConfigRecordType1.id;
        ql1.Quote__c = ql.Quote__c;
        ql1.Higher_Level_Item__c = 0;
        ql1.Quantity__c = 1;
        ql1.SAP_Line_Number__c = 200;
        ql1.Contract_List_Price__c = 200;
        ql1.SAP_Line_Item_GUID__c = '401';
        ql1.Conga_product__c = 'Test Prod';
        ql1.Material_Type__c = 'PRODUCT';
        ql1.Part_of_a_Bundle__c = FALSE; 
        ql1.Customer_Price__c = 200;
        Product2 prod1 = new Product2(Name = 'Test Prod',Family = 'test',External_ID__c = '1234567',ProductCode = 'Test Prod');
        insert prod1;
        ql1.Product__c = prod1.id;
        System.debug('Prod : '+ql1.product__r.productcode);
        List<Quote_Line__c> qlList = new List<Quote_Line__c>();
        qlList.add(ql);
        qlList.add(ql1);
        test.startTest();
        insert qlList;
        System.debug('QLList : '+qlList);
        QuoteLineTriggerHandler.isFirst = true;
        update qlList;
        test.stopTest();
        
    }
    public static testmethod void quoteLineTriggerHandlerTesthistorychanges(){
        OpportunityTriggerHandler.TriggerDisabled = true;
        QuoteTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        AccountCreateController.isFirstRun= false;
        
        Quote_Line__c quoteline_trackhistory = TestDataFactory.deleteTestQuoteLine_Integration();
        quoteline_trackhistory.Conga_Product__c = 'TestProduct';
        quoteline_trackhistory.Contract_List_Price__c = 200;
        quoteline_trackhistory.Higher_Level_Item__c = 0;
        quoteline_trackhistory.conga_higher_level_item__c = '0';
        quoteline_trackhistory.Conga_Quantity_Update__c = true;
        quoteline_trackhistory.SAP_Line_Number__c = 0;
        Quote q = [select id,Name,status,supplement_version__c from Quote where id=:quoteline_trackhistory.Quote__c];
        q.Status = 'E0009';
        update q;
        System.debug('Conga Supplement : '+q.supplement_version__c+' '+q.Name+' '+q.Status);
        quoteline_trackhistory.Quantity__c = 50;
        quoteline_trackhistory.Material_Type__c = 'TEST TYPE';
        quoteline_trackhistory.Customer_Price__c = 300;
        quoteline_trackhistory.Discount_Amount__c = 20;
        quoteline_trackhistory.Discount_Percent__c = 10;
        quoteline_trackhistory.Labor_Cost__c = 20;
        quoteline_trackhistory.Lease_Buyout_Price__c = 20;
        quoteline_trackhistory.List_Price__c = 200;
        quoteline_trackhistory.Margin__c = 10;
        quoteline_trackhistory.Overhead_Cost__c = 10;
        quoteline_trackhistory.Price_Override__c = 0;
        quoteline_trackhistory.Pricing_Amount__c = 10;
        quoteline_trackhistory.Product_Cost__c = 100;
        quoteline_trackhistory.Rebate_Buyout_Adjustment__c = 20;
        quoteline_trackhistory.SAP_Expected_Bookings__c = 200;
        quoteline_trackhistory.SAP_NPV__c = 20;
        quoteline_trackhistory.Total_Cost__c = 300;
        quoteline_trackhistory.External_Config__c = false;
        quoteline_trackhistory.Generic_Drawer__c = 'TEST';
        quoteline_trackhistory.Higher_Level_Item__c = 200;
        quoteline_trackhistory.Key__c = 'TEST KEY';
        quoteline_trackhistory.Line_Item_Description__c = 'TEST DESCR';
        quoteline_trackhistory.Line_Status__c = 'E0001';
        quoteline_trackhistory.Par_Location__c = 'TEST PAR LOC';
        quoteline_trackhistory.Part_of_a_Bundle__c = true;
        quoteline_trackhistory.Pricing__c = 'ZP04';
        quoteline_trackhistory.Picture_URL__c = 'testurl.com';
        quoteline_trackhistory.External_Config__c = true;
        Product2 prod = new Product2(Name = 'TestProduct2',Family = 'test2',External_ID__c = '123457',ProductCode = 'TestProduct2');
        insert prod;
        quoteline_trackhistory.Product__c = prod.id;
        quoteline_trackhistory.Pricing_Reference_Model__c = prod.id;
        quoteline_trackhistory.Product_Line_for_this_Service__c = 100;
        quoteline_trackhistory.Quote_Line_Item_Type__c = 'Upgrade';
        quoteline_trackhistory.Requested_Delivery_Date__c = Date.newInstance(2019, 12, 12);
        quoteline_trackhistory.Sales_Text__c = 'Test Sales Text 12344';
        quoteline_trackhistory.SAP_Line_Number__c = 1000;
        quoteline_trackhistory.Serial_Number__c = '123455667';
        quoteline_trackhistory.Contract_List_Price__c = 2000;
        quoteline_trackhistory.USA_List_Price__c = 1000;
        quoteline_trackhistory.Total_Customer_Price__c = 3000;
        quoteline_trackhistory.Discount_Percent_Amount__c = 200;
        quoteline_trackhistory.Unit_of_Measure__c = 'MSF';
        
        quoteline_trackhistory.Pricing_Reference_Description__c = 'TEST PRICING';
        QuoteLineTriggerHandler.isFirst = true;
        QuoteLineTriggerHandler.fromprint = false;
        QuoteLineTriggerHandler.isinsert = false;
        test.starttest();
        update quoteline_trackhistory;
        test.stoptest();       
    }
    public static testmethod void quoteLineTriggerHandlerTestone3(){
        OpportunityTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        QuoteTriggerHandler.TriggerDisabled = True;
        AccountCreateController.isFirstRun= false;
        
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = TestDataFactory.createTestQuote_Integration().Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        Product2 prod = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '123456',ProductCode = 'FREIGHT');
        insert prod;
        ql.Product__c = prod.id;
        ql.conga_higher_level_item__c = '400';
        Quote_Line__c ql2 = new Quote_Line__c();
        ql2.RecordTypeId = qlNonConfigRecordType.id;
        ql2.Quote__c = ql.Quote__c;
        ql2.Higher_Level_Item__c = 0;
        ql2.Quantity__c = 1;
        ql2.SAP_Line_Number__c = 600;
        ql2.SAP_Line_Item_GUID__c = '402';
        ql2.Contract_List_Price__c = 200;
        ql2.Conga_product__c = 'LEASE BUYOUT';
        ql2.Material_Type__c = 'SERVICE';
        ql2.Part_of_a_Bundle__c = FALSE; 
        ql2.Customer_Price__c = 200;
        Product2 prod2 = new Product2(Name = 'LEASE BUYOUT',Family = 'test',External_ID__c = '12345678',ProductCode = 'LEASE BUYOUT');
        insert prod2;
        ql2.Product__c = prod2.id;
        ql2.Sales_Text__c = 'test';
        ql2.conga_higher_level_item__c = '600';
        
        Quote_Line__c quoteline_trackhistory = new Quote_Line__c();
        quoteline_trackhistory.Conga_Product__c = 'TestProduct';
        quoteline_trackhistory.Contract_List_Price__c = 200;
        quoteline_trackhistory.Higher_Level_Item__c = 0;
        quoteline_trackhistory.conga_higher_level_item__c = '0';
        quoteline_trackhistory.Conga_Quantity_Update__c = true;
        quoteline_trackhistory.SAP_Line_Number__c = 0;
        quoteline_trackhistory.Quantity__c = 50;
        quoteline_trackhistory.Material_Type__c = 'TEST TYPE';
        quoteline_trackhistory.Customer_Price__c = 300;
        quoteline_trackhistory.Discount_Amount__c = 20;
        quoteline_trackhistory.Discount_Percent__c = 10;
        quoteline_trackhistory.Labor_Cost__c = 20;
        quoteline_trackhistory.Lease_Buyout_Price__c = 20;
        quoteline_trackhistory.List_Price__c = 200;
        quoteline_trackhistory.Margin__c = 10;
        quoteline_trackhistory.Overhead_Cost__c = 10;
        quoteline_trackhistory.Price_Override__c = 0;
        quoteline_trackhistory.Pricing_Amount__c = 10;
        quoteline_trackhistory.Product_Cost__c = 100;
        quoteline_trackhistory.Rebate_Buyout_Adjustment__c = 20;
        quoteline_trackhistory.SAP_Expected_Bookings__c = 200;
        quoteline_trackhistory.SAP_NPV__c = 20;
        quoteline_trackhistory.Total_Cost__c = 300;
        quoteline_trackhistory.External_Config__c = false;
        quoteline_trackhistory.Generic_Drawer__c = 'TEST';
        quoteline_trackhistory.Higher_Level_Item__c = 200;
        quoteline_trackhistory.Key__c = 'TEST KEY';
        quoteline_trackhistory.Line_Item_Description__c = 'TEST DESCR';
        quoteline_trackhistory.Line_Status__c = 'E0001';
        quoteline_trackhistory.Par_Location__c = 'TEST PAR LOC';
        quoteline_trackhistory.Part_of_a_Bundle__c = true;
        quoteline_trackhistory.Pricing__c = 'ZP04';
        quoteline_trackhistory.Picture_URL__c = 'testurl.com';
        quoteline_trackhistory.External_Config__c = true;
        Product2 prod11 = new Product2(Name = 'TestProduct2',Family = 'test2',External_ID__c = '123457',ProductCode = 'TestProduct2');
        insert prod11;
        quoteline_trackhistory.Product__c = prod.id;
        quoteline_trackhistory.Pricing_Reference_Model__c = prod.id;
        quoteline_trackhistory.Product_Line_for_this_Service__c = 100;
        quoteline_trackhistory.Quote__c = ql.Quote__c;
        quoteline_trackhistory.Quote_Line_Item_Type__c = 'Upgrade';
        quoteline_trackhistory.Requested_Delivery_Date__c = Date.newInstance(2019, 12, 12);
        quoteline_trackhistory.Sales_Text__c = 'Test Sales Text 12344';
        quoteline_trackhistory.SAP_Line_Number__c = 1000;
        quoteline_trackhistory.Serial_Number__c = '123455667';
        quoteline_trackhistory.Contract_List_Price__c = 2000;
        quoteline_trackhistory.USA_List_Price__c = 1000;
        quoteline_trackhistory.Total_Customer_Price__c = 3000;
        quoteline_trackhistory.Discount_Percent_Amount__c = 200;
        quoteline_trackhistory.Unit_of_Measure__c = 'MSF';
        quoteline_trackhistory.conga_higher_level_item__c = '1000';
        quoteline_trackhistory.Pricing_Reference_Description__c = 'TEST PRICING';
        
        Quote_Line__c ql3 = new Quote_Line__c();
        ql3.RecordTypeId = qlNonConfigRecordType.id;
        ql3.Quote__c = ql.Quote__c;
        ql3.Higher_Level_Item__c = 0;
        ql3.Quantity__c = 1;
        ql3.SAP_Line_Number__c = 800;
        ql3.SAP_Line_Item_GUID__c = '402';
        ql3.Contract_List_Price__c = 200;
        ql3.Conga_product__c = 'RENEWAL';
        ql3.Rebate_Buyout_Adjustment__c = 400.00;
        ql3.Material_Type__c = 'Product';
        ql3.Part_of_a_Bundle__c = FALSE; 
        ql3.Customer_Price__c = 200;
        ql3.conga_higher_level_item__c = '800';
        ql.Pricing_Reference_Model__c = prod.id;
        Product2 prod3 = new Product2(Name = 'RENEWAL',Family = 'test',External_ID__c = '12845678',ProductCode = 'RENEWAL');
        insert prod3;
        ql3.Product__c = prod3.id;
        ql3.Sales_Text__c = 'test';
        
        Quote_Line__c ql4 = new Quote_Line__c();
        ql4.RecordTypeId = qlNonConfigRecordType.id;
        ql4.Quote__c = ql.Quote__c;
        ql4.Higher_Level_Item__c = 800;
        ql4.Quantity__c = 1;
        ql4.SAP_Line_Number__c = 801;
        ql4.SAP_Line_Item_GUID__c = '402';
        ql4.Contract_List_Price__c = 200;
        ql4.Conga_product__c = 'RENEWAL';
        ql4.Rebate_Buyout_Adjustment__c = 400.00;
        ql4.Material_Type__c = 'Product';
        ql4.Part_of_a_Bundle__c = FALSE; 
        ql4.Customer_Price__c = 200;
        ql4.Product__c = prod.id;
        ql4.Sales_Text__c = 'test';
        ql4.conga_higher_level_item__c = '800';
        System.debug('Prod : '+ql2.product__r.productcode);
        List<Quote_Line__c> qlList = new List<Quote_Line__c>();
        qlList.add(ql);
        qlList.add(ql2);
        qlList.add(ql3);
        qlList.add(ql4);
        qlList.add(quoteline_trackhistory);
        test.startTest();
        insert qlList;
        delete qlList[0];
        test.stopTest();
    }
    public static testmethod void quoteLineTriggerHandlerTestone5(){
        OpportunityTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        QuoteTriggerHandler.TriggerDisabled = True;
        AccountCreateController.isFirstRun= false;
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = TestDataFactory.createTestQuote_Integration().Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.Add_To_Cart__c = true;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        Product2 prod = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '1234586',ProductCode = 'FREIGHT');
        insert prod;
        ql.Product__c = prod.id;
        ql.conga_higher_level_item__c = '400';
        Quote_Line__c ql2 = new Quote_Line__c();
        ql2.RecordTypeId = qlNonConfigRecordType.id;
        ql2.Quote__c = ql.Quote__c;
        ql2.Higher_Level_Item__c = 0;
        ql2.Quantity__c = 1;
        ql2.SAP_Line_Number__c = 600;
        ql2.SAP_Line_Item_GUID__c = '402';
        ql2.Contract_List_Price__c = 200;
        ql2.Conga_product__c = 'LEASE BUYOUT';
        ql2.Material_Type__c = 'SERVICE';
        ql2.Part_of_a_Bundle__c = FALSE; 
        ql2.Customer_Price__c = 200;
        Product2 prod2 = new Product2(Name = 'LEASE BUYOUT',Family = 'test',External_ID__c = '12395678',ProductCode = 'LEASE BUYOUT');
        insert prod2;
        ql2.Product__c = prod2.id;
        ql2.Sales_Text__c = 'test';
        ql2.conga_higher_level_item__c = '600';
        
        Quote_Line__c quoteline_trackhistory = new Quote_Line__c();
        quoteline_trackhistory.Conga_Product__c = 'TestProduct';
        quoteline_trackhistory.Contract_List_Price__c = 200;
        quoteline_trackhistory.Higher_Level_Item__c = 0;
        quoteline_trackhistory.conga_higher_level_item__c = '0';
        quoteline_trackhistory.Conga_Quantity_Update__c = true;
        quoteline_trackhistory.SAP_Line_Number__c = 0;
        quoteline_trackhistory.Quantity__c = 50;
        quoteline_trackhistory.Material_Type__c = 'TEST TYPE';
        quoteline_trackhistory.Customer_Price__c = 300;
        quoteline_trackhistory.Discount_Amount__c = 20;
        quoteline_trackhistory.Discount_Percent__c = 10;
        quoteline_trackhistory.Labor_Cost__c = 20;
        quoteline_trackhistory.Lease_Buyout_Price__c = 20;
        quoteline_trackhistory.List_Price__c = 200;
        quoteline_trackhistory.Margin__c = 10;
        quoteline_trackhistory.Overhead_Cost__c = 10;
        quoteline_trackhistory.Price_Override__c = 0;
        quoteline_trackhistory.Pricing_Amount__c = 10;
        quoteline_trackhistory.Product_Cost__c = 100;
        quoteline_trackhistory.Rebate_Buyout_Adjustment__c = 20;
        quoteline_trackhistory.SAP_Expected_Bookings__c = 200;
        quoteline_trackhistory.SAP_NPV__c = 20;
        quoteline_trackhistory.Total_Cost__c = 300;
        quoteline_trackhistory.External_Config__c = false;
        quoteline_trackhistory.Generic_Drawer__c = 'TEST';
        quoteline_trackhistory.Higher_Level_Item__c = 200;
        quoteline_trackhistory.Key__c = 'TEST KEY';
        quoteline_trackhistory.Line_Item_Description__c = 'TEST DESCR';
        quoteline_trackhistory.Line_Status__c = 'E0001';
        quoteline_trackhistory.Par_Location__c = 'TEST PAR LOC';
        quoteline_trackhistory.Part_of_a_Bundle__c = true;
        quoteline_trackhistory.Pricing__c = 'ZP04';
        quoteline_trackhistory.Picture_URL__c = 'testurl.com';
        quoteline_trackhistory.External_Config__c = true;
        Product2 prod11 = new Product2(Name = 'TestProduct2',Family = 'test2',External_ID__c = '1293457',ProductCode = 'TestProduct2');
        insert prod11;
        quoteline_trackhistory.Product__c = prod.id;
        quoteline_trackhistory.Pricing_Reference_Model__c = prod.id;
        quoteline_trackhistory.Product_Line_for_this_Service__c = 100;
        quoteline_trackhistory.Quote__c = ql.Quote__c;
        quoteline_trackhistory.Quote_Line_Item_Type__c = 'Upgrade';
        quoteline_trackhistory.Requested_Delivery_Date__c = Date.newInstance(2019, 12, 12);
        quoteline_trackhistory.Sales_Text__c = 'Test Sales Text 12344';
        quoteline_trackhistory.SAP_Line_Number__c = 1000;
        quoteline_trackhistory.Serial_Number__c = '123455667';
        quoteline_trackhistory.Contract_List_Price__c = 2000;
        quoteline_trackhistory.USA_List_Price__c = 1000;
        quoteline_trackhistory.Total_Customer_Price__c = 3000;
        quoteline_trackhistory.Discount_Percent_Amount__c = 200;
        quoteline_trackhistory.Unit_of_Measure__c = 'MSF';
        quoteline_trackhistory.conga_higher_level_item__c = '1000';
        quoteline_trackhistory.Pricing_Reference_Description__c = 'TEST PRICING';
        
        Quote_Line__c ql3 = new Quote_Line__c();
        ql3.RecordTypeId = qlNonConfigRecordType.id;
        ql3.Quote__c = ql.Quote__c;
        ql3.Higher_Level_Item__c = 0;
        ql3.Quantity__c = 1;
        ql3.SAP_Line_Number__c = 800;
        ql3.SAP_Line_Item_GUID__c = '402';
        ql3.Contract_List_Price__c = 200;
        ql3.Conga_product__c = 'RENEWAL';
        ql3.Rebate_Buyout_Adjustment__c = 400.00;
        ql3.Material_Type__c = 'Product';
        ql3.Part_of_a_Bundle__c = FALSE; 
        ql3.Customer_Price__c = 200;
        ql3.conga_higher_level_item__c = '800';
        ql.Pricing_Reference_Model__c = prod.id;
        Product2 prod3 = new Product2(Name = 'RENEWAL',Family = 'test',External_ID__c = '1284578',ProductCode = 'RENEWAL');
        insert prod3;
        ql3.Product__c = prod3.id;
        ql3.Sales_Text__c = 'test';
        
        Quote_Line__c ql4 = new Quote_Line__c();
        ql4.RecordTypeId = qlNonConfigRecordType.id;
        ql4.Quote__c = ql.Quote__c;
        ql4.Higher_Level_Item__c = 800;
        ql4.Quantity__c = 1;
        ql4.SAP_Line_Number__c = 801;
        ql4.SAP_Line_Item_GUID__c = '402';
        ql4.Contract_List_Price__c = 200;
        ql4.Conga_product__c = 'RENEWAL';
        ql4.Rebate_Buyout_Adjustment__c = 400.00;
        ql4.Material_Type__c = 'Product';
        ql4.Part_of_a_Bundle__c = FALSE; 
        ql4.Customer_Price__c = 200;
        ql4.Product__c = prod.id;
        ql4.Sales_Text__c = 'test';
        ql4.conga_higher_level_item__c = '800';
        System.debug('Prod : '+ql2.product__r.productcode);
        List<Quote_Line__c> qlList1 = new List<Quote_Line__c>();
        qlList1.add(ql);
        qlList1.add(ql2);
        qlList1.add(ql3);
        qlList1.add(ql4);
        qlList1.add(quoteline_trackhistory);
        test.startTest();
        insert qlList1;
        test.stopTest();
    }
    public static testmethod void quoteLineTriggerHandlerTestone6(){
        userTriggerHandler.TriggerDisabled = true;
        AccountCreateController.isFirstRun= false;
        OpportunityTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        ContactTriggerHandler.TriggerDisabled = True;
        UserTriggerHandler.TriggerDisabled = True;
        Quote quote = TestDataFactory.createTestQuote1();
        Trigger_Configuration__c tc = new Trigger_Configuration__c();
        tc.Name = 'QuoteLineTriggerDisabled';
        tc.IsDisabled__c = True;
        insert tc;
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = quote.Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.Number_of_Units__c = 2;
        ql.Add_To_Cart__c = true;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        Product2 prod = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '1234586',ProductCode = 'FREIGHT',DW_Product_Family__c = 'Solution');
        insert prod;
        ql.Product__c = prod.id;
        ql.conga_higher_level_item__c = '400';
        Test.StartTest();
        insert ql;
        tc.IsDisabled__c = False;
        update tc;
        QuoteLineTriggerHandler.TriggerDisabled = True;
        ql.Customer_Price__c = 300;
        update ql;
        delete ql;
        QuoteLineTriggerHandler.TriggerDisabled = False;
        undelete ql;
        Test.StopTest();
    }
    public static testmethod void quoteLineTriggerHandlerTestone7(){
        userTriggerHandler.TriggerDisabled = true;
        AccountCreateController.isFirstRun= false;
        OpportunityTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        ContactTriggerHandler.TriggerDisabled = True;
        UserTriggerHandler.TriggerDisabled = True;
        Quote quote = TestDataFactory.createTestQuote1();
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = quote.Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 2;
        ql.Number_of_Units__c = 3;
        ql.Add_To_Cart__c = true;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        Product2 prod = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '1234586',ProductCode = 'FREIGHT',DW_Product_Family__c = 'Solution');
        insert prod;
        ql.Product__c = prod.id;
        ql.conga_higher_level_item__c = '400';
        Test.StartTest();
        insert ql; 
        Test.StopTest();
    }    
}