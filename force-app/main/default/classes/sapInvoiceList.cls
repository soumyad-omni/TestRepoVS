global class sapInvoiceList {//implements overcast.Realtime.Runnable {//Commented by Sourav for Overcast uninstall
/* 
 * Generated by Overcast UTC 2020-01-05 06:44:54Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
    public class sapInvoiceListException extends Exception {}
    
    global sapInvoiceList() {
        this.BAPI_WEBINVOICE_GETLIST = new sapInvoiceList.BAPI_WEBINVOICE_GETLIST();
        this.RETURN_x = new sapInvoiceList.RETURN_x();
        this.WEBINVOICEDOCUMENTLIST = new list<sapInvoiceList.WEBINVOICEDOCUMENTLIST>();
    }

    public class BAPI_WEBINVOICE_GETLIST {
        @AuraEnabled public String BILLINGDOC_FROM { get; set; }
        @AuraEnabled public String BILLINGDOC_TO { get; set; }
        @AuraEnabled public String COMPANYCODE { get; set; }
        @AuraEnabled public Date DATE_FROM { get; set; }
        @AuraEnabled public Date DATE_TO { get; set; }
        @AuraEnabled public String LANGU { get; set; }
        @AuraEnabled public Integer MAXROWS { get; set; }
        @AuraEnabled public String PARTNER_NUMBER { get; set; }
        @AuraEnabled public String PARTNER_ROLE { get; set; }
        @AuraEnabled public String REFDOC_FROM { get; set; }
        @AuraEnabled public String REFDOC_TO { get; set; }

        public BAPI_WEBINVOICE_GETLIST() {}

        public BAPI_WEBINVOICE_GETLIST(String pBILLINGDOC_FROM, String pBILLINGDOC_TO, String pCOMPANYCODE, Date pDATE_FROM, Date pDATE_TO, String pLANGU, Integer pMAXROWS, String pPARTNER_NUMBER, String pPARTNER_ROLE, String pREFDOC_FROM, String pREFDOC_TO) {
            this.BILLINGDOC_FROM = pBILLINGDOC_FROM;
            this.BILLINGDOC_TO = pBILLINGDOC_TO;
            this.COMPANYCODE = pCOMPANYCODE;
            this.DATE_FROM = pDATE_FROM;
            this.DATE_TO = pDATE_TO;
            this.LANGU = pLANGU;
            this.MAXROWS = pMAXROWS;
            this.PARTNER_NUMBER = pPARTNER_NUMBER;
            this.PARTNER_ROLE = pPARTNER_ROLE;
            this.REFDOC_FROM = pREFDOC_FROM;
            this.REFDOC_TO = pREFDOC_TO;
        }
    }

    public class RETURN_x {
        @AuraEnabled public String TYPE_x { get; set; }
        @AuraEnabled public String ID { get; set; }
        @AuraEnabled public String NUMBER_x { get; set; }
        @AuraEnabled public String MESSAGE { get; set; }
        @AuraEnabled public String LOG_NO { get; set; }
        @AuraEnabled public String LOG_MSG_NO { get; set; }
        @AuraEnabled public String MESSAGE_V1 { get; set; }
        @AuraEnabled public String MESSAGE_V2 { get; set; }
        @AuraEnabled public String MESSAGE_V3 { get; set; }
        @AuraEnabled public String MESSAGE_V4 { get; set; }
        @AuraEnabled public String PARAMETER { get; set; }
        @AuraEnabled public Integer ROW { get; set; }
        @AuraEnabled public String FIELD { get; set; }
        @AuraEnabled public String SYSTEM_x { get; set; }

        public RETURN_x() {}

        public RETURN_x(String pTYPE_x, String pID, String pNUMBER_x, String pMESSAGE, String pLOG_NO, String pLOG_MSG_NO, String pMESSAGE_V1, String pMESSAGE_V2, String pMESSAGE_V3, String pMESSAGE_V4, String pPARAMETER, Integer pROW, String pFIELD, String pSYSTEM_x) {
            this.TYPE_x = pTYPE_x;
            this.ID = pID;
            this.NUMBER_x = pNUMBER_x;
            this.MESSAGE = pMESSAGE;
            this.LOG_NO = pLOG_NO;
            this.LOG_MSG_NO = pLOG_MSG_NO;
            this.MESSAGE_V1 = pMESSAGE_V1;
            this.MESSAGE_V2 = pMESSAGE_V2;
            this.MESSAGE_V3 = pMESSAGE_V3;
            this.MESSAGE_V4 = pMESSAGE_V4;
            this.PARAMETER = pPARAMETER;
            this.ROW = pROW;
            this.FIELD = pFIELD;
            this.SYSTEM_x = pSYSTEM_x;
        }
    }

    public class WEBINVOICEDOCUMENTLIST {
        @AuraEnabled public String BILLINGDOC { get; set; }
        @AuraEnabled public String BILL_TYPE { get; set; }
        @AuraEnabled public String BILL_TYPE_TEXT { get; set; }
        @AuraEnabled public String BILLCATEG { get; set; }
        @AuraEnabled public String BILLCATEG_TEXT { get; set; }
        @AuraEnabled public String SD_DOC_CAT { get; set; }
        @AuraEnabled public String SD_DOC_CAT_TEXT { get; set; }
        @AuraEnabled public String CURRENCY_x { get; set; }
        @AuraEnabled public String CURRENCY_ISO { get; set; }
        @AuraEnabled public Decimal NET_VALUE { get; set; }
        @AuraEnabled public String SOLD_TO { get; set; }
        @AuraEnabled public String PAYER { get; set; }
        @AuraEnabled public Decimal TAX_AMOUNT { get; set; }
        @AuraEnabled public String CANCELLED { get; set; }
        @AuraEnabled public Date BILL_DATE { get; set; }
        @AuraEnabled public String INCOTERMS1 { get; set; }
        @AuraEnabled public String INCOTERMS1_TEXT { get; set; }
        @AuraEnabled public String INCOTERMS2 { get; set; }
        @AuraEnabled public String PMNTTRMS { get; set; }
        @AuraEnabled public String PMNTTRMS_TEXT { get; set; }
        @AuraEnabled public String COMP_CODE { get; set; }
        @AuraEnabled public String COMP_NAME { get; set; }
        @AuraEnabled public String REFERENCE { get; set; }
        @AuraEnabled public Date BLINE_DATE { get; set; }
        @AuraEnabled public Date DSCT_DATE1 { get; set; }
        @AuraEnabled public Date DSCT_DATE2 { get; set; }
        @AuraEnabled public Date NET_DATE { get; set; }
        @AuraEnabled public Decimal DSCT_PCT1 { get; set; }
        @AuraEnabled public Decimal DSCT_PCT2 { get; set; }

        public WEBINVOICEDOCUMENTLIST() {}

        public WEBINVOICEDOCUMENTLIST(String pBILLINGDOC, String pBILL_TYPE, String pBILL_TYPE_TEXT, String pBILLCATEG, String pBILLCATEG_TEXT, String pSD_DOC_CAT, String pSD_DOC_CAT_TEXT, String pCURRENCY_x, String pCURRENCY_ISO, Decimal pNET_VALUE, String pSOLD_TO, String pPAYER, Decimal pTAX_AMOUNT, String pCANCELLED, Date pBILL_DATE, String pINCOTERMS1, String pINCOTERMS1_TEXT, String pINCOTERMS2, String pPMNTTRMS, String pPMNTTRMS_TEXT, String pCOMP_CODE, String pCOMP_NAME, String pREFERENCE, Date pBLINE_DATE, Date pDSCT_DATE1, Date pDSCT_DATE2, Date pNET_DATE, Decimal pDSCT_PCT1, Decimal pDSCT_PCT2) {
            this.BILLINGDOC = pBILLINGDOC;
            this.BILL_TYPE = pBILL_TYPE;
            this.BILL_TYPE_TEXT = pBILL_TYPE_TEXT;
            this.BILLCATEG = pBILLCATEG;
            this.BILLCATEG_TEXT = pBILLCATEG_TEXT;
            this.SD_DOC_CAT = pSD_DOC_CAT;
            this.SD_DOC_CAT_TEXT = pSD_DOC_CAT_TEXT;
            this.CURRENCY_x = pCURRENCY_x;
            this.CURRENCY_ISO = pCURRENCY_ISO;
            this.NET_VALUE = pNET_VALUE;
            this.SOLD_TO = pSOLD_TO;
            this.PAYER = pPAYER;
            this.TAX_AMOUNT = pTAX_AMOUNT;
            this.CANCELLED = pCANCELLED;
            this.BILL_DATE = pBILL_DATE;
            this.INCOTERMS1 = pINCOTERMS1;
            this.INCOTERMS1_TEXT = pINCOTERMS1_TEXT;
            this.INCOTERMS2 = pINCOTERMS2;
            this.PMNTTRMS = pPMNTTRMS;
            this.PMNTTRMS_TEXT = pPMNTTRMS_TEXT;
            this.COMP_CODE = pCOMP_CODE;
            this.COMP_NAME = pCOMP_NAME;
            this.REFERENCE = pREFERENCE;
            this.BLINE_DATE = pBLINE_DATE;
            this.DSCT_DATE1 = pDSCT_DATE1;
            this.DSCT_DATE2 = pDSCT_DATE2;
            this.NET_DATE = pNET_DATE;
            this.DSCT_PCT1 = pDSCT_PCT1;
            this.DSCT_PCT2 = pDSCT_PCT2;
        }
    }

    @AuraEnabled public sapInvoiceList.BAPI_WEBINVOICE_GETLIST BAPI_WEBINVOICE_GETLIST { get; set; }
    @AuraEnabled public sapInvoiceList.RETURN_x RETURN_x { get; set; }
    @AuraEnabled public list<sapInvoiceList.WEBINVOICEDOCUMENTLIST> WEBINVOICEDOCUMENTLIST { get; set; }

    public string inputSetName { get; set; }
/*
    public sapInvoiceList run() {
        overcast.Logger logger1 = new overcast.Logger('sapInvoiceList');
        try {
            sapInvoiceList response = this.run(logger1, null);
            logger1.commitToDatabase();
            return response;
        }
        catch (Exception e) {
            logger1.addLog('ERROR', e.getTypeName() + ': ' + e.getMessage());
            logger1.setStatusCode(300);
            logger1.commitToDatabase();
            throw e;
        }
    }
    
    public sapInvoiceList run(overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = setup(logger, namedCredential);

        if (Test.isRunningTest()) {
            if (this.dynamicBody != null) {
                return this;
            }
            return sapInvoiceList.deserialize(this.testResponse);
        }
        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);
        
        return sapInvoiceList.deserialize(sh.Response);
    }

    public string runAsync(overcast.Logger logger, string namedCredential, Continuation con) {
        overcast.SynchronousHandler sh = setup(logger, namedCredential);

        sh.ContinuationWebRequest = new HttpRequest();
        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);

        return con.addHttpRequest(sh.ContinuationWebRequest);
    }*///Commented by Sourav for Overcast uninstall

    public static sapInvoiceList handleAsyncResponse(HttpResponse resp) {
        return sapInvoiceList.deserialize(resp.getBody());
    }

    public static sapInvoiceList getAsyncResponse(String requestLabel) {
        HttpResponse response = Continuation.getResponse(requestLabel);
        return handleAsyncResponse(response);
    }
/*
    private overcast.SynchronousHandler setup(overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = overcast.SynchronousHandler.CreateFromName('sapInvoiceList');
        if (!String.isBlank(this.inputSetName)) {
            sh.CorrelationId = this.inputSetName;
        }
        sh.InputJson = this.serialize();
        sh.NamedCredential = namedCredential;
        if (logger != null) {
            logger.setInputSetName(sh.CorrelationId);
        }

        return sh;
    }*///Commented by Sourav for Overcast uninstall

    public string getBackendMessage() {
        return this.backendMessage;
    }

    global string serialize() {
        if (dynamicBody != null) {
            return JSON.serialize(dynamicBody, true);
        }
        return JSON.serialize(this, true);
    }
    
    public static sapInvoiceList deserialize(string responsedata) {
        map<string, string> m = getOutputData(responsedata);
        string outputData = m.get('output');
        string backendMessage = m.get('backendMessage');
        if (outputData == null) {
            return new sapInvoiceList();
        }
        sapInvoiceList obj = (sapInvoiceList)JSON.deserialize(outputData, sapInvoiceList.class);
        obj.outputData = outputData;
        obj.backendMessage = backendMessage;

        return obj;
    }

    private static map<string, string> getOutputData(string responseData) {
        if (string.isblank(responsedata)) {
            throw new sapInvoiceListException('Response null for sapInvoiceList request.');
        }

        map<string, string> m = new map<string, string>();

        JSONParser jresponse = JSON.createParser(responsedata);
        jresponse.nextValue();

        boolean hasOutput = false;
        while (jresponse.nextValue() != JSONToken.END_OBJECT && jresponse.getCurrentToken() != null) {
            if (jresponse.getCurrentName() == 'output') {
                jresponse.skipChildren();
                hasOutput = true;
                continue;
            }
            if (jresponse.getCurrentName() == 'backendMessage') {
                m.put('backendMessage', (string)jresponse.readValueAs(string.class));
                continue;
            }
            if (jresponse.getCurrentName() == 'error') {
                string[] errors = (string[])jresponse.readValueAs(list<string>.class);
                throw new sapInvoiceListException(string.join(errors, ';'));
            }
        }
        if (!hasOutput) {
            throw new sapInvoiceListException('Malformed response for sapInvoiceList request.');
        }
        integer start = responsedata.indexOf(':') + 1;
        integer lastIndex = m.get('backendMessage') == null
            ? responsedata.length() - 2
            : responsedata.lastIndexOf('backendMessage');
        integer finish = responsedata.lastIndexOf('}', lastIndex) + 1;
        m.put('output', responseData.substring(start, finish));
        return m;
    }


    public transient string testResponse;
    private transient string outputData;
    private transient string backendMessage;

    //private transient map<string, overcast.TypeInfo> metadata;//Commented by Sourav for Overcast uninstall
    private transient map<string, object> dynamicBody;

    global void loadAsyncResponse(string responseBody) {
        map<string, string> m = getOutputData(responseBody);
        outputData = m.get('output');
        backendMessage = m.get('backendMessage');
        
        if (outputData != null) {
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }
    }

    global string getTopTypeName() {
        return 'BAPI_WEBINVOICE_GETLIST';
    }

    global void set(string typeName, object records) {
        if (typeName == '@testResponse') {
            dynamicBody = (map<string, object>)records;
            return;
        }
        if (dynamicBody == null) {
            dynamicBody = new map<string, object>();
        }
        
        dynamicBody.put(typeName, records);
    }
    
    global object get(string typeName) {
        if (dynamicBody == null && outputData != null) {
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }
        if (dynamicBody == null) { 
            return null;
        }
        return dynamicBody.get(typeName);
    }
/*
    global map<string, overcast.TypeInfo> getMetadata() {
        if (metadata == null) {
            metadata = new Map<String, overcast.TypeInfo>();
            metadata.putAll(sapInvoiceListMeta0.metadata);
        }
        return metadata;
    }*///Commented by Sourav for Overcast uninstall

}