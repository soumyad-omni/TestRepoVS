@isTest
private class DealModelingController_SF_Test {
    
    @testsetup
    static void testdatasetup(){
        SCP_TestDataFactory.createContact_Customsetting();      
        CastIronIntegration__c  setting = new CastIronIntegration__c ();
        setting.Name = 'CastIronIntegration';
        setting.EndPoint__c = 'https://castirondatadev.omnicell.com/QuoteHeaderSFToCRM';
        setting.QuoteHeaderUpdateEndpoint__c = 'https://castirondatadev.omnicell.com/ QuoteHeaderSFToCRMUpdate';
        insert setting;
        
        ECC_Sales_Org_to_CRM__c  setting1 = new ECC_Sales_Org_to_CRM__c ();
        setting1.Name = 'AU SalesOrg Omnicell';
        setting1.CRM_Code__c = 'O 50008662';
        insert setting1;
        ECC_Sales_Org_to_CRM__c  setting2 = new ECC_Sales_Org_to_CRM__c ();
        setting2.Name = 'MACH4 - GmbH';
        setting2.CRM_Code__c = 'O 50008654';
        insert setting2;
        ECC_Sales_Org_to_CRM__c  setting3 = new ECC_Sales_Org_to_CRM__c ();
        setting3.Name = 'Omnicell - St.Petes';
        setting3.CRM_Code__c = 'O 50008663';
        insert setting3;
        ECC_Sales_Org_to_CRM__c  setting4 = new ECC_Sales_Org_to_CRM__c ();
        setting4.Name = 'Omnicell Inc.';
        setting4.CRM_Code__c = 'O 50000029';
        insert setting4;
        ECC_Sales_Org_to_CRM__c  setting5 = new ECC_Sales_Org_to_CRM__c ();
        setting5.Name = 'Omnicell Ltd';
        setting5.CRM_Code__c = 'O 50008655';
        insert setting5;
        ECC_Sales_Org_to_CRM__c  setting6 = new ECC_Sales_Org_to_CRM__c ();
        setting6.Name = 'Omnicell SAS';
        setting6.CRM_Code__c = 'O 50011128';
        insert setting6;
        
        Default_Currency_by_Country_Code__c    setting7 = new Default_Currency_by_Country_Code__c   ();
        setting7.Name = 'AZ';
        setting7.Currency_Code__c = 'USD';
        insert setting7;

        SCP_Integration_Details__c  setting8 = new SCP_Integration_Details__c ();
        setting8.Name = 'SCP_AccountSFDCTOSAP';
        setting8.SCP_Method_Type__c = 'POST';
        setting8.SCP_Timeout__c = 120000;
        setting8.SCP_End_Point__c = 'http://sit-aloha-accounts.us-w1.cloudhub.io/AccountSFDCToSAP';
        insert setting8;
        SCP_Integration_Details__c  setting9 = new SCP_Integration_Details__c ();
        setting9.Name = 'SCP_AccountRelationshipSFDCtoSAP';
        setting9.SCP_Method_Type__c = 'POST';
        setting9.SCP_Timeout__c = 120000;
        setting9.SCP_End_Point__c = 'http://sit-aloha-accounts.us-w1.cloudhub.io/AccountRelationshipsfromSFDC';
        insert setting9;
        SCP_Integration_Details__c  setting10 = new SCP_Integration_Details__c ();
        setting10.Name = 'SCP_Mulesoft_Authorization';
        setting10.SCP_Method_Type__c = 'POST';
        setting10.SCP_Grant_Type__c='CLIENT_CREDENTIALS';
        setting10.SCP_Timeout__c = 120000;
        setting10.SCP_End_Point__c = 'https://uat-omnicell-oauth2-provider.us-w1.cloudhub.io/token';
        setting10.SCP_Key_Client_Id__c = '4682BEDF71DCD9F78329E612E42F0D2D9CA9338D2E8656F75B99BBFCA9DB8BB1sit';
        setting10.SCP_Password_Client_Secret__c = '3MVG9QBLg8QGkFeopcRhWO6XqjUDWB6W_u3esouZF6.Mmx1ak38MZs9mz3RW1PZVTsit';
        setting10.SCP_Is_Active__c = true;
        insert setting10;

        List<Product2> products = new List<Product2>();
        Product2 prod1 = new Product2(Name = 'MED-FRM-101',Family = 'Medication Systems',External_ID__c = 'MED-FRM-101',ProductCode = 'MED-FRM-101');
        Product2 prod2 = new Product2(Name = 'RENEWAL',Family = 'Finance',External_ID__c = 'RENEWAL',ProductCode = 'RENEWAL');
        Product2 prod3 = new Product2(Name = 'MSA-SUB-006',Family = 'Shared Systems',External_ID__c = 'MSA-SUB-006',ProductCode = 'MSA-SUB-006',
                                    DW_Product_Type__c = 'Subscription');
        Product2 prod4 = new Product2(Name = 'MED-FRM-101-SV',Family = 'Medication Systems',External_ID__c = 'MED-FRM-101-SV',
                                    ProductCode = 'MED-FRM-101-SV');
        
        products.add(prod1);
        products.add(prod2);
        products.add(prod3);
        products.add(prod4);
        insert products;
    } 
    
    private static testMethod void test() {
        AccountTriggerHandler.TriggerDisabled = True;
        ContactTriggerHandler.TriggerDisabled = True;
        DealCalculator_AppConnect data = new DealCalculator_AppConnect();
        DealCalculator_AppConnect.ES_MARGIN_HDR MARGIN_HDR = new DealCalculator_AppConnect.ES_MARGIN_HDR('10','10','10','10','10','10','10','10','10','10',Date.newInstance(2000,1,1),0,0,0,Date.newInstance(2000,1,1),'a','a','a',0,0,0,0,0,0,0,0,0,0,0,0,0,0);
        MARGIN_HDR.SERVICE_BOOKING = 0;
        MARGIN_HDR.ORDER_TYPE_DESC = '10';
        MARGIN_HDR.IDN_PRICE_DESC = '10';
        MARGIN_HDR.GPO_PRICE_DESC = '10';
        MARGIN_HDR.IDN_PRICE_LIST = '10';
        MARGIN_HDR.SERVICE_PRICE_DESC = '10';
        data.ES_MARGIN_HDR = MARGIN_HDR;
        DealModelingController_SF.DealModelWrapper wrapper = new DealModelingController_SF.DealModelWrapper(data, false, '');  
        wrapper.usaListPrice = 100;
        wrapper.nonDiscountablePrice = 100;
        wrapper.totalMaterial = 100;
        wrapper.contractListPrice = 100;
        wrapper.discountable = 100;
        wrapper.totalLabor = 100;
        wrapper.discount = 100;
        wrapper.bookingPrice = 100;
        wrapper.totalOverhead = 100;
        wrapper.customerValuePrice = 100;
        wrapper.totalMargin = 100;
        wrapper.totalProductCost = 100;
        wrapper.commissionValue = 100;
        wrapper.marginProduct = 100;
        wrapper.leaseTerm = 100;
        wrapper.freeLeaseTerm = 100;
        wrapper.ContractListPricePercentage = 100;
        wrapper.USAListPricePercentage = 100;
        wrapper.orderNetPrice = 100;
        wrapper.gsaNetPrice = 100;
        wrapper.gsaPrice = 100;
        wrapper.discountAmount = 100;
        wrapper.discountPercentage = 100;
        wrapper.usaListPrice = 100;
        AccountCreateController.isFirstRun= false;
        
        DealCalculator_AppConnect.ZCRMFM_MARGIN_OVERCAST data2 = new DealCalculator_AppConnect.ZCRMFM_MARGIN_OVERCAST(10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00);
        
        
        DealCalculator_AppConnect.ET_MARGIN_DETAILS data4 = new DealCalculator_AppConnect.ET_MARGIN_DETAILS('AA','AA','AA','AA','AA','AA','AA','AA','AA',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'AA','AA','AA','AA','AA','AA','AA','AA',Date.newInstance(2000,1,1),'AA','AA','AA','AA','AA','AA','AA','AA','AA','AA','AA','AA');
        data4.PROD_CLASS_DESC='AA';
        data4.PROD_TYPE_DESC='AA';
        data4.QUANTITY=10.00;
        data4.ITEM_CATEGORY='AA';
        data4.ITEM_CATEGORY_DESC='AA';
        data4.BOOKING_DATE= Date.newInstance(2000,1,1);
        data4.VALUE_TO_CUSTOMER=10.00;
        data4.VALUE_TO_CUSTOMER_EXT=10.00;
        data4.VALUE_CURRENCY='AA';
        data4.REBATE_COMPETITOR_BUYOUT=10.00;
        data4.PARTY_INT_RATE_3RD=10.00;
        data4.PARTY_DEAL_SPREAD_3RD=10.00;
        data4.NETVALUE=10.00;
        data4.NETVALUE_EXT=10.00;
        data4.NETVALUE_CURRENCY='AA';
        data4.DISCOUNT=10.00;
        data4.DISCOUNT_EXT=10.00;
        data4.BILL_VAL_CUST=10.00;
        data4.BILL_VAL_CUST_EXT=10.00;
        data4.BILLING_URRENCY='AA';
        data4.BOOK_VAL_OMNICELL=10.00;
        data4.BOOK_VAL_OMNICELL_EXT=10.00;
        data4.BOOKING_CURRENCY='AA';
        data4.COMM_VAL_OMNICELL=10.00;
        data4.COMM_VAL_OMNICELL_EXT=10.00;
        data4.COMM_CURRENCY='AA';
        data4.COST_TO_OMNICELL=10.00;
        data4.COST_TO_OMNICELL_EXT=10.00;
        data4.COST_CURRENCY='AA';
        data4.LABOR_OMNICELL=10.00;
        data4.LABOR_OMNICELL_EXT=10.00;
        data4.USA_LIST_PRICE=10.00;
        data4.USA_LIST_CURRENCY='AA';
        data4.CONTRACT_LIST_PRICE=10.00;
        data4.CONTRACT_LPRICE_EXT=10.00;
        data4.CONTRACT_LIST_CURRENCY='AA';
        data4.MARGIN=10.00;
        data4.MARGIN_PERC='AA';
        data4.SERVICE_COST=10.00;
        data4.KPI_01_AMT=10.00;
        data4.KPI_01_CURR='AA';
        data4.KPI_02_AMT=10.00;
        data4.KPI_02_CURR='AA';
        data4.KPI_03_AMT=10.00;
        data4.KPI_03_CURR='AA';
        data4.KPI_04_AMT=10.00;
        data4.KPI_04_CURR='AA';
        data4.KPI_05_AMT=10.00;
        data4.KPI_05_CURR='AA';
        data4.KPI_06_AMT=10.00;
        data4.KPI_06_CURR='AA';
        data4.KPI_07_AMT=10.00;
        data4.KPI_07_CURR='AA';
        data4.KPI_08_AMT=10.00;
        data4.KPI_08_CURR='AA';
        data4.KPI_09_AMT=10.00;
        data4.KPI_09_CURR='AA';
        data4.KPI_10_AMT=10.00;
        data4.KPI_10_CURR='AA';
        data4.LINKED_OPP_ID='AA';
        data4.LINKED_ORDER_ID='AA';
        data4.OVERHEAD=10.00;
        data4.PO_NUMBER_SHIP='AA';
        data4.NON_DISCOUNTABLE='AA';
        
        DealModelingController_SF.saveCalculation(JSON.serialize(wrapper), null);
        DealModelingController_SF.getQuote('', '', '', '', '');
        DealModelingController_SF.getProducts(new List<String>());
        QuoteLineTriggerHandler.TriggerDisabled = True;
        OpportunityTriggerHandler.TriggerDisabled = true;
        userTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        AccountCreateController.isFirstRun= false;
        Quote quote = TestDataFactory.createTestQuote1();
        
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = quote.Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Rebate_Buyout_Adjustment__c = 400.00;
        //Added by Sravan
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        //ql.Conga_Supplement_Version__c = 1;
        Product2 prod = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '123456',ProductCode = 'FREIGHT');
        insert prod;
        ql.Product__c = prod.id;
        System.debug('Prod : '+ql.product__r.productcode);
        Quote_Line__c ql2 = new Quote_Line__c();
        ql2.RecordTypeId = qlNonConfigRecordType.id;
        ql2.Quote__c = ql.Quote__c;
        ql2.Higher_Level_Item__c = 0;
        ql2.Quantity__c = 1;
        ql2.SAP_Line_Number__c = 600;
        ql2.SAP_Line_Item_GUID__c = '402';
        ql2.Contract_List_Price__c = 200;
        ql2.Conga_product__c = 'LEASE BUYOUT';
        ql2.Rebate_Buyout_Adjustment__c = 400.00;
        //Added by Sravan
        ql2.Material_Type__c = 'SERVICE';
        ql2.Part_of_a_Bundle__c = FALSE; 
        ql2.Customer_Price__c = 200;
        //ql1.Conga_Product__c = 'TestProduct';
        Product2 prod2 = new Product2(Name = 'LEASE BUYOUT',Family = 'test',External_ID__c = '12345678',ProductCode = 'LEASE BUYOUT');
        insert prod2;
        ql2.Product__c = prod2.id;
        ql2.Sales_Text__c = 'test';
        
        
        Quote_Line__c ql3 = new Quote_Line__c();
        ql3.RecordTypeId = qlNonConfigRecordType.id;
        ql3.Quote__c = ql.Quote__c;
        ql3.Higher_Level_Item__c = 0;
        ql3.Quantity__c = 1;
        ql3.SAP_Line_Number__c = 800;
        ql3.SAP_Line_Item_GUID__c = '402';
        ql3.Contract_List_Price__c = 200;
        ql3.Conga_product__c = 'FREIGHT';
        ql3.Rebate_Buyout_Adjustment__c = 400.00;
        //Added by Sravan
        ql3.Material_Type__c = 'Product';
        ql3.Part_of_a_Bundle__c = FALSE; 
        ql3.Customer_Price__c = 200;
        //ql1.Conga_Product__c = 'TestProduct';
        Product2 prod3 = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '12845678',ProductCode = 'FREIGHT');
        insert prod3;
        ql3.Product__c = prod3.id;
        ql3.Sales_Text__c = 'test';
        
        List<Quote_Line__c> qlList = new List<Quote_Line__c>();
        qlList.add(ql);
        qlList.add(ql2);
        qlList.add(ql3);
        Product_Sales_Org__c p = new Product_Sales_Org__c();
        p.Product__c = prod2.id;
        p.Sales_Org__c = 'OM01';
        p.Key__c = '000000000000295107_OM01_01';
        insert p;
        
        Product_Sales_Org__c p1 = new Product_Sales_Org__c();
        p1.Product__c = prod.id;
        p1.Sales_Org__c = 'OM01';
        p1.Key__c = '000000000000295107_OM01_02';
        insert p1;
        
        Product_Sales_Org__c p2 = new Product_Sales_Org__c();
        p2.Product__c = prod3.id;
        p2.Sales_Org__c = 'OM01';
        p2.Key__c = '000000000000295107_OM01_03';
        insert p2;
        
        
        test.startTest();
        insert qlList;
        DealCalculator_FieldPopulation.prepareFieldValue(quote);        
    }
    
    private static testMethod void test1() {
        AccountTriggerHandler.TriggerDisabled = True;
        ContactTriggerHandler.TriggerDisabled = True;
        DealCalculator_AppConnect data = new DealCalculator_AppConnect();
        DealCalculator_AppConnect.ES_MARGIN_HDR MARGIN_HDR = new DealCalculator_AppConnect.ES_MARGIN_HDR('10','10','10','10','10','10','10','10','10','10',Date.newInstance(2000,1,1),0,0,0,Date.newInstance(2000,1,1),'a','a','a',0,0,0,0,0,0,0,0,0,0,0,0,0,0);
        MARGIN_HDR.SERVICE_BOOKING = 0;
        MARGIN_HDR.ORDER_TYPE_DESC = '10';
        MARGIN_HDR.IDN_PRICE_DESC = '10';
        MARGIN_HDR.GPO_PRICE_DESC = '10';
        MARGIN_HDR.IDN_PRICE_LIST = '10';
        MARGIN_HDR.SERVICE_PRICE_DESC = '10';
        data.ES_MARGIN_HDR = MARGIN_HDR;
        DealModelingController_SF.DealModelWrapper wrapper = new DealModelingController_SF.DealModelWrapper(data, false, '');  
        wrapper.usaListPrice = 100;
        wrapper.nonDiscountablePrice = 100;
        wrapper.totalMaterial = 100;
        wrapper.contractListPrice = 100;
        wrapper.discountable = 100;
        wrapper.totalLabor = 100;
        wrapper.discount = 100;
        wrapper.bookingPrice = 100;
        wrapper.totalOverhead = 100;
        wrapper.customerValuePrice = 100;
        wrapper.totalMargin = 100;
        wrapper.totalProductCost = 100;
        wrapper.commissionValue = 100;
        wrapper.marginProduct = 100;
        wrapper.leaseTerm = 100;
        wrapper.freeLeaseTerm = 100;
        wrapper.ContractListPricePercentage = 100;
        wrapper.USAListPricePercentage = 100;
        wrapper.orderNetPrice = 100;
        wrapper.gsaNetPrice = 100;
        wrapper.gsaPrice = 100;
        wrapper.discountAmount = 100;
        wrapper.discountPercentage = 100;
        wrapper.usaListPrice = 100;
        AccountCreateController.isFirstRun= false;
        
        DealCalculator_AppConnect.ZCRMFM_MARGIN_OVERCAST data2 = new DealCalculator_AppConnect.ZCRMFM_MARGIN_OVERCAST(10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00);
        
        
        DealCalculator_AppConnect.ET_MARGIN_DETAILS data4 = new DealCalculator_AppConnect.ET_MARGIN_DETAILS('AA','AA','AA','AA','AA','AA','AA','AA','AA',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'AA','AA','AA','AA','AA','AA','AA','AA',Date.newInstance(2000,1,1),'AA','AA','AA','AA','AA','AA','AA','AA','AA','AA','AA','AA');
        data4.PROD_CLASS_DESC='AA';
        data4.PROD_TYPE_DESC='AA';
        data4.QUANTITY=10.00;
        data4.ITEM_CATEGORY='AA';
        data4.ITEM_CATEGORY_DESC='AA';
        data4.BOOKING_DATE= Date.newInstance(2000,1,1);
        data4.VALUE_TO_CUSTOMER=10.00;
        data4.VALUE_TO_CUSTOMER_EXT=10.00;
        data4.VALUE_CURRENCY='AA';
        data4.REBATE_COMPETITOR_BUYOUT=10.00;
        data4.PARTY_INT_RATE_3RD=10.00;
        data4.PARTY_DEAL_SPREAD_3RD=10.00;
        data4.NETVALUE=10.00;
        data4.NETVALUE_EXT=10.00;
        data4.NETVALUE_CURRENCY='AA';
        data4.DISCOUNT=10.00;
        data4.DISCOUNT_EXT=10.00;
        data4.BILL_VAL_CUST=10.00;
        data4.BILL_VAL_CUST_EXT=10.00;
        data4.BILLING_URRENCY='AA';
        data4.BOOK_VAL_OMNICELL=10.00;
        data4.BOOK_VAL_OMNICELL_EXT=10.00;
        data4.BOOKING_CURRENCY='AA';
        data4.COMM_VAL_OMNICELL=10.00;
        data4.COMM_VAL_OMNICELL_EXT=10.00;
        data4.COMM_CURRENCY='AA';
        data4.COST_TO_OMNICELL=10.00;
        data4.COST_TO_OMNICELL_EXT=10.00;
        data4.COST_CURRENCY='AA';
        data4.LABOR_OMNICELL=10.00;
        data4.LABOR_OMNICELL_EXT=10.00;
        data4.USA_LIST_PRICE=10.00;
        data4.USA_LIST_CURRENCY='AA';
        data4.CONTRACT_LIST_PRICE=10.00;
        data4.CONTRACT_LPRICE_EXT=10.00;
        data4.CONTRACT_LIST_CURRENCY='AA';
        data4.MARGIN=10.00;
        data4.MARGIN_PERC='AA';
        data4.SERVICE_COST=10.00;
        data4.KPI_01_AMT=10.00;
        data4.KPI_01_CURR='AA';
        data4.KPI_02_AMT=10.00;
        data4.KPI_02_CURR='AA';
        data4.KPI_03_AMT=10.00;
        data4.KPI_03_CURR='AA';
        data4.KPI_04_AMT=10.00;
        data4.KPI_04_CURR='AA';
        data4.KPI_05_AMT=10.00;
        data4.KPI_05_CURR='AA';
        data4.KPI_06_AMT=10.00;
        data4.KPI_06_CURR='AA';
        data4.KPI_07_AMT=10.00;
        data4.KPI_07_CURR='AA';
        data4.KPI_08_AMT=10.00;
        data4.KPI_08_CURR='AA';
        data4.KPI_09_AMT=10.00;
        data4.KPI_09_CURR='AA';
        data4.KPI_10_AMT=10.00;
        data4.KPI_10_CURR='AA';
        data4.LINKED_OPP_ID='AA';
        data4.LINKED_ORDER_ID='AA';
        data4.OVERHEAD=10.00;
        data4.PO_NUMBER_SHIP='AA';
        data4.NON_DISCOUNTABLE='AA';
        
        DealModelingController_SF.saveCalculation(JSON.serialize(wrapper), null);
        DealModelingController_SF.getQuote('', '', '', '', '');
        DealModelingController_SF.getProducts(new List<String>());
        QuoteLineTriggerHandler.TriggerDisabled = True;
        OpportunityTriggerHandler.TriggerDisabled = true;
        userTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        AccountCreateController.isFirstRun= false;
        
        Quote quote = new Quote();
        quote.name = 'Test Quote';
        Opportunity opp = TestDataFactory.createOppWithAccount();  
        quote.OpportunityId = opp.Id;
        System.debug('#### Opportunity'+ QuoteTriggerHandler.TriggerDisabled);
        Contact con = new Contact();
        con.LastName='Smith'+ system.now().millisecond();
        con.Is_Active__c ='Y';
        con.AccountId = opp.AccountId;
        con.Omnicell_Job_Code__c = 'D3';
        insert con;
        quote.ContactId= con.id;
        QuoteTriggerHandler.TriggerDisabled= false;
        System.debug('#### Contact'+ QuoteTriggerHandler.TriggerDisabled);
        quote.Bill_to_Account__c = opp.AccountId;
        quote.Region__c='Northeast';
        quote.Pricing_Reference_Date__c=system.today();
        quote.Requested_Delivery_Date__c = system.today();
        quote.Booking_Date__c=system.today();
        quote.ExpirationDate = system.today();
        quote.SAP_Last_Line_Number__c = 200;
        quote.EOL_Date__c = System.today()+200;
        quote.Supplement_Version__c = 2;
        quote.Status = 'E0009';
        quote.Shipping_Contact__c= con.Id;
        quote.Order_Type__c = 'ZQRL';
        System.debug('####'+ QuoteTriggerHandler.TriggerDisabled);
        
        quote.Quote_Number__c = '1234';
        quote.Create_Sales_Order__c = true;
        
        insert quote;
        
        
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = quote.Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.SAP_Line_Number__c = 0;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Rebate_Buyout_Adjustment__c = 400.00;
        //Added by Sravan
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'TestProduct-SV';
        ql.Contract_List_Price__c = 200;
        //ql.Conga_Supplement_Version__c = 1;
        Product2 prod = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '123456',ProductCode = 'FREIGHT');
        insert prod;
        ql.Product__c = prod.id;
        System.debug('Prod : '+ql.product__r.productcode);
        Quote_Line__c ql2 = new Quote_Line__c();
        ql2.RecordTypeId = qlNonConfigRecordType.id;
        ql2.Quote__c = ql.Quote__c;
        ql2.Higher_Level_Item__c = 0;
        ql2.Quantity__c = 1;
        ql2.SAP_Line_Number__c = 600;
        ql2.SAP_Line_Item_GUID__c = '402';
        ql2.Contract_List_Price__c = 200;
        ql2.Conga_product__c = 'LEASE BUYOUT';
        ql2.Rebate_Buyout_Adjustment__c = 400.00;
        //Added by Sravan
        ql2.Material_Type__c = 'SERVICE';
        ql2.Part_of_a_Bundle__c = FALSE; 
        ql2.Customer_Price__c = 200;
        //ql1.Conga_Product__c = 'TestProduct';
        Product2 prod2 = new Product2(Name = 'LEASE BUYOUT',Family = 'test',External_ID__c = '12345678',ProductCode = 'LEASE BUYOUT');
        insert prod2;
        ql2.Product__c = prod2.id;
        ql2.Sales_Text__c = 'test';
        
        
        Quote_Line__c ql3 = new Quote_Line__c();
        ql3.RecordTypeId = qlNonConfigRecordType.id;
        ql3.Quote__c = ql.Quote__c;
        ql3.Higher_Level_Item__c = 0;
        ql3.Quantity__c = 1;
        ql3.SAP_Line_Number__c = 800;
        ql3.SAP_Line_Item_GUID__c = '402';
        ql3.Contract_List_Price__c = 200;
        ql3.Conga_product__c = 'FREIGHT';
        ql3.Rebate_Buyout_Adjustment__c = 400.00;
        //Added by Sravan
        ql3.Material_Type__c = 'Product';
        ql3.Part_of_a_Bundle__c = FALSE; 
        ql3.Customer_Price__c = 200;
        //ql1.Conga_Product__c = 'TestProduct';
        Product2 prod3 = new Product2(Name = 'FREIGHT',Family = 'test',External_ID__c = '12845678',ProductCode = 'FREIGHT');
        insert prod3;
        ql3.Product__c = prod3.id;
        ql3.Sales_Text__c = 'test';
        
        List<Quote_Line__c> qlList = new List<Quote_Line__c>();
        qlList.add(ql);
        qlList.add(ql2);
        qlList.add(ql3);
        Product_Sales_Org__c p = new Product_Sales_Org__c();
        p.Product__c = prod2.id;
        p.Sales_Org__c = 'OM01';
        p.Key__c = '000000000000295107_OM01_01';
        insert p;
        
        Product_Sales_Org__c p1 = new Product_Sales_Org__c();
        p1.Product__c = prod.id;
        p1.Sales_Org__c = 'OM01';
        p1.Key__c = '000000000000295107_OM01_02';
        insert p1;
        
        Product_Sales_Org__c p2 = new Product_Sales_Org__c();
        p2.Product__c = prod3.id;
        p2.Sales_Org__c = 'OM01';
        p2.Key__c = '000000000000295107_OM01_03';
        insert p2;
        
        
        test.startTest();
        insert qlList;
        DealCalculator_FieldPopulation.prepareFieldValue(quote);
        
    }

    private static testMethod void test2() {
        AccountTriggerHandler.TriggerDisabled = True;
        ContactTriggerHandler.TriggerDisabled = True;
        DealCalculator_AppConnect data = new DealCalculator_AppConnect();
        DealCalculator_AppConnect.ES_MARGIN_HDR MARGIN_HDR = new DealCalculator_AppConnect.ES_MARGIN_HDR('10','10','10','10','10','10','10','10','10','10',Date.newInstance(2000,1,1),0,0,0,Date.newInstance(2000,1,1),'a','a','a',0,0,0,0,0,0,0,0,0,0,0,0,0,0);
        MARGIN_HDR.SERVICE_BOOKING = 0;
        MARGIN_HDR.ORDER_TYPE_DESC = '10';
        MARGIN_HDR.IDN_PRICE_DESC = '10';
        MARGIN_HDR.GPO_PRICE_DESC = '10';
        MARGIN_HDR.IDN_PRICE_LIST = '10';
        MARGIN_HDR.SERVICE_PRICE_DESC = '10';
        data.ES_MARGIN_HDR = MARGIN_HDR;
        DealModelingController_SF.DealModelWrapper wrapper = new DealModelingController_SF.DealModelWrapper(data, false, '');  
        wrapper.usaListPrice = 100;
        wrapper.nonDiscountablePrice = 100;
        wrapper.totalMaterial = 100;
        wrapper.contractListPrice = 100;
        wrapper.discountable = 100;
        wrapper.totalLabor = 100;
        wrapper.discount = 100;
        wrapper.bookingPrice = 100;
        wrapper.totalOverhead = 100;
        wrapper.customerValuePrice = 100;
        wrapper.totalMargin = 100;
        wrapper.totalProductCost = 100;
        wrapper.commissionValue = 100;
        wrapper.marginProduct = 100;
        wrapper.leaseTerm = 100;
        wrapper.freeLeaseTerm = 100;
        wrapper.ContractListPricePercentage = 100;
        wrapper.USAListPricePercentage = 100;
        wrapper.orderNetPrice = 100;
        wrapper.gsaNetPrice = 100;
        wrapper.gsaPrice = 100;
        wrapper.discountAmount = 100;
        wrapper.discountPercentage = 100;
        wrapper.usaListPrice = 100;
        AccountCreateController.isFirstRun= false;
        
        DealCalculator_AppConnect.ZCRMFM_MARGIN_OVERCAST data2 = new DealCalculator_AppConnect.ZCRMFM_MARGIN_OVERCAST(10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00,10.00);
        
        
        DealCalculator_AppConnect.ET_MARGIN_DETAILS data4 = new DealCalculator_AppConnect.ET_MARGIN_DETAILS('AA','AA','AA','AA','AA','AA','AA','AA','AA',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'AA','AA','AA','AA','AA','AA','AA','AA',Date.newInstance(2000,1,1),'AA','AA','AA','AA','AA','AA','AA','AA','AA','AA','AA','AA');
        data4.PROD_CLASS_DESC='AA';
        data4.PROD_TYPE_DESC='AA';
        data4.QUANTITY=10.00;
        data4.ITEM_CATEGORY='AA';
        data4.ITEM_CATEGORY_DESC='AA';
        data4.BOOKING_DATE= Date.newInstance(2000,1,1);
        data4.VALUE_TO_CUSTOMER=10.00;
        data4.VALUE_TO_CUSTOMER_EXT=10.00;
        data4.VALUE_CURRENCY='AA';
        data4.REBATE_COMPETITOR_BUYOUT=10.00;
        data4.PARTY_INT_RATE_3RD=10.00;
        data4.PARTY_DEAL_SPREAD_3RD=10.00;
        data4.NETVALUE=10.00;
        data4.NETVALUE_EXT=10.00;
        data4.NETVALUE_CURRENCY='AA';
        data4.DISCOUNT=10.00;
        data4.DISCOUNT_EXT=10.00;
        data4.BILL_VAL_CUST=10.00;
        data4.BILL_VAL_CUST_EXT=10.00;
        data4.BILLING_URRENCY='AA';
        data4.BOOK_VAL_OMNICELL=10.00;
        data4.BOOK_VAL_OMNICELL_EXT=10.00;
        data4.BOOKING_CURRENCY='AA';
        data4.COMM_VAL_OMNICELL=10.00;
        data4.COMM_VAL_OMNICELL_EXT=10.00;
        data4.COMM_CURRENCY='AA';
        data4.COST_TO_OMNICELL=10.00;
        data4.COST_TO_OMNICELL_EXT=10.00;
        data4.COST_CURRENCY='AA';
        data4.LABOR_OMNICELL=10.00;
        data4.LABOR_OMNICELL_EXT=10.00;
        data4.USA_LIST_PRICE=10.00;
        data4.USA_LIST_CURRENCY='AA';
        data4.CONTRACT_LIST_PRICE=10.00;
        data4.CONTRACT_LPRICE_EXT=10.00;
        data4.CONTRACT_LIST_CURRENCY='AA';
        data4.MARGIN=10.00;
        data4.MARGIN_PERC='AA';
        data4.SERVICE_COST=10.00;
        data4.KPI_01_AMT=10.00;
        data4.KPI_01_CURR='AA';
        data4.KPI_02_AMT=10.00;
        data4.KPI_02_CURR='AA';
        data4.KPI_03_AMT=10.00;
        data4.KPI_03_CURR='AA';
        data4.KPI_04_AMT=10.00;
        data4.KPI_04_CURR='AA';
        data4.KPI_05_AMT=10.00;
        data4.KPI_05_CURR='AA';
        data4.KPI_06_AMT=10.00;
        data4.KPI_06_CURR='AA';
        data4.KPI_07_AMT=10.00;
        data4.KPI_07_CURR='AA';
        data4.KPI_08_AMT=10.00;
        data4.KPI_08_CURR='AA';
        data4.KPI_09_AMT=10.00;
        data4.KPI_09_CURR='AA';
        data4.KPI_10_AMT=10.00;
        data4.KPI_10_CURR='AA';
        data4.LINKED_OPP_ID='AA';
        data4.LINKED_ORDER_ID='AA';
        data4.OVERHEAD=10.00;
        data4.PO_NUMBER_SHIP='AA';
        data4.NON_DISCOUNTABLE='AA';
        
        DealModelingController_SF.saveCalculation(JSON.serialize(wrapper), null);
        DealModelingController_SF.getQuote('', '', '', '', '');
        DealModelingController_SF.getProducts(new List<String>());
        QuoteLineTriggerHandler.TriggerDisabled = True;
        OpportunityTriggerHandler.TriggerDisabled = true;
        userTriggerHandler.TriggerDisabled = true;
        AccountTriggerHandler.TriggerDisabled = true;
        AccountCreateController.isFirstRun= false;
        
        Quote quote = new Quote();
        quote.name = 'Test Quote';
        Opportunity opp = TestDataFactory.createOppWithAccount();  
        quote.OpportunityId = opp.Id;
        System.debug('#### Opportunity'+ QuoteTriggerHandler.TriggerDisabled);
        Contact con = new Contact();
        con.LastName='Smith'+ system.now().millisecond();
        con.Is_Active__c ='Y';
        con.AccountId = opp.AccountId;
        con.Omnicell_Job_Code__c = 'D3';
        insert con;
        quote.ContactId= con.id;
        QuoteTriggerHandler.TriggerDisabled= false;
        System.debug('#### Contact'+ QuoteTriggerHandler.TriggerDisabled);
        quote.Bill_to_Account__c = opp.AccountId;
        quote.Region__c='Northeast';
        quote.Pricing_Reference_Date__c=system.today();
        quote.Requested_Delivery_Date__c = system.today();
        quote.Booking_Date__c=system.today();
        quote.ExpirationDate = system.today();
        quote.SAP_Last_Line_Number__c = 200;
        quote.EOL_Date__c = System.today()+200;
        quote.Supplement_Version__c = 2;
        quote.Status = 'E0009';
        quote.Shipping_Contact__c= con.Id;
        quote.Order_Type__c = 'ZQRL';
        System.debug('####'+ QuoteTriggerHandler.TriggerDisabled);
        quote.Quote_Number__c = '1234';
        quote.Create_Sales_Order__c = true;
        insert quote;
        Quote_Line__c ql = new Quote_Line__c();
        RecordType qlNonConfigRecordType = [SELECT Id FROM RecordType WHERE SobjectType = 'Quote_Line__c' AND Name = 'Non-Configurator Product'];
        ql.RecordTypeId = qlNonConfigRecordType.id;
        ql.Quote__c = quote.Id;
        ql.Higher_Level_Item__c = 0;
        ql.Quantity__c = 1;
        ql.SAP_Line_Number__c = 200;
        ql.SAP_Line_Item_GUID__c = '400';
        ql.Sales_Text__c = 'test';
        ql.Rebate_Buyout_Adjustment__c = 400.00;
        ql.Material_Type__c = 'PRODUCT';
        ql.Part_of_a_Bundle__c = true;
        ql.Customer_Price__c = 200;
        ql.Conga_Product__c = 'MED-FRM-101';
        ql.Contract_List_Price__c = 200;
        ql.Par_Location__c = 'PAR 1';
        Product2 prod = [Select Id,External_ID__c,ProductCode From Product2 Where ProductCode = 'MED-FRM-101'];
        ql.Product__c = prod.id;
        System.debug('Prod : '+ql.product__r.productcode);
        Quote_Line__c ql2 = new Quote_Line__c();
        ql2.RecordTypeId = qlNonConfigRecordType.id;
        ql2.Quote__c = ql.Quote__c;
        ql2.Higher_Level_Item__c = 200;
        ql2.Quantity__c = 1;
        ql2.SAP_Line_Number__c = 201;
        ql2.SAP_Line_Item_GUID__c = '401';
        ql2.Contract_List_Price__c = 200;
        ql2.Conga_product__c = 'MED-FRM-101-SV';
        ql2.Rebate_Buyout_Adjustment__c = 400.00;
        ql2.Material_Type__c = 'SERVICE';
        ql2.Part_of_a_Bundle__c = FALSE; 
        ql2.Customer_Price__c = 200;
        ql2.Par_Location__c = 'PAR 1';
        Product2 prod2 = [Select Id,External_ID__c,ProductCode From Product2 Where ProductCode = 'MED-FRM-101-SV'];
        ql2.Product__c = prod2.id;
        ql2.Sales_Text__c = 'test';
        Quote_Line__c ql3 = new Quote_Line__c();
        ql3.RecordTypeId = qlNonConfigRecordType.id;
        ql3.Quote__c = ql.Quote__c;
        ql3.Higher_Level_Item__c = 0;
        ql3.Quantity__c = 1;
        ql3.SAP_Line_Number__c = 400;
        ql3.SAP_Line_Item_GUID__c = '402';
        ql3.Contract_List_Price__c = 200;
        ql3.Conga_product__c = 'MSA-SUB-006';
        ql3.Rebate_Buyout_Adjustment__c = 400.00;
        ql3.Material_Type__c = 'Product';
        ql3.Part_of_a_Bundle__c = FALSE; 
        ql3.Customer_Price__c = 200;
        ql3.Par_Location__c = 'PAR 1';
        Product2 prod3 = [Select Id,External_ID__c,ProductCode,DW_Product_Type__c From Product2 Where ProductCode = 'MSA-SUB-006'];
        ql3.Product__c = prod3.id;
        ql3.Sales_Text__c = 'test';
        
        Quote_Line__c ql4 = new Quote_Line__c();
        ql4.RecordTypeId = qlNonConfigRecordType.id;
        ql4.Quote__c = ql.Quote__c;
        ql4.Higher_Level_Item__c = 0;
        ql4.Quantity__c = 1;
        ql4.SAP_Line_Number__c = 600;
        ql4.SAP_Line_Item_GUID__c = '402';
        ql4.Contract_List_Price__c = 200;
        ql4.Conga_product__c = 'MSA-SUB-006';
        ql4.Rebate_Buyout_Adjustment__c = 400.00;
        ql4.Material_Type__c = 'Product';
        ql4.Part_of_a_Bundle__c = FALSE; 
        ql4.Customer_Price__c = 200;
        ql4.Par_Location__c = 'PAR 2';
        ql4.Product__c = prod3.id;
        ql4.Sales_Text__c = 'test';

        Quote_Line__c ql5 = new Quote_Line__c();
        ql5.RecordTypeId = qlNonConfigRecordType.id;
        ql5.Quote__c = ql.Quote__c;
        ql5.Higher_Level_Item__c = 0;
        ql5.Quantity__c = 1;
        ql5.SAP_Line_Number__c = 800;
        ql5.SAP_Line_Item_GUID__c = '402';
        ql5.Contract_List_Price__c = 200;
        ql5.Conga_product__c = 'RENEWAL';
        ql5.Rebate_Buyout_Adjustment__c = 400.00;
        ql5.Material_Type__c = 'Product';
        ql5.Part_of_a_Bundle__c = FALSE; 
        ql5.Customer_Price__c = 200;
        ql5.Par_Location__c = 'PAR 1';
        Product2 prod4 = [Select Id,External_ID__c,ProductCode,DW_Product_Type__c From Product2 Where ProductCode = 'RENEWAL'];
        ql5.Product__c = prod4.id;
        ql5.Pricing_Reference_Model__c = prod.Id;
        ql5.Sales_Text__c = 'test';

        Quote_Line__c ql6 = new Quote_Line__c();
        ql6.RecordTypeId = qlNonConfigRecordType.id;
        ql6.Quote__c = ql.Quote__c;
        ql6.Higher_Level_Item__c = 0;
        ql6.Quantity__c = 1;
        ql6.SAP_Line_Number__c = 1000;
        ql6.SAP_Line_Item_GUID__c = '402';
        ql6.Contract_List_Price__c = 200;
        ql6.Conga_product__c = 'RENEWAL';
        ql6.Rebate_Buyout_Adjustment__c = 400.00;
        ql6.Material_Type__c = 'Product';
        ql6.Part_of_a_Bundle__c = FALSE; 
        ql6.Customer_Price__c = 200;
        ql6.Par_Location__c = 'PAR 2';
        ql6.Product__c = prod4.id;
        ql6.Pricing_Reference_Model__c = prod.Id;
        ql6.Sales_Text__c = 'test';

        List<Quote_Line__c> qlList = new List<Quote_Line__c>();
        qlList.add(ql);
        qlList.add(ql2);
        qlList.add(ql3);
        qlList.add(ql4);
        qlList.add(ql5);
        qlList.add(ql6);
        Product_Sales_Org__c p = new Product_Sales_Org__c();
        p.Product__c = prod2.id;
        p.Sales_Org__c = 'OM01';
        p.Key__c = '000000000000295107_OM01_01';
        insert p;
        
        Product_Sales_Org__c p1 = new Product_Sales_Org__c();
        p1.Product__c = prod.id;
        p1.Sales_Org__c = 'OM01';
        p1.Key__c = '000000000000295107_OM01_02';
        insert p1;
        
        Product_Sales_Org__c p2 = new Product_Sales_Org__c();
        p2.Product__c = prod3.id;
        p2.Sales_Org__c = 'OM01';
        p2.Key__c = '000000000000295107_OM01_03';
        insert p2;

        insert qlList;
        DealCalculator_FieldPopulation.prepareFieldValue(quote);        
    }    
}