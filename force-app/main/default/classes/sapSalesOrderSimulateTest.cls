/* 
 * Generated by Overcast UTC 2018-10-24 23:22:45Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
@istest
private class sapSalesOrderSimulateTest {
    @istest
    private static void testsapSalesOrderSimulate() {
        sapSalesOrderSimulate actual = new sapSalesOrderSimulate();
        system.assertNotEquals(null, actual.BAPI_SALESORDER_SIMULATE);
        system.assertNotEquals(null, actual.BILLING_PARTY);
        system.assertNotEquals(null, actual.RETURN_x);
        system.assertNotEquals(null, actual.SHIP_TO_PARTY);
        system.assertNotEquals(null, actual.SOLD_TO_PARTY);
        system.assertNotEquals(null, actual.ORDER_HEADER_IN);
        system.assertNotEquals(null, actual.EXTENSIONIN);
        system.assertNotEquals(null, actual.MESSAGETABLE);
        system.assertNotEquals(null, actual.ORDER_CCARD);
        system.assertNotEquals(null, actual.ORDER_CCARD_EX);
        system.assertNotEquals(null, actual.ORDER_CFGS_BLOB);
        system.assertNotEquals(null, actual.ORDER_CFGS_INST);
        system.assertNotEquals(null, actual.ORDER_CFGS_PART_OF);
        system.assertNotEquals(null, actual.ORDER_CFGS_REF);
        system.assertNotEquals(null, actual.ORDER_CFGS_VALUE);
        system.assertNotEquals(null, actual.ORDER_CONDITION_EX);
        system.assertNotEquals(null, actual.ORDER_INCOMPLETE);
        system.assertNotEquals(null, actual.ORDER_ITEMS_IN);
        system.assertNotEquals(null, actual.ORDER_ITEMS_OUT);
        system.assertNotEquals(null, actual.ORDER_PARTNERS);
        system.assertNotEquals(null, actual.ORDER_SCHEDULE_EX);
        system.assertNotEquals(null, actual.ORDER_SCHEDULE_IN);
        system.assertNotEquals(null, actual.PARTNERADDRESSES);
    }

    @istest
    private static void TestBAPI_SALESORDER_SIMULATE() {
        sapSalesOrderSimulate.BAPI_SALESORDER_SIMULATE actual = new sapSalesOrderSimulate.BAPI_SALESORDER_SIMULATE('a','a');

        system.assertEquals('a', actual.SALESDOCUMENT);
        system.assertEquals('a', actual.CONVERT_PARVW_AUART);

        sapSalesOrderSimulate.BAPI_SALESORDER_SIMULATE actual0 = new sapSalesOrderSimulate.BAPI_SALESORDER_SIMULATE();
    }

    @istest
    private static void TestBILLING_PARTY() {
        sapSalesOrderSimulate.BILLING_PARTY actual = new sapSalesOrderSimulate.BILLING_PARTY('a','a','a','a','a','a','a','a','a','a','a','a',0,0,0,0,'a','a','a','a',0,'a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a');

        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.REBATE_REL = 'a';
        actual.REBATE_FRM = Date.newInstance(2000,1,1);
        actual.CRED_GROUP = 'a';
        actual.REPR_GROUP = 'a';
        actual.RISK_CATEG = 'a';
        actual.TRADE_ID = 'a';
        system.assertEquals('a', actual.PAYER);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.POSTL_CODE);
        system.assertEquals('a', actual.POBX_PCD);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.C_CTR_AREA);
        system.assertEquals('a', actual.CRED_ACCNT);
        system.assertEquals(0, actual.CRED_LIMIT);
        system.assertEquals(0, actual.ORDER_VALS);
        system.assertEquals(0, actual.RCVBL_VALS);
        system.assertEquals(0, actual.CRED_LIAB);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.MN_INVOICE);
        system.assertEquals('a', actual.BILL_SCHED);
        system.assertEquals('a', actual.LIST_SCHED);
        system.assertEquals(0, actual.VAL_LIMIT);
        system.assertEquals('a', actual.ACCNT_ASGN);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FIX_VAL_DY);
        system.assertEquals('a', actual.PROD_PROP);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals('a', actual.ORDER_BLCK);
        system.assertEquals('a', actual.VAT_REG_NO);
        system.assertEquals('a', actual.VAT_CNTRY);
        system.assertEquals('a', actual.TAX_CLASS1);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.REBATE_REL);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REBATE_FRM);
        system.assertEquals('a', actual.CRED_GROUP);
        system.assertEquals('a', actual.REPR_GROUP);
        system.assertEquals('a', actual.RISK_CATEG);
        system.assertEquals('a', actual.TRADE_ID);

        sapSalesOrderSimulate.BILLING_PARTY actual0 = new sapSalesOrderSimulate.BILLING_PARTY();
    }

    @istest
    private static void TestRETURN_x() {
        sapSalesOrderSimulate.RETURN_x actual = new sapSalesOrderSimulate.RETURN_x('a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.TYPE_x);
        system.assertEquals('a', actual.CODE);
        system.assertEquals('a', actual.MESSAGE);
        system.assertEquals('a', actual.LOG_NO);
        system.assertEquals('a', actual.LOG_MSG_NO);
        system.assertEquals('a', actual.MESSAGE_V1);
        system.assertEquals('a', actual.MESSAGE_V2);
        system.assertEquals('a', actual.MESSAGE_V3);
        system.assertEquals('a', actual.MESSAGE_V4);

        sapSalesOrderSimulate.RETURN_x actual0 = new sapSalesOrderSimulate.RETURN_x();
    }

    @istest
    private static void TestSHIP_TO_PARTY() {
        sapSalesOrderSimulate.SHIP_TO_PARTY actual = new sapSalesOrderSimulate.SHIP_TO_PARTY('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.FR_AM_FROM = 'a';
        actual.FR_AM_UNTL = 'a';
        actual.FR_PM_FROM = 'a';
        actual.FR_PM_UNTL = 'a';
        actual.SA_AM_FROM = 'a';
        actual.SA_AM_UNTL = 'a';
        actual.SA_PM_FROM = 'a';
        actual.SA_PM_UNTL = 'a';
        actual.SU_AM_FROM = 'a';
        actual.SU_AM_UNTL = 'a';
        actual.SU_PM_FROM = 'a';
        actual.SU_PM_UNTL = 'a';
        actual.VAT_REG_NO = 'a';
        actual.TAX_CLASS1 = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.REGION = 'a';
        actual.COUNTY_CDE = 'a';
        actual.CITY_CODE = 'a';
        actual.TAXJURCODE = 'a';
        actual.CTRDATA_OK = 'a';
        actual.DLV_PLANT = 'a';
        actual.DLV_BLOCK = 'a';
        actual.ORDER_BLCK = 'a';
        actual.PROD_PROP = 'a';
        actual.SHIP_COND = 'a';
        actual.ACC_1_TIME = 'a';
        actual.ACCNT_GRP = 'a';
        actual.DESC_PARTN = 'a';
        actual.FY_VARIANT = 'a';
        actual.PROD_ATTR1 = 'a';
        actual.PROD_ATTR2 = 'a';
        actual.PROD_ATTR3 = 'a';
        actual.PROD_ATTR4 = 'a';
        actual.PROD_ATTR5 = 'a';
        actual.PROD_ATTR6 = 'a';
        actual.PROD_ATTR7 = 'a';
        actual.PROD_ATTR8 = 'a';
        actual.PROD_ATTR9 = 'a';
        actual.PROD_ATTRA = 'a';
        system.assertEquals('a', actual.SHIP_TO);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.POSTL_CODE);
        system.assertEquals('a', actual.POBX_PCD);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.DEST_CNTRY);
        system.assertEquals('a', actual.TRNSP_ZONE);
        system.assertEquals('a', actual.TRAIN_STAT);
        system.assertEquals('a', actual.EXPR_STAT);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.UNLOAD_PT);
        system.assertEquals('a', actual.FAC_CALEND);
        system.assertEquals('a', actual.RECV_HOURS);
        system.assertEquals('a', actual.MO_AM_FROM);
        system.assertEquals('a', actual.MO_AM_UNTL);
        system.assertEquals('a', actual.MO_PM_FROM);
        system.assertEquals('a', actual.MO_PM_UNTL);
        system.assertEquals('a', actual.TU_AM_FROM);
        system.assertEquals('a', actual.TU_AM_UNTL);
        system.assertEquals('a', actual.TU_PM_FROM);
        system.assertEquals('a', actual.TU_PM_UNTL);
        system.assertEquals('a', actual.WE_AM_FROM);
        system.assertEquals('a', actual.WR_AM_UNTL);
        system.assertEquals('a', actual.WE_PM_FROM);
        system.assertEquals('a', actual.WE_PM_UNTL);
        system.assertEquals('a', actual.TH_AM_FROM);
        system.assertEquals('a', actual.TH_AM_UNTL);
        system.assertEquals('a', actual.TH_PM_FROM);
        system.assertEquals('a', actual.TH_PM_UNTL);
        system.assertEquals('a', actual.FR_AM_FROM);
        system.assertEquals('a', actual.FR_AM_UNTL);
        system.assertEquals('a', actual.FR_PM_FROM);
        system.assertEquals('a', actual.FR_PM_UNTL);
        system.assertEquals('a', actual.SA_AM_FROM);
        system.assertEquals('a', actual.SA_AM_UNTL);
        system.assertEquals('a', actual.SA_PM_FROM);
        system.assertEquals('a', actual.SA_PM_UNTL);
        system.assertEquals('a', actual.SU_AM_FROM);
        system.assertEquals('a', actual.SU_AM_UNTL);
        system.assertEquals('a', actual.SU_PM_FROM);
        system.assertEquals('a', actual.SU_PM_UNTL);
        system.assertEquals('a', actual.VAT_REG_NO);
        system.assertEquals('a', actual.TAX_CLASS1);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.REGION);
        system.assertEquals('a', actual.COUNTY_CDE);
        system.assertEquals('a', actual.CITY_CODE);
        system.assertEquals('a', actual.TAXJURCODE);
        system.assertEquals('a', actual.CTRDATA_OK);
        system.assertEquals('a', actual.DLV_PLANT);
        system.assertEquals('a', actual.DLV_BLOCK);
        system.assertEquals('a', actual.ORDER_BLCK);
        system.assertEquals('a', actual.PROD_PROP);
        system.assertEquals('a', actual.SHIP_COND);
        system.assertEquals('a', actual.ACC_1_TIME);
        system.assertEquals('a', actual.ACCNT_GRP);
        system.assertEquals('a', actual.DESC_PARTN);
        system.assertEquals('a', actual.FY_VARIANT);
        system.assertEquals('a', actual.PROD_ATTR1);
        system.assertEquals('a', actual.PROD_ATTR2);
        system.assertEquals('a', actual.PROD_ATTR3);
        system.assertEquals('a', actual.PROD_ATTR4);
        system.assertEquals('a', actual.PROD_ATTR5);
        system.assertEquals('a', actual.PROD_ATTR6);
        system.assertEquals('a', actual.PROD_ATTR7);
        system.assertEquals('a', actual.PROD_ATTR8);
        system.assertEquals('a', actual.PROD_ATTR9);
        system.assertEquals('a', actual.PROD_ATTRA);

        sapSalesOrderSimulate.SHIP_TO_PARTY actual0 = new sapSalesOrderSimulate.SHIP_TO_PARTY();
    }

    @istest
    private static void TestSOLD_TO_PARTY() {
        sapSalesOrderSimulate.SOLD_TO_PARTY actual = new sapSalesOrderSimulate.SOLD_TO_PARTY('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',0,'a','a','a','a','a','a','a','a','a','a','a');

        actual.SALES_OFF = 'a';
        actual.SALES_GRP = 'a';
        actual.VAT_REG_NO = 'a';
        actual.TAX_CLASS1 = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.COMPANY_ID = 'a';
        system.assertEquals('a', actual.SOLD_TO);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.POSTL_CODE);
        system.assertEquals('a', actual.POBX_PCD);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.STAT_GROUP);
        system.assertEquals('a', actual.ORDER_BLCK);
        system.assertEquals('a', actual.PRC_PROCED);
        system.assertEquals('a', actual.CUST_GROUP);
        system.assertEquals('a', actual.SALES_DIST);
        system.assertEquals('a', actual.PRICE_GRP);
        system.assertEquals('a', actual.PRICE_LIST);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.COMPL_DLV);
        system.assertEquals(0, actual.MAX_PL_DLV);
        system.assertEquals('a', actual.ORDER_COMB);
        system.assertEquals('a', actual.BTCH_SPLIT);
        system.assertEquals('a', actual.DLV_PRIO);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.EXCHG_RATE);
        system.assertEquals('a', actual.SHIP_COND);
        system.assertEquals('a', actual.PART_DLV);
        system.assertEquals('a', actual.ORDER_PROB);
        system.assertEquals('a', actual.DLV_BLOCK);
        system.assertEquals('a', actual.PROD_PROP);
        system.assertEquals('a', actual.ACC_1_TIME);
        system.assertEquals('a', actual.SALES_OFF);
        system.assertEquals('a', actual.SALES_GRP);
        system.assertEquals('a', actual.VAT_REG_NO);
        system.assertEquals('a', actual.TAX_CLASS1);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.COMPANY_ID);

        sapSalesOrderSimulate.SOLD_TO_PARTY actual0 = new sapSalesOrderSimulate.SOLD_TO_PARTY();
    }

    @istest
    private static void TestORDER_HEADER_IN() {
        sapSalesOrderSimulate.ORDER_HEADER_IN actual = new sapSalesOrderSimulate.ORDER_HEADER_IN('a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        actual.CT_VALID_T = Date.newInstance(2000,1,1);
        actual.CUST_GRP1 = 'a';
        actual.CUST_GRP2 = 'a';
        actual.CUST_GRP3 = 'a';
        actual.CUST_GRP4 = 'a';
        actual.CUST_GRP5 = 'a';
        actual.PURCH_NO_C = 'a';
        actual.PURCH_NO_S = 'a';
        actual.PO_DAT_S = Date.newInstance(2000,1,1);
        actual.PO_METH_S = 'a';
        actual.REF_1_S = 'a';
        actual.SD_DOC_CAT = 'a';
        actual.SHIP_COND = 'a';
        actual.CURRENCY_x = 'a';
        actual.CURRENCY_ISO = 'a';
        actual.DLV_TIME = 'a';
        actual.CD_TYPE1 = 'a';
        actual.CD_VALUE1 = 0;
        actual.CD_P_UNT1 = 'a';
        actual.CD_D_UNT1 = 'a';
        actual.CD_D_UISO1 = 'a';
        actual.CD_CURR1 = 'a';
        actual.CD_CU_ISO1 = 'a';
        actual.CD_TYPE2 = 'a';
        actual.CD_VALUE2 = 0;
        actual.CD_P_UNT2 = 'a';
        actual.CD_D_UNT2 = 'a';
        actual.CD_D_UISO2 = 'a';
        actual.CD_CURR2 = 'a';
        actual.CD_CU_ISO2 = 'a';
        actual.CD_TYPE3 = 'a';
        actual.CD_VALUE3 = 0;
        actual.CD_P_UNT3 = 'a';
        actual.CD_D_UNT3 = 'a';
        actual.CD_D_UISO3 = 'a';
        actual.CD_CURR3 = 'a';
        actual.CD_CU_ISO3 = 'a';
        actual.CD_TYPE4 = 'a';
        actual.CD_VALUE4 = 0;
        actual.CD_P_UNT4 = 'a';
        actual.CD_D_UNT4 = 'a';
        actual.CD_D_UISO4 = 'a';
        actual.CD_CURR4 = 'a';
        actual.CD_CU_ISO4 = 'a';
        actual.FKK_CONACCT = 'a';
        actual.REF_DOC = 'a';
        actual.REF_DOC_CA = 'a';
        actual.SEPA_MANDATE_ID = 'a';
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.DOC_TYPE);
        system.assertEquals('a', actual.COLLECT_NO);
        system.assertEquals('a', actual.SALES_ORG);
        system.assertEquals('a', actual.DISTR_CHAN);
        system.assertEquals('a', actual.DIVISION);
        system.assertEquals('a', actual.SALES_GRP);
        system.assertEquals('a', actual.SALES_OFF);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE_H);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals('a', actual.PURCH_NO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.PO_SUPPLEM);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.PRICE_GRP);
        system.assertEquals('a', actual.CUST_GROUP);
        system.assertEquals('a', actual.SALES_DIST);
        system.assertEquals('a', actual.PRICE_LIST);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.DLV_BLOCK);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals('a', actual.ORD_REASON);
        system.assertEquals('a', actual.COMPL_DLV);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRICE_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.QT_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.QT_VALID_T);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CT_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CT_VALID_T);
        system.assertEquals('a', actual.CUST_GRP1);
        system.assertEquals('a', actual.CUST_GRP2);
        system.assertEquals('a', actual.CUST_GRP3);
        system.assertEquals('a', actual.CUST_GRP4);
        system.assertEquals('a', actual.CUST_GRP5);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.SD_DOC_CAT);
        system.assertEquals('a', actual.SHIP_COND);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURRENCY_ISO);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.CD_TYPE1);
        system.assertEquals(0, actual.CD_VALUE1);
        system.assertEquals('a', actual.CD_P_UNT1);
        system.assertEquals('a', actual.CD_D_UNT1);
        system.assertEquals('a', actual.CD_D_UISO1);
        system.assertEquals('a', actual.CD_CURR1);
        system.assertEquals('a', actual.CD_CU_ISO1);
        system.assertEquals('a', actual.CD_TYPE2);
        system.assertEquals(0, actual.CD_VALUE2);
        system.assertEquals('a', actual.CD_P_UNT2);
        system.assertEquals('a', actual.CD_D_UNT2);
        system.assertEquals('a', actual.CD_D_UISO2);
        system.assertEquals('a', actual.CD_CURR2);
        system.assertEquals('a', actual.CD_CU_ISO2);
        system.assertEquals('a', actual.CD_TYPE3);
        system.assertEquals(0, actual.CD_VALUE3);
        system.assertEquals('a', actual.CD_P_UNT3);
        system.assertEquals('a', actual.CD_D_UNT3);
        system.assertEquals('a', actual.CD_D_UISO3);
        system.assertEquals('a', actual.CD_CURR3);
        system.assertEquals('a', actual.CD_CU_ISO3);
        system.assertEquals('a', actual.CD_TYPE4);
        system.assertEquals(0, actual.CD_VALUE4);
        system.assertEquals('a', actual.CD_P_UNT4);
        system.assertEquals('a', actual.CD_D_UNT4);
        system.assertEquals('a', actual.CD_D_UISO4);
        system.assertEquals('a', actual.CD_CURR4);
        system.assertEquals('a', actual.CD_CU_ISO4);
        system.assertEquals('a', actual.FKK_CONACCT);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.REF_DOC_CA);
        system.assertEquals('a', actual.SEPA_MANDATE_ID);

        sapSalesOrderSimulate.ORDER_HEADER_IN actual0 = new sapSalesOrderSimulate.ORDER_HEADER_IN();
    }

    @istest
    private static void TestEXTENSIONIN() {
        sapSalesOrderSimulate.EXTENSIONIN actual = new sapSalesOrderSimulate.EXTENSIONIN('a','a','a','a','a');

        system.assertEquals('a', actual.STRUCTURE);
        system.assertEquals('a', actual.VALUEPART1);
        system.assertEquals('a', actual.VALUEPART2);
        system.assertEquals('a', actual.VALUEPART3);
        system.assertEquals('a', actual.VALUEPART4);

        sapSalesOrderSimulate.EXTENSIONIN actual0 = new sapSalesOrderSimulate.EXTENSIONIN();
    }

    @istest
    private static void TestMESSAGETABLE() {
        sapSalesOrderSimulate.MESSAGETABLE actual = new sapSalesOrderSimulate.MESSAGETABLE('a','a','a','a','a','a','a','a','a','a','a',0,'a','a');

        system.assertEquals('a', actual.TYPE_x);
        system.assertEquals('a', actual.ID);
        system.assertEquals('a', actual.NUMBER_x);
        system.assertEquals('a', actual.MESSAGE);
        system.assertEquals('a', actual.LOG_NO);
        system.assertEquals('a', actual.LOG_MSG_NO);
        system.assertEquals('a', actual.MESSAGE_V1);
        system.assertEquals('a', actual.MESSAGE_V2);
        system.assertEquals('a', actual.MESSAGE_V3);
        system.assertEquals('a', actual.MESSAGE_V4);
        system.assertEquals('a', actual.PARAMETER);
        system.assertEquals(0, actual.ROW);
        system.assertEquals('a', actual.FIELD);
        system.assertEquals('a', actual.SYSTEM_x);

        sapSalesOrderSimulate.MESSAGETABLE actual0 = new sapSalesOrderSimulate.MESSAGETABLE();
    }

    @istest
    private static void TestORDER_CCARD() {
        sapSalesOrderSimulate.ORDER_CCARD actual = new sapSalesOrderSimulate.ORDER_CCARD('a','a',Date.newInstance(2000,1,1),'a',0,'a',0,'a','a',Date.newInstance(2000,1,1),'a','a','a','a',0,'a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.CC_IN_USE_ST = 'a';
        system.assertEquals('a', actual.CC_TYPE);
        system.assertEquals('a', actual.CC_NUMBER);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CC_VALID_T);
        system.assertEquals('a', actual.CC_NAME);
        system.assertEquals(0, actual.BILLAMOUNT);
        system.assertEquals('a', actual.AUTH_FLAG);
        system.assertEquals(0, actual.AUTHAMOUNT);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AUTH_DATE);
        system.assertEquals('a', actual.AUTH_TIME);
        system.assertEquals('a', actual.AUTH_CC_NO);
        system.assertEquals('a', actual.AUTH_REFNO);
        system.assertEquals('a', actual.CC_REACT);
        system.assertEquals(0, actual.CC_RE_AMOUNT);
        system.assertEquals('a', actual.GL_ACCOUNT);
        system.assertEquals('a', actual.CC_STAT_EX);
        system.assertEquals('a', actual.CC_REACT_T);
        system.assertEquals('a', actual.VIRT_CARD);
        system.assertEquals('a', actual.MERCHIDCL);
        system.assertEquals('a', actual.PRE_AUTH);
        system.assertEquals('a', actual.CC_SEQ_NO);
        system.assertEquals('a', actual.AMOUNTCHAN);
        system.assertEquals('a', actual.AUTHORTYPE);
        system.assertEquals('a', actual.DATAORIGIN);
        system.assertEquals('a', actual.RADRCHECK1);
        system.assertEquals('a', actual.RADRCHECK2);
        system.assertEquals('a', actual.RADRCHECK3);
        system.assertEquals('a', actual.RCARDCHECK);
        system.assertEquals('a', actual.CC_LIMITED);
        system.assertEquals('a', actual.CC_VERIF_VALUE);
        system.assertEquals('a', actual.CC_CTRL_FIELD);
        system.assertEquals('a', actual.CC_IN_USE_ST);

        sapSalesOrderSimulate.ORDER_CCARD actual0 = new sapSalesOrderSimulate.ORDER_CCARD();
    }

    @istest
    private static void TestORDER_CCARD_EX() {
        sapSalesOrderSimulate.ORDER_CCARD_EX actual = new sapSalesOrderSimulate.ORDER_CCARD_EX('a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a',0,'a','a',Date.newInstance(2000,1,1),'a','a','a',0,'a','a','a','a','a','a','a','a','a','a','a',0,'a','a','a','a','a');

        actual.AUT_SETINFO = 'a';
        actual.PRE_AUTH = 'a';
        system.assertEquals('a', actual.PAY_TYPE);
        system.assertEquals('a', actual.CC_TYPE);
        system.assertEquals('a', actual.CC_NUMBER);
        system.assertEquals('a', actual.CC_SEQ_NO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CC_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CC_VALID_T);
        system.assertEquals('a', actual.CC_NAME);
        system.assertEquals(0, actual.AUTHAMOUNT);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AUTH_DATE);
        system.assertEquals('a', actual.AUTH_TIME);
        system.assertEquals('a', actual.MERCHIDCL);
        system.assertEquals('a', actual.TERMINAL);
        system.assertEquals(0, actual.BILLAMOUNT);
        system.assertEquals('a', actual.CC_LI_AMOUNT);
        system.assertEquals('a', actual.CC_AUTTH_NO);
        system.assertEquals('a', actual.BILLSTATUS);
        system.assertEquals('a', actual.DATAORIGIN);
        system.assertEquals('a', actual.CC_SETTLED);
        system.assertEquals('a', actual.AUTH_REFNO);
        system.assertEquals('a', actual.PTOFRCPT);
        system.assertEquals('a', actual.CC_REACT);
        system.assertEquals('a', actual.AUTH_FLAG);
        system.assertEquals('a', actual.BILL_PLAN);
        system.assertEquals('a', actual.BILL_PLANI);
        system.assertEquals(0, actual.CC_RE_AMOUNT);
        system.assertEquals('a', actual.GL_ACCOUNT);
        system.assertEquals('a', actual.CC_STAT_EX);
        system.assertEquals('a', actual.CC_REACT_T);
        system.assertEquals('a', actual.RFCAUT);
        system.assertEquals('a', actual.AUT_SETINIT);
        system.assertEquals('a', actual.AUT_SETINFO);
        system.assertEquals('a', actual.PRE_AUTH);

        sapSalesOrderSimulate.ORDER_CCARD_EX actual0 = new sapSalesOrderSimulate.ORDER_CCARD_EX();
    }

    @istest
    private static void TestORDER_CFGS_BLOB() {
        sapSalesOrderSimulate.ORDER_CFGS_BLOB actual = new sapSalesOrderSimulate.ORDER_CFGS_BLOB('a','a');

        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.CONTEXT);

        sapSalesOrderSimulate.ORDER_CFGS_BLOB actual0 = new sapSalesOrderSimulate.ORDER_CFGS_BLOB();
    }

    @istest
    private static void TestORDER_CFGS_INST() {
        sapSalesOrderSimulate.ORDER_CFGS_INST actual = new sapSalesOrderSimulate.ORDER_CFGS_INST('a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.OBJ_TYPE);
        system.assertEquals('a', actual.CLASS_TYPE);
        system.assertEquals('a', actual.OBJ_KEY);
        system.assertEquals('a', actual.OBJ_TXT);
        system.assertEquals('a', actual.QUANTITY);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.QUANTITY_UNIT);
        system.assertEquals('a', actual.COMPLETE);
        system.assertEquals('a', actual.CONSISTENT);
        system.assertEquals('a', actual.OBJECT_GUID);
        system.assertEquals('a', actual.PERSIST_ID);
        system.assertEquals('a', actual.PERSIST_ID_TYPE);

        sapSalesOrderSimulate.ORDER_CFGS_INST actual0 = new sapSalesOrderSimulate.ORDER_CFGS_INST();
    }

    @istest
    private static void TestORDER_CFGS_PART_OF() {
        sapSalesOrderSimulate.ORDER_CFGS_PART_OF actual = new sapSalesOrderSimulate.ORDER_CFGS_PART_OF('a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.PARENT_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.PART_OF_NO);
        system.assertEquals('a', actual.OBJ_TYPE);
        system.assertEquals('a', actual.CLASS_TYPE);
        system.assertEquals('a', actual.OBJ_KEY);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.SALES_RELEVANT);
        system.assertEquals('a', actual.PART_OF_GUID);

        sapSalesOrderSimulate.ORDER_CFGS_PART_OF actual0 = new sapSalesOrderSimulate.ORDER_CFGS_PART_OF();
    }

    @istest
    private static void TestORDER_CFGS_REF() {
        sapSalesOrderSimulate.ORDER_CFGS_REF actual = new sapSalesOrderSimulate.ORDER_CFGS_REF('a','a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.POSEX);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.ROOT_ID);
        system.assertEquals('a', actual.SCE);
        system.assertEquals('a', actual.KBNAME);
        system.assertEquals('a', actual.KBVERSION);
        system.assertEquals('a', actual.COMPLETE);
        system.assertEquals('a', actual.CONSISTENT);
        system.assertEquals('a', actual.CFGINFO);
        system.assertEquals('a', actual.KBPROFILE);
        system.assertEquals('a', actual.KBLANGUAGE);
        system.assertEquals('a', actual.CBASE_ID);
        system.assertEquals('a', actual.CBASE_ID_TYPE);

        sapSalesOrderSimulate.ORDER_CFGS_REF actual0 = new sapSalesOrderSimulate.ORDER_CFGS_REF();
    }

    @istest
    private static void TestORDER_CFGS_VALUE() {
        sapSalesOrderSimulate.ORDER_CFGS_VALUE actual = new sapSalesOrderSimulate.ORDER_CFGS_VALUE('a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.CHARC);
        system.assertEquals('a', actual.CHARC_TXT);
        system.assertEquals('a', actual.VALUE);
        system.assertEquals('a', actual.VALUE_TXT);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.VALUE_TO);
        system.assertEquals('a', actual.VALCODE);

        sapSalesOrderSimulate.ORDER_CFGS_VALUE actual0 = new sapSalesOrderSimulate.ORDER_CFGS_VALUE();
    }

    @istest
    private static void TestORDER_CONDITION_EX() {
        sapSalesOrderSimulate.ORDER_CONDITION_EX actual = new sapSalesOrderSimulate.ORDER_CONDITION_EX('a','a','a','a',0,'a','a',0,'a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',0,0,0,0,'a','a','a','a','a','a','a','a','a','a',0,0);

        actual.CURRENCY_2 = 'a';
        actual.CURR_ISO_2 = 'a';
        actual.CONDCNTRL = 'a';
        actual.CONDISACTI = 'a';
        actual.CONDCLASS = 'a';
        actual.FACTBASVAL = 0;
        actual.SCALEBASIN = 'a';
        actual.SCALBASVAL = 0;
        actual.UNITMEASUR = 'a';
        actual.ISO_UNIT = 'a';
        actual.CURRENCKEY = 'a';
        actual.CURRENISO = 'a';
        actual.CONDINCOMP = 'a';
        actual.CONDCONFIG = 'a';
        actual.CONDCHAMAN = 'a';
        actual.COND_NO = 'a';
        actual.TAX_CODE = 'a';
        actual.VARCOND = 'a';
        actual.ACCOUNTKEY = 'a';
        actual.ACCOUNT_KE = 'a';
        actual.WT_WITHCD = 'a';
        actual.STRUCTCOND = 'a';
        actual.FACTCONBAS = 0;
        actual.CONDCOINHD = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_ST_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals(0, actual.COND_VALUE);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.COND_UNIT);
        system.assertEquals(0, actual.COND_P_UNT);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.CD_UNT_ISO);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals('a', actual.APPLICATIO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CONPRICDAT);
        system.assertEquals('a', actual.CALCTYPCON);
        system.assertEquals(0, actual.CONBASEVAL);
        system.assertEquals(0, actual.CONEXCHRAT);
        system.assertEquals(0, actual.NUMCONVERT);
        system.assertEquals(0, actual.DENOMINATO);
        system.assertEquals('a', actual.CONDTYPE);
        system.assertEquals('a', actual.STAT_CON);
        system.assertEquals('a', actual.SCALETYPE);
        system.assertEquals('a', actual.ACCRUALS);
        system.assertEquals('a', actual.CONINVOLST);
        system.assertEquals('a', actual.CONDORIGIN);
        system.assertEquals('a', actual.GROUPCOND);
        system.assertEquals('a', actual.COND_UPDAT);
        system.assertEquals('a', actual.ACCESS_SEQ);
        system.assertEquals('a', actual.CONDCOUNT);
        system.assertEquals(0, actual.ROUNDOFFDI);
        system.assertEquals(0, actual.CONDVALUE);
        system.assertEquals('a', actual.CURRENCY_2);
        system.assertEquals('a', actual.CURR_ISO_2);
        system.assertEquals('a', actual.CONDCNTRL);
        system.assertEquals('a', actual.CONDISACTI);
        system.assertEquals('a', actual.CONDCLASS);
        system.assertEquals(0, actual.FACTBASVAL);
        system.assertEquals('a', actual.SCALEBASIN);
        system.assertEquals(0, actual.SCALBASVAL);
        system.assertEquals('a', actual.UNITMEASUR);
        system.assertEquals('a', actual.ISO_UNIT);
        system.assertEquals('a', actual.CURRENCKEY);
        system.assertEquals('a', actual.CURRENISO);
        system.assertEquals('a', actual.CONDINCOMP);
        system.assertEquals('a', actual.CONDCONFIG);
        system.assertEquals('a', actual.CONDCHAMAN);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.TAX_CODE);
        system.assertEquals('a', actual.VARCOND);
        system.assertEquals('a', actual.ACCOUNTKEY);
        system.assertEquals('a', actual.ACCOUNT_KE);
        system.assertEquals('a', actual.WT_WITHCD);
        system.assertEquals('a', actual.STRUCTCOND);
        system.assertEquals(0, actual.FACTCONBAS);
        system.assertEquals('a', actual.CONDCOINHD);

        sapSalesOrderSimulate.ORDER_CONDITION_EX actual0 = new sapSalesOrderSimulate.ORDER_CONDITION_EX();
    }

    @istest
    private static void TestORDER_INCOMPLETE() {
        sapSalesOrderSimulate.ORDER_INCOMPLETE actual = new sapSalesOrderSimulate.ORDER_INCOMPLETE('a','a','a','a','a','a','a');

        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SCHED_LINE);
        system.assertEquals('a', actual.PARTN_ROLE);
        system.assertEquals('a', actual.TABLE_NAME);
        system.assertEquals('a', actual.FIELD_NAME);
        system.assertEquals('a', actual.FIELD_TEXT);

        sapSalesOrderSimulate.ORDER_INCOMPLETE actual0 = new sapSalesOrderSimulate.ORDER_INCOMPLETE();
    }

    @istest
    private static void TestORDER_ITEMS_IN() {
        sapSalesOrderSimulate.ORDER_ITEMS_IN actual = new sapSalesOrderSimulate.ORDER_ITEMS_IN('a','a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a',0,'a','a','a','a','a','a','a','a');

        actual.MATL_GROUP = 'a';
        actual.PURCH_NO_C = 'a';
        actual.PURCH_DATE = Date.newInstance(2000,1,1);
        actual.PO_METHOD = 'a';
        actual.REF_1 = 'a';
        actual.PURCH_NO_S = 'a';
        actual.PO_DAT_S = Date.newInstance(2000,1,1);
        actual.PO_METH_S = 'a';
        actual.REF_1_S = 'a';
        actual.PO_ITM_NO_S = 'a';
        actual.COND_VAL1 = 0;
        actual.CURRENCY_x = 'a';
        actual.CURR_ISO = 'a';
        actual.T_UNIT_ISO = 'a';
        actual.S_UNIT_ISO = 'a';
        actual.CD_UNT_ISO = 'a';
        actual.CUST_MAT35 = 'a';
        actual.INCOTERMS1 = 'a';
        actual.INCOTERMS2 = 'a';
        actual.DLV_TIME = 'a';
        actual.ASSORT_MOD = 'a';
        actual.VAL_CONTR = 'a';
        actual.VAL_CON_I = 'a';
        actual.REF_DOC = 'a';
        actual.REF_DOC_IT = 'a';
        actual.REF_DOC_CA = 'a';
        actual.CD_TYPE2 = 'a';
        actual.CD_VALUE2 = 0;
        actual.CD_P_UNT2 = 'a';
        actual.CD_D_UNT2 = 'a';
        actual.CD_D_UISO2 = 'a';
        actual.CD_CURR2 = 'a';
        actual.CD_CU_ISO2 = 'a';
        actual.CD_TYPE3 = 'a';
        actual.CD_VALUE3 = 0;
        actual.CD_P_UNT3 = 'a';
        actual.CD_D_UNT3 = 'a';
        actual.CD_D_UISO3 = 'a';
        actual.CD_CURR3 = 'a';
        actual.CD_CU_ISO3 = 'a';
        actual.CD_TYPE4 = 'a';
        actual.CD_VALUE4 = 0;
        actual.CD_P_UNT4 = 'a';
        actual.CD_D_UNT4 = 'a';
        actual.CD_D_UISO4 = 'a';
        actual.CD_CURR4 = 'a';
        actual.CD_CU_ISO4 = 'a';
        actual.MAT_EXT = 'a';
        actual.MAT_GUID = 'a';
        actual.MAT_VERS = 'a';
        actual.ALTERN_BOM = 'a';
        actual.FKK_CONACCT = 'a';
        actual.EAN_UPC = 'a';
        actual.SHIP_POINT = 'a';
        actual.PRODCAT = 'a';
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.HG_LV_ITEM);
        system.assertEquals('a', actual.PO_ITM_NO);
        system.assertEquals('a', actual.MATERIAL);
        system.assertEquals('a', actual.CUST_MAT);
        system.assertEquals('a', actual.BATCH);
        system.assertEquals('a', actual.DLV_GROUP);
        system.assertEquals('a', actual.PART_DLV);
        system.assertEquals('a', actual.REASON_REJ);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BILL_DATE);
        system.assertEquals('a', actual.PLANT);
        system.assertEquals('a', actual.STORE_LOC);
        system.assertEquals('a', actual.TARGET_QTY);
        system.assertEquals('a', actual.TARGET_QU);
        system.assertEquals('a', actual.REQ_QTY);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.ITEM_CATEG);
        system.assertEquals('a', actual.SHORT_TEXT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals('a', actual.REQ_TIME);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals(0, actual.COND_VALUE);
        system.assertEquals('a', actual.COND_P_UNT);
        system.assertEquals('a', actual.COND_D_UNT);
        system.assertEquals('a', actual.PRC_GROUP1);
        system.assertEquals('a', actual.PRC_GROUP2);
        system.assertEquals('a', actual.PRC_GROUP3);
        system.assertEquals('a', actual.PRC_GROUP4);
        system.assertEquals('a', actual.PRC_GROUP5);
        system.assertEquals('a', actual.PROD_HIERA);
        system.assertEquals('a', actual.MATL_GROUP);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.PO_ITM_NO_S);
        system.assertEquals(0, actual.COND_VAL1);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals('a', actual.S_UNIT_ISO);
        system.assertEquals('a', actual.CD_UNT_ISO);
        system.assertEquals('a', actual.CUST_MAT35);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.ASSORT_MOD);
        system.assertEquals('a', actual.VAL_CONTR);
        system.assertEquals('a', actual.VAL_CON_I);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.REF_DOC_IT);
        system.assertEquals('a', actual.REF_DOC_CA);
        system.assertEquals('a', actual.CD_TYPE2);
        system.assertEquals(0, actual.CD_VALUE2);
        system.assertEquals('a', actual.CD_P_UNT2);
        system.assertEquals('a', actual.CD_D_UNT2);
        system.assertEquals('a', actual.CD_D_UISO2);
        system.assertEquals('a', actual.CD_CURR2);
        system.assertEquals('a', actual.CD_CU_ISO2);
        system.assertEquals('a', actual.CD_TYPE3);
        system.assertEquals(0, actual.CD_VALUE3);
        system.assertEquals('a', actual.CD_P_UNT3);
        system.assertEquals('a', actual.CD_D_UNT3);
        system.assertEquals('a', actual.CD_D_UISO3);
        system.assertEquals('a', actual.CD_CURR3);
        system.assertEquals('a', actual.CD_CU_ISO3);
        system.assertEquals('a', actual.CD_TYPE4);
        system.assertEquals(0, actual.CD_VALUE4);
        system.assertEquals('a', actual.CD_P_UNT4);
        system.assertEquals('a', actual.CD_D_UNT4);
        system.assertEquals('a', actual.CD_D_UISO4);
        system.assertEquals('a', actual.CD_CURR4);
        system.assertEquals('a', actual.CD_CU_ISO4);
        system.assertEquals('a', actual.MAT_EXT);
        system.assertEquals('a', actual.MAT_GUID);
        system.assertEquals('a', actual.MAT_VERS);
        system.assertEquals('a', actual.ALTERN_BOM);
        system.assertEquals('a', actual.FKK_CONACCT);
        system.assertEquals('a', actual.EAN_UPC);
        system.assertEquals('a', actual.SHIP_POINT);
        system.assertEquals('a', actual.PRODCAT);

        sapSalesOrderSimulate.ORDER_ITEMS_IN actual0 = new sapSalesOrderSimulate.ORDER_ITEMS_IN();
    }

    @istest
    private static void TestORDER_ITEMS_OUT() {
        sapSalesOrderSimulate.ORDER_ITEMS_OUT actual = new sapSalesOrderSimulate.ORDER_ITEMS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a',Date.newInstance(2000,1,1),'a','a','a',Date.newInstance(2000,1,1),'a','a','a',0,'a','a',0,'a');

        actual.TX_DOC_CUR = 0;
        actual.MAT_EXT = 'a';
        actual.MAT_GUID = 'a';
        actual.MAT_VERS = 'a';
        actual.MAT_E_EXT = 'a';
        actual.MAT_E_GUID = 'a';
        actual.MAT_E_VERS = 'a';
        actual.TARGET_QTY = 0;
        actual.TARGET_QU = 'a';
        actual.T_UNIT_ISO = 'a';
        actual.ITEM_CATEG = 'a';
        actual.SHIP_POINT = 'a';
        actual.HG_LV_ITEM = 'a';
        actual.CUST_MAT = 'a';
        actual.PART_DLV = 'a';
        actual.REASON_REJ = 'a';
        actual.BILL_BLOCK = 'a';
        actual.STGE_LOC = 'a';
        actual.PROD_HIER = 'a';
        actual.MATL_GROUP = 'a';
        actual.SUBTOTAL1 = 0;
        actual.SUBTOTAL2 = 0;
        actual.SUBTOTAL3 = 0;
        actual.SUBTOTAL4 = 0;
        actual.SUBTOTAL5 = 0;
        actual.SUBTOTAL6 = 0;
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.PO_ITM_NO);
        system.assertEquals('a', actual.MATERIAL);
        system.assertEquals('a', actual.MAT_ENTRD);
        system.assertEquals('a', actual.SHORT_TEXT);
        system.assertEquals('a', actual.NET_VALUE);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.SUBTOTAL_1);
        system.assertEquals('a', actual.SUBTOTAL_2);
        system.assertEquals('a', actual.SUBTOTAL_3);
        system.assertEquals('a', actual.SUBTOTAL_4);
        system.assertEquals('a', actual.SUBTOTAL_5);
        system.assertEquals('a', actual.SUBTOTAL_6);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.QTY_REQ_DT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DLV_DATE);
        system.assertEquals('a', actual.REPL_TIME);
        system.assertEquals('a', actual.CONFIGURED);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.PO_ITM_NO_S);
        system.assertEquals(0, actual.NET_VALUE1);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.S_UNIT_ISO);
        system.assertEquals(0, actual.REQ_QTY);
        system.assertEquals('a', actual.PLANT);
        system.assertEquals(0, actual.TX_DOC_CUR);
        system.assertEquals('a', actual.MAT_EXT);
        system.assertEquals('a', actual.MAT_GUID);
        system.assertEquals('a', actual.MAT_VERS);
        system.assertEquals('a', actual.MAT_E_EXT);
        system.assertEquals('a', actual.MAT_E_GUID);
        system.assertEquals('a', actual.MAT_E_VERS);
        system.assertEquals(0, actual.TARGET_QTY);
        system.assertEquals('a', actual.TARGET_QU);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals('a', actual.ITEM_CATEG);
        system.assertEquals('a', actual.SHIP_POINT);
        system.assertEquals('a', actual.HG_LV_ITEM);
        system.assertEquals('a', actual.CUST_MAT);
        system.assertEquals('a', actual.PART_DLV);
        system.assertEquals('a', actual.REASON_REJ);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals('a', actual.STGE_LOC);
        system.assertEquals('a', actual.PROD_HIER);
        system.assertEquals('a', actual.MATL_GROUP);
        system.assertEquals(0, actual.SUBTOTAL1);
        system.assertEquals(0, actual.SUBTOTAL2);
        system.assertEquals(0, actual.SUBTOTAL3);
        system.assertEquals(0, actual.SUBTOTAL4);
        system.assertEquals(0, actual.SUBTOTAL5);
        system.assertEquals(0, actual.SUBTOTAL6);

        sapSalesOrderSimulate.ORDER_ITEMS_OUT actual0 = new sapSalesOrderSimulate.ORDER_ITEMS_OUT();
    }

    @istest
    private static void TestORDER_PARTNERS() {
        sapSalesOrderSimulate.ORDER_PARTNERS actual = new sapSalesOrderSimulate.ORDER_PARTNERS('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.ADDR_ORIG = 'a';
        actual.ADDR_LINK = 'a';
        actual.VAT_REG_NO = 'a';
        system.assertEquals('a', actual.PARTN_ROLE);
        system.assertEquals('a', actual.PARTN_NUMB);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.TITLE);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.NAME_2);
        system.assertEquals('a', actual.NAME_3);
        system.assertEquals('a', actual.NAME_4);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.COUNTRY_ISO);
        system.assertEquals('a', actual.POSTL_CODE);
        system.assertEquals('a', actual.POBX_PCD);
        system.assertEquals('a', actual.POBX_CTY);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.DISTRICT);
        system.assertEquals('a', actual.REGION);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.TELEPHONE2);
        system.assertEquals('a', actual.TELEBOX);
        system.assertEquals('a', actual.FAX_NUMBER);
        system.assertEquals('a', actual.TELETEX_NO);
        system.assertEquals('a', actual.TELEX_NO);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.UNLOAD_PT);
        system.assertEquals('a', actual.TRANSPZONE);
        system.assertEquals('a', actual.TAXJURCODE);
        system.assertEquals('a', actual.ADDRESS);
        system.assertEquals('a', actual.PRIV_ADDR);
        system.assertEquals('a', actual.ADDR_TYPE);
        system.assertEquals('a', actual.ADDR_ORIG);
        system.assertEquals('a', actual.ADDR_LINK);
        system.assertEquals('a', actual.VAT_REG_NO);

        sapSalesOrderSimulate.ORDER_PARTNERS actual0 = new sapSalesOrderSimulate.ORDER_PARTNERS();
    }

    @istest
    private static void TestORDER_SCHEDULE_EX() {
        sapSalesOrderSimulate.ORDER_SCHEDULE_EX actual = new sapSalesOrderSimulate.ORDER_SCHEDULE_EX('a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',0,0,'a','a',0,'a','a',Date.newInstance(2000,1,1),'a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        actual.LOAD_DATE = Date.newInstance(2000,1,1);
        actual.GI_DATE = Date.newInstance(2000,1,1);
        actual.CORR_QTY = 0;
        actual.REQ_DLV_BL = 'a';
        actual.GRP_DEFIN = 'a';
        actual.RELEASTYP = 'a';
        actual.FORCAST_NR = 'a';
        actual.COMMIT_QTY = 0;
        actual.SIZE2 = 0;
        actual.SIZE3 = 0;
        actual.UNIT_MEAS = 'a';
        actual.ISO_ROMEI = 'a';
        actual.FORMULAKEY = 'a';
        actual.SALESQTYNR = 0;
        actual.SALESQTYDE = 0;
        actual.AVAIL_CON = 'a';
        actual.MOVE_TYPE = 'a';
        actual.PREQ_ITEM = 'a';
        actual.LINTYP_EDI = 'a';
        actual.ORDERID = 'a';
        actual.PLANORDNR = 'a';
        actual.BOMEXPL_NO = 'a';
        actual.CUSTCHSTAT = 'a';
        actual.GURANTEED = 0;
        actual.MS_TIME = 'a';
        actual.TP_TIME = 'a';
        actual.LOAD_TIME = 'a';
        actual.GI_TIME = 'a';
        actual.ROUTESCHED = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SCHED_LINE);
        system.assertEquals('a', actual.SCHED_TYPE);
        system.assertEquals('a', actual.RELFORDEL);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE);
        system.assertEquals('a', actual.REQ_TIME);
        system.assertEquals(0, actual.REQ_QTY);
        system.assertEquals(0, actual.CONFIR_QTY);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.ISOCODUNIT);
        system.assertEquals(0, actual.REQ_QTY1);
        system.assertEquals('a', actual.BASE_UOM);
        system.assertEquals('a', actual.ISOBASUNIT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE1);
        system.assertEquals('a', actual.REQ_TYPE);
        system.assertEquals('a', actual.PLTYPE);
        system.assertEquals('a', actual.BUSIDOCNR);
        system.assertEquals('a', actual.BUSIITNR);
        system.assertEquals('a', actual.SCHED_LIN1);
        system.assertEquals(Date.newInstance(2000,1,1), actual.EARL_DATE);
        system.assertEquals('a', actual.MAINT_REQ);
        system.assertEquals('a', actual.PREQ_NO);
        system.assertEquals('a', actual.PO_TYPE);
        system.assertEquals('a', actual.DOC_CAT);
        system.assertEquals('a', actual.CONF_STAT);
        system.assertEquals('a', actual.IR_IND);
        system.assertEquals(Date.newInstance(2000,1,1), actual.RETURNDATE);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TP_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.MS_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LOAD_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE);
        system.assertEquals(0, actual.CORR_QTY);
        system.assertEquals('a', actual.REQ_DLV_BL);
        system.assertEquals('a', actual.GRP_DEFIN);
        system.assertEquals('a', actual.RELEASTYP);
        system.assertEquals('a', actual.FORCAST_NR);
        system.assertEquals(0, actual.COMMIT_QTY);
        system.assertEquals(0, actual.SIZE2);
        system.assertEquals(0, actual.SIZE3);
        system.assertEquals('a', actual.UNIT_MEAS);
        system.assertEquals('a', actual.ISO_ROMEI);
        system.assertEquals('a', actual.FORMULAKEY);
        system.assertEquals(0, actual.SALESQTYNR);
        system.assertEquals(0, actual.SALESQTYDE);
        system.assertEquals('a', actual.AVAIL_CON);
        system.assertEquals('a', actual.MOVE_TYPE);
        system.assertEquals('a', actual.PREQ_ITEM);
        system.assertEquals('a', actual.LINTYP_EDI);
        system.assertEquals('a', actual.ORDERID);
        system.assertEquals('a', actual.PLANORDNR);
        system.assertEquals('a', actual.BOMEXPL_NO);
        system.assertEquals('a', actual.CUSTCHSTAT);
        system.assertEquals(0, actual.GURANTEED);
        system.assertEquals('a', actual.MS_TIME);
        system.assertEquals('a', actual.TP_TIME);
        system.assertEquals('a', actual.LOAD_TIME);
        system.assertEquals('a', actual.GI_TIME);
        system.assertEquals('a', actual.ROUTESCHED);

        sapSalesOrderSimulate.ORDER_SCHEDULE_EX actual0 = new sapSalesOrderSimulate.ORDER_SCHEDULE_EX();
    }

    @istest
    private static void TestORDER_SCHEDULE_IN() {
        sapSalesOrderSimulate.ORDER_SCHEDULE_IN actual = new sapSalesOrderSimulate.ORDER_SCHEDULE_IN('a','a',Date.newInstance(2000,1,1),'a','a',0,'a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a');

        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SCHED_LINE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals('a', actual.REQ_TIME);
        system.assertEquals(0, actual.REQ_QTY);
        system.assertEquals('a', actual.REQ_DLV_BL);
        system.assertEquals('a', actual.SCHED_TYPE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TP_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.MS_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LOAD_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE);
        system.assertEquals('a', actual.TP_TIME);
        system.assertEquals('a', actual.MS_TIME);
        system.assertEquals('a', actual.LOAD_TIME);
        system.assertEquals('a', actual.GI_TIME);
        system.assertEquals('a', actual.REFOBJTYPE);
        system.assertEquals('a', actual.REFOBJKEY);
        system.assertEquals('a', actual.REFLOGSYS);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DLV_DATE);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.REL_TYPE);
        system.assertEquals('a', actual.PLAN_SCHED_TYPE);

        sapSalesOrderSimulate.ORDER_SCHEDULE_IN actual0 = new sapSalesOrderSimulate.ORDER_SCHEDULE_IN();
    }

    @istest
    private static void TestPARTNERADDRESSES() {
        sapSalesOrderSimulate.PARTNERADDRESSES actual = new sapSalesOrderSimulate.PARTNERADDRESSES('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.TAXJURCODE = 'a';
        actual.ADR_NOTES = 'a';
        actual.COMM_TYPE = 'a';
        actual.TEL1_NUMBR = 'a';
        actual.TEL1_EXT = 'a';
        actual.FAX_NUMBER = 'a';
        actual.FAX_EXTENS = 'a';
        actual.STREET_LNG = 'a';
        actual.DISTRCT_NO = 'a';
        actual.CHCKSTATUS = 'a';
        actual.PBOXCIT_NO = 'a';
        actual.TRANSPZONE = 'a';
        actual.HOUSE_NO2 = 'a';
        actual.E_MAIL = 'a';
        actual.STR_SUPPL3 = 'a';
        actual.TITLE = 'a';
        actual.COUNTRYISO = 'a';
        actual.LANGU_ISO = 'a';
        actual.BUILD_LONG = 'a';
        actual.REGIOGROUP = 'a';
        actual.HOME_CITY = 'a';
        actual.HOMECITYNO = 'a';
        actual.PCODE1_EXT = 'a';
        actual.PCODE2_EXT = 'a';
        actual.PCODE3_EXT = 'a';
        actual.PO_W_O_NO = 'a';
        actual.PO_BOX_REG = 'a';
        actual.POBOX_CTRY = 'a';
        actual.PO_CTRYISO = 'a';
        actual.HOMEPAGE = 'a';
        actual.DONT_USE_S = 'a';
        actual.DONT_USE_P = 'a';
        actual.HOUSE_NO3 = 'a';
        actual.LANGU_CR = 'a';
        actual.LANGUCRISO = 'a';
        actual.PO_BOX_LOBBY = 'a';
        actual.DELI_SERV_TYPE = 'a';
        actual.DELI_SERV_NUMBER = 'a';
        actual.URI_TYPE = 'a';
        actual.COUNTY_CODE = 'a';
        actual.COUNTY = 'a';
        actual.TOWNSHIP_CODE = 'a';
        actual.TOWNSHIP = 'a';
        system.assertEquals('a', actual.ADDR_NO);
        system.assertEquals('a', actual.FORMOFADDR);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.NAME_2);
        system.assertEquals('a', actual.NAME_3);
        system.assertEquals('a', actual.NAME_4);
        system.assertEquals('a', actual.C_O_NAME);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.DISTRICT);
        system.assertEquals('a', actual.CITY_NO);
        system.assertEquals('a', actual.POSTL_COD1);
        system.assertEquals('a', actual.POSTL_COD2);
        system.assertEquals('a', actual.POSTL_COD3);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.PO_BOX_CIT);
        system.assertEquals('a', actual.DELIV_DIS);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.STREET_NO);
        system.assertEquals('a', actual.STR_ABBR);
        system.assertEquals('a', actual.HOUSE_NO);
        system.assertEquals('a', actual.STR_SUPPL1);
        system.assertEquals('a', actual.STR_SUPPL2);
        system.assertEquals('a', actual.LOCATION);
        system.assertEquals('a', actual.BUILDING);
        system.assertEquals('a', actual.FLOOR);
        system.assertEquals('a', actual.ROOM_NO);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.REGION);
        system.assertEquals('a', actual.SORT1);
        system.assertEquals('a', actual.SORT2);
        system.assertEquals('a', actual.TIME_ZONE);
        system.assertEquals('a', actual.TAXJURCODE);
        system.assertEquals('a', actual.ADR_NOTES);
        system.assertEquals('a', actual.COMM_TYPE);
        system.assertEquals('a', actual.TEL1_NUMBR);
        system.assertEquals('a', actual.TEL1_EXT);
        system.assertEquals('a', actual.FAX_NUMBER);
        system.assertEquals('a', actual.FAX_EXTENS);
        system.assertEquals('a', actual.STREET_LNG);
        system.assertEquals('a', actual.DISTRCT_NO);
        system.assertEquals('a', actual.CHCKSTATUS);
        system.assertEquals('a', actual.PBOXCIT_NO);
        system.assertEquals('a', actual.TRANSPZONE);
        system.assertEquals('a', actual.HOUSE_NO2);
        system.assertEquals('a', actual.E_MAIL);
        system.assertEquals('a', actual.STR_SUPPL3);
        system.assertEquals('a', actual.TITLE);
        system.assertEquals('a', actual.COUNTRYISO);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.BUILD_LONG);
        system.assertEquals('a', actual.REGIOGROUP);
        system.assertEquals('a', actual.HOME_CITY);
        system.assertEquals('a', actual.HOMECITYNO);
        system.assertEquals('a', actual.PCODE1_EXT);
        system.assertEquals('a', actual.PCODE2_EXT);
        system.assertEquals('a', actual.PCODE3_EXT);
        system.assertEquals('a', actual.PO_W_O_NO);
        system.assertEquals('a', actual.PO_BOX_REG);
        system.assertEquals('a', actual.POBOX_CTRY);
        system.assertEquals('a', actual.PO_CTRYISO);
        system.assertEquals('a', actual.HOMEPAGE);
        system.assertEquals('a', actual.DONT_USE_S);
        system.assertEquals('a', actual.DONT_USE_P);
        system.assertEquals('a', actual.HOUSE_NO3);
        system.assertEquals('a', actual.LANGU_CR);
        system.assertEquals('a', actual.LANGUCRISO);
        system.assertEquals('a', actual.PO_BOX_LOBBY);
        system.assertEquals('a', actual.DELI_SERV_TYPE);
        system.assertEquals('a', actual.DELI_SERV_NUMBER);
        system.assertEquals('a', actual.URI_TYPE);
        system.assertEquals('a', actual.COUNTY_CODE);
        system.assertEquals('a', actual.COUNTY);
        system.assertEquals('a', actual.TOWNSHIP_CODE);
        system.assertEquals('a', actual.TOWNSHIP);

        sapSalesOrderSimulate.PARTNERADDRESSES actual0 = new sapSalesOrderSimulate.PARTNERADDRESSES();
    }



    @istest
    private static void TestSerialize() {
        sapSalesOrderSimulate input = new sapSalesOrderSimulate();
        input.BAPI_SALESORDER_SIMULATE.SALESDOCUMENT = 'a';
        sapSalesOrderSimulate actual = (sapSalesOrderSimulate)JSON.deserialize(input.serialize(), sapSalesOrderSimulate.class);
        system.assertEquals('a', actual.BAPI_SALESORDER_SIMULATE.SALESDOCUMENT);
    }


    @istest
    private static void testRun() {
        sapSalesOrderSimulate request = testSetup();
        /*sapSalesOrderSimulate response = request.run();
        system.assertEquals('a', response.BAPI_SALESORDER_SIMULATE.SALESDOCUMENT);
        string requestid = request.runAsync(null, null, new Continuation(10));*///Commented by Sourav for Overcast uninstall
    }
    
    @istest
    private static void TestDeserialize() {
        sapSalesOrderSimulate output = new sapSalesOrderSimulate();
        output.BAPI_SALESORDER_SIMULATE.SALESDOCUMENT = 'a';

        string s = output.serialize();
        sapSalesOrderSimulate actual = sapSalesOrderSimulate.deserialize('{"output":' + s + '}');
        system.assertEquals('a', actual.BAPI_SALESORDER_SIMULATE.SALESDOCUMENT);
    }

    @istest
    private static void TestDeserializeError() {        
        try {
            sapSalesOrderSimulate actual = sapSalesOrderSimulate.deserialize('{"error":["A test error"]}');
            system.assert(false, 'No exception thrown');
        }
        catch (sapSalesOrderSimulate.sapSalesOrderSimulateException e) {
            system.assertEquals('A test error', e.getMessage());
        }
    }

    
    @istest
    private static void TestGetterSetter() {
        sapSalesOrderSimulate output = new sapSalesOrderSimulate();
        output.set('SAMPLE1', new map<string, object>{
            'FIELD1' => 'VALUE1'
        });
                
        system.assertEquals(null, output.get('NOVAL'));
        
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));       
    }
    
    @istest
    private static void TestLoadAsyncResponse() {
        sapSalesOrderSimulate output = new sapSalesOrderSimulate();
        output.loadAsyncResponse('{"output":{"SAMPLE1":{"FIELD1":"VALUE1"}}}');
                
        system.assertEquals(null, output.get('NOVAL'));
        
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));       
    }
    
    @istest
    private static void TestGetMetadata() {
        sapSalesOrderSimulate output = new sapSalesOrderSimulate();
        /*map<string, overcast.TypeInfo> metadata = output.getMetadata();
        
        set<string> keys = metadata.keySet();
        system.assert(keys.contains('BAPI_SALESORDER_SIMULATE'));
        system.assert(keys.contains('BILLING_PARTY'));
        system.assert(keys.contains('RETURN_x'));
        system.assert(keys.contains('SHIP_TO_PARTY'));
        system.assert(keys.contains('SOLD_TO_PARTY'));
        system.assert(keys.contains('ORDER_HEADER_IN'));
        system.assert(keys.contains('EXTENSIONIN'));
        system.assert(keys.contains('MESSAGETABLE'));
        system.assert(keys.contains('ORDER_CCARD'));
        system.assert(keys.contains('ORDER_CCARD_EX'));
        system.assert(keys.contains('ORDER_CFGS_BLOB'));
        system.assert(keys.contains('ORDER_CFGS_INST'));
        system.assert(keys.contains('ORDER_CFGS_PART_OF'));
        system.assert(keys.contains('ORDER_CFGS_REF'));
        system.assert(keys.contains('ORDER_CFGS_VALUE'));
        system.assert(keys.contains('ORDER_CONDITION_EX'));
        system.assert(keys.contains('ORDER_INCOMPLETE'));
        system.assert(keys.contains('ORDER_ITEMS_IN'));
        system.assert(keys.contains('ORDER_ITEMS_OUT'));
        system.assert(keys.contains('ORDER_PARTNERS'));
        system.assert(keys.contains('ORDER_SCHEDULE_EX'));
        system.assert(keys.contains('ORDER_SCHEDULE_IN'));
        system.assert(keys.contains('PARTNERADDRESSES'));
        
        overcast.TypeInfo first = metadata.get(output.getTopTypeName());
        system.assertNotEquals(null, first);
        system.assertEquals('BAPI_SALESORDER_SIMULATE', first.name);*///Commented by Sourav for Overcast uninstall
    }

    private static sapSalesOrderSimulate testSetup() {
        //overcast.TestingUtilities.SetupTestEnvironment('sapSalesOrderSimulate');//Commented by Sourav for Overcast uninstall
        sapSalesOrderSimulate request = new sapSalesOrderSimulate();
        request.BAPI_SALESORDER_SIMULATE.SALESDOCUMENT = 'a';

        string s = request.serialize();
        request.testResponse = '{"output":' + s + '}';
        return request;
    }
}