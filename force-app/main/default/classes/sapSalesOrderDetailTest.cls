/* 
 * Generated by Overcast UTC 2020-01-05 06:44:10Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
@istest
private class sapSalesOrderDetailTest {
    @istest
    private static void testsapSalesOrderDetail() {
        sapSalesOrderDetail actual = new sapSalesOrderDetail();
        system.assertNotEquals(null, actual.BAPISDORDER_GETDETAILEDLIST);
        system.assertNotEquals(null, actual.I_BAPI_VIEW);
        system.assertNotEquals(null, actual.EXTENSIONOUT);
        system.assertNotEquals(null, actual.ORDER_ADDRESS_OUT);
        system.assertNotEquals(null, actual.ORDER_BILLINGDATES_OUT);
        system.assertNotEquals(null, actual.ORDER_BILLINGPLANS_OUT);
        system.assertNotEquals(null, actual.ORDER_BUSINESS_OUT);
        system.assertNotEquals(null, actual.ORDER_CFGS_CUBLBS_OUT);
        system.assertNotEquals(null, actual.ORDER_CFGS_CUCFGS_OUT);
        system.assertNotEquals(null, actual.ORDER_CFGS_CUINS_OUT);
        system.assertNotEquals(null, actual.ORDER_CFGS_CUPRTS_OUT);
        system.assertNotEquals(null, actual.ORDER_CFGS_CUREFS_OUT);
        system.assertNotEquals(null, actual.ORDER_CFGS_CUVALS_OUT);
        system.assertNotEquals(null, actual.ORDER_CFGS_CUVKS_OUT);
        system.assertNotEquals(null, actual.ORDER_CONDITIONS_OUT);
        system.assertNotEquals(null, actual.ORDER_COND_HEAD);
        system.assertNotEquals(null, actual.ORDER_COND_ITEM);
        system.assertNotEquals(null, actual.ORDER_COND_QTY_SCALE);
        system.assertNotEquals(null, actual.ORDER_COND_VAL_SCALE);
        system.assertNotEquals(null, actual.ORDER_CONTRACTS_OUT);
        system.assertNotEquals(null, actual.ORDER_CREDITCARDS_OUT);
        system.assertNotEquals(null, actual.ORDER_FLOWS_OUT);
        system.assertNotEquals(null, actual.ORDER_HEADERS_OUT);
        system.assertNotEquals(null, actual.ORDER_ITEMS_OUT);
        system.assertNotEquals(null, actual.ORDER_PARTNERS_OUT);
        system.assertNotEquals(null, actual.ORDER_SCHEDULES_OUT);
        system.assertNotEquals(null, actual.ORDER_STATUSHEADERS_OUT);
        system.assertNotEquals(null, actual.ORDER_STATUSITEMS_OUT);
        system.assertNotEquals(null, actual.ORDER_TEXTHEADERS_OUT);
        system.assertNotEquals(null, actual.ORDER_TEXTLINES_OUT);
        system.assertNotEquals(null, actual.SALES_DOCUMENTS);
    }

    @istest
    private static void TestBAPISDORDER_GETDETAILEDLIST() {
        sapSalesOrderDetail.BAPISDORDER_GETDETAILEDLIST actual = new sapSalesOrderDetail.BAPISDORDER_GETDETAILEDLIST('a');

        system.assertEquals('a', actual.I_MEMORY_READ);

        sapSalesOrderDetail.BAPISDORDER_GETDETAILEDLIST actual0 = new sapSalesOrderDetail.BAPISDORDER_GETDETAILEDLIST();
    }
    @istest
    private static void TestI_BAPI_VIEW() {
        sapSalesOrderDetail.I_BAPI_VIEW actual = new sapSalesOrderDetail.I_BAPI_VIEW('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.HEADER);
        system.assertEquals('a', actual.ITEM);
        system.assertEquals('a', actual.SDSCHEDULE);
        system.assertEquals('a', actual.BUSINESS);
        system.assertEquals('a', actual.PARTNER);
        system.assertEquals('a', actual.ADDRESS);
        system.assertEquals('a', actual.STATUS_H);
        system.assertEquals('a', actual.STATUS_I);
        system.assertEquals('a', actual.SDCOND);
        system.assertEquals('a', actual.SDCOND_ADD);
        system.assertEquals('a', actual.CONTRACT);
        system.assertEquals('a', actual.TEXT);
        system.assertEquals('a', actual.FLOW);
        system.assertEquals('a', actual.BILLPLAN);
        system.assertEquals('a', actual.CONFIGURE);
        system.assertEquals('a', actual.CREDCARD);
        system.assertEquals('a', actual.INCOMP_LOG);

        sapSalesOrderDetail.I_BAPI_VIEW actual0 = new sapSalesOrderDetail.I_BAPI_VIEW();
    }
    @istest
    private static void TestEXTENSIONOUT() {
        sapSalesOrderDetail.EXTENSIONOUT actual = new sapSalesOrderDetail.EXTENSIONOUT('a','a','a','a','a');

        system.assertEquals('a', actual.STRUCTURE);
        system.assertEquals('a', actual.VALUEPART1);
        system.assertEquals('a', actual.VALUEPART2);
        system.assertEquals('a', actual.VALUEPART3);
        system.assertEquals('a', actual.VALUEPART4);

        sapSalesOrderDetail.EXTENSIONOUT actual0 = new sapSalesOrderDetail.EXTENSIONOUT();
    }
    @istest
    private static void TestORDER_ADDRESS_OUT() {
        sapSalesOrderDetail.ORDER_ADDRESS_OUT actual = new sapSalesOrderDetail.ORDER_ADDRESS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.TAXJURCODE = 'a';
        actual.PERS_NO = 'a';
        actual.ADDR_TYPE = 'a';
        actual.NRELSTAT = 'a';
        actual.INDIUPDATE = 'a';
        actual.STREETNA = 'a';
        actual.HOUSE_NO_LONG = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ADDRESS);
        system.assertEquals('a', actual.FORMOFADDR);
        system.assertEquals('a', actual.NAME);
        system.assertEquals('a', actual.NAME_2);
        system.assertEquals('a', actual.NAME_3);
        system.assertEquals('a', actual.NAME_4);
        system.assertEquals('a', actual.STREET);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.COUNTRYISO);
        system.assertEquals('a', actual.POSTL_CODE);
        system.assertEquals('a', actual.POBX_PCD);
        system.assertEquals('a', actual.POBX_CTY);
        system.assertEquals('a', actual.CITY);
        system.assertEquals('a', actual.DISTRICT);
        system.assertEquals('a', actual.REGION);
        system.assertEquals('a', actual.CITY_CODE);
        system.assertEquals('a', actual.COUNTY_CDE);
        system.assertEquals('a', actual.PO_BOX);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals('a', actual.TELEPHONE2);
        system.assertEquals('a', actual.TELEBOX);
        system.assertEquals('a', actual.FAX_NUMBER);
        system.assertEquals('a', actual.TELETEX);
        system.assertEquals('a', actual.TELEX);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.TRANSPZONE);
        system.assertEquals('a', actual.HOUSE_NO);
        system.assertEquals('a', actual.GENDER);
        system.assertEquals('a', actual.NAME_LIST);
        system.assertEquals('a', actual.TAXJURCODE);
        system.assertEquals('a', actual.PERS_NO);
        system.assertEquals('a', actual.ADDR_TYPE);
        system.assertEquals('a', actual.NRELSTAT);
        system.assertEquals('a', actual.INDIUPDATE);
        system.assertEquals('a', actual.STREETNA);
        system.assertEquals('a', actual.HOUSE_NO_LONG);

        sapSalesOrderDetail.ORDER_ADDRESS_OUT actual0 = new sapSalesOrderDetail.ORDER_ADDRESS_OUT();
    }
    @istest
    private static void TestORDER_BILLINGDATES_OUT() {
        sapSalesOrderDetail.ORDER_BILLINGDATES_OUT actual = new sapSalesOrderDetail.ORDER_BILLINGDATES_OUT('a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a',0,'a','a',0,0,'a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.TAX_CLASS9 = 'a';
        actual.ADD_VAL_DY = 'a';
        actual.FIX_VAL_DY = Date.newInstance(2000,1,1);
        actual.SETTLEDAT = Date.newInstance(2000,1,1);
        actual.PROCASMANU = 'a';
        actual.CALDEFDAYS = 'a';
        actual.BILL_DATE = Date.newInstance(2000,1,1);
        actual.NET_VALUE = 0;
        actual.NET_PRICE = 0;
        actual.COST_DOC_C = 0;
        actual.SUBTOT_PP1 = 0;
        actual.SUBTOT_PP2 = 0;
        actual.SUBTOT_PP3 = 0;
        actual.SUBTOT_PP4 = 0;
        actual.SUBTOT_PP5 = 0;
        actual.SUBTOT_PP6 = 0;
        actual.CREDPRICIT = 0;
        actual.AMOUNTELIG = 0;
        actual.REBATEBAS = 0;
        actual.CURRENCY_x = 'a';
        actual.CURREN_ISO = 'a';
        actual.PRICE_OK = 'a';
        actual.MEANSOFPAY = 'a';
        actual.CREDITPRED = 0;
        actual.HILEVPAYNO = 'a';
        actual.HILEVITBIL = 'a';
        actual.EXCHRATEFI = 0;
        actual.ACCOUNTNO = 'a';
        actual.INDICORDAT = 'a';
        actual.ORIGBILDAT = Date.newInstance(2000,1,1);
        actual.EXCHANRATE_V = 0;
        actual.EXCHRATEFI_V = 0;
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.BILL_PLAN);
        system.assertEquals('a', actual.BILL_PLANI);
        system.assertEquals('a', actual.DATETYPE);
        system.assertEquals('a', actual.DATEDESCRI);
        system.assertEquals(Date.newInstance(2000,1,1), actual.SETTLEDATE);
        system.assertEquals('a', actual.IDADOPTBIL);
        system.assertEquals('a', actual.RULEBILLPL);
        system.assertEquals(0, actual.INVOICEPER);
        system.assertEquals('a', actual.CURRENCKEY);
        system.assertEquals('a', actual.CURRENCISO);
        system.assertEquals(0, actual.EXCHANRATE);
        system.assertEquals(0, actual.VALONDATE);
        system.assertEquals('a', actual.BILLBLOCK);
        system.assertEquals('a', actual.ORDBILLTYP);
        system.assertEquals('a', actual.STATBILLPL);
        system.assertEquals('a', actual.RULEORINEX);
        system.assertEquals('a', actual.LENSTANPER);
        system.assertEquals('a', actual.MILESTONNO);
        system.assertEquals('a', actual.MILESTONE);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.PAYER);
        system.assertEquals('a', actual.TAX_CLASS1);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FIX_VAL_DY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.SETTLEDAT);
        system.assertEquals('a', actual.PROCASMANU);
        system.assertEquals('a', actual.CALDEFDAYS);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BILL_DATE);
        system.assertEquals(0, actual.NET_VALUE);
        system.assertEquals(0, actual.NET_PRICE);
        system.assertEquals(0, actual.COST_DOC_C);
        system.assertEquals(0, actual.SUBTOT_PP1);
        system.assertEquals(0, actual.SUBTOT_PP2);
        system.assertEquals(0, actual.SUBTOT_PP3);
        system.assertEquals(0, actual.SUBTOT_PP4);
        system.assertEquals(0, actual.SUBTOT_PP5);
        system.assertEquals(0, actual.SUBTOT_PP6);
        system.assertEquals(0, actual.CREDPRICIT);
        system.assertEquals(0, actual.AMOUNTELIG);
        system.assertEquals(0, actual.REBATEBAS);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURREN_ISO);
        system.assertEquals('a', actual.PRICE_OK);
        system.assertEquals('a', actual.MEANSOFPAY);
        system.assertEquals(0, actual.CREDITPRED);
        system.assertEquals('a', actual.HILEVPAYNO);
        system.assertEquals('a', actual.HILEVITBIL);
        system.assertEquals(0, actual.EXCHRATEFI);
        system.assertEquals('a', actual.ACCOUNTNO);
        system.assertEquals('a', actual.INDICORDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.ORIGBILDAT);
        system.assertEquals(0, actual.EXCHANRATE_V);
        system.assertEquals(0, actual.EXCHRATEFI_V);

        sapSalesOrderDetail.ORDER_BILLINGDATES_OUT actual0 = new sapSalesOrderDetail.ORDER_BILLINGDATES_OUT();
    }
    @istest
    private static void TestORDER_BILLINGPLANS_OUT() {
        sapSalesOrderDetail.ORDER_BILLINGPLANS_OUT actual = new sapSalesOrderDetail.ORDER_BILLINGPLANS_OUT('a','a','a','a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a','a','a','a');

        actual.PAYCARDS5 = 'a';
        actual.INTPROJNO = 'a';
        actual.AUTOCREATE = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.BILL_PLAN);
        system.assertEquals('a', actual.BILLPLATYP);
        system.assertEquals('a', actual.B_INPLATYP);
        system.assertEquals('a', actual.SORT_FLD);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BILLSTADAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BILLENDDAT);
        system.assertEquals('a', actual.RULEDETHOR);
        system.assertEquals('a', actual.RULEORISTA);
        system.assertEquals('a', actual.RULEORIEND);
        system.assertEquals('a', actual.RULEORINEX);
        system.assertEquals('a', actual.LENSTANPER);
        system.assertEquals('a', actual.STANBILLNO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DATESFROM);
        system.assertEquals('a', actual.BILLCREAIA);
        system.assertEquals('a', actual.RULEDATFRO);
        system.assertEquals('a', actual.RULEDETBIL);
        system.assertEquals('a', actual.CALDEFDAYS);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DATESTO);
        system.assertEquals('a', actual.RULDATESTO);
        system.assertEquals('a', actual.ROUTING_NO);
        system.assertEquals('a', actual.CO_APLZL);
        system.assertEquals('a', actual.RESERV_NO);
        system.assertEquals('a', actual.RES_ITEM);
        system.assertEquals('a', actual.PO_NUMBER);
        system.assertEquals('a', actual.ITUNLIMIT);
        system.assertEquals('a', actual.PAYCARDS1);
        system.assertEquals('a', actual.PAYCARDS2);
        system.assertEquals('a', actual.PAYCARDS3);
        system.assertEquals('a', actual.PAYCARDS4);
        system.assertEquals('a', actual.PAYCARDS5);
        system.assertEquals('a', actual.INTPROJNO);
        system.assertEquals('a', actual.AUTOCREATE);

        sapSalesOrderDetail.ORDER_BILLINGPLANS_OUT actual0 = new sapSalesOrderDetail.ORDER_BILLINGPLANS_OUT();
    }
    @istest
    private static void TestORDER_BUSINESS_OUT() {
        sapSalesOrderDetail.ORDER_BUSINESS_OUT actual = new sapSalesOrderDetail.ORDER_BUSINESS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a',0,'a',Date.newInstance(2000,1,1),'a','a','a',0,Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a',0,'a','a','a','a','a','a');

        actual.J_1AFITP_D = 'a';
        actual.REAS_0_VAT = 'a';
        actual.REGION = 'a';
        actual.ACTIVICODE = 'a';
        actual.DISTRIBTYP = 'a';
        actual.TAX_CLASS = 'a';
        actual.DEPART_NO = 'a';
        actual.REC_POINT = 'a';
        actual.PURCH_NO_C = 'a';
        actual.PURCH_DATE = Date.newInstance(2000,1,1);
        actual.PO_METHOD = 'a';
        actual.REF_1 = 'a';
        actual.PURCH_NO_S = 'a';
        actual.PO_DAT_S = Date.newInstance(2000,1,1);
        actual.PO_METH_S = 'a';
        actual.REF_1_S = 'a';
        actual.POITMNOS = 'a';
        actual.TRANS_DATE = Date.newInstance(2000,1,1);
        actual.TRANSDATE = Date.newInstance(2000,1,1);
        actual.CUSTCONGR1 = 'a';
        actual.CUSTCONGR2 = 'a';
        actual.CUSTCONGR3 = 'a';
        actual.CUSTCONGR4 = 'a';
        actual.CUSTCONGR5 = 'a';
        actual.VALCONTCUR = 'a';
        actual.ISOVALCONT = 'a';
        actual.EXCHRATECO = 0;
        actual.CURRENCKEY = 'a';
        actual.ISOCURRKEY = 'a';
        actual.EXCHRATELC = 0;
        actual.CEPRPERCEN = 0;
        actual.INFLAT_IDX = 'a';
        actual.BASDATEIDX = Date.newInstance(2000,1,1);
        actual.CUST_PO_NO = 'a';
        actual.DLV_TIME = 'a';
        actual.DLI_PROFIL = 'a';
        actual.CALC_MOTIVE = 'a';
        actual.BILL_FORM = 'a';
        actual.REVENUETYP = 'a';
        actual.BEGDEMAPER = 'a';
        actual.EXCHRATELC_V = 0;
        actual.EXCH_RATE_FI_V = 0;
        actual.EXCHG_RATE_V = 0;
        actual.EXCHRATEST_V = 0;
        actual.EXCHRATECO_V = 0;
        actual.DELIV_TYPE = 'a';
        actual.TRANS_CAT = 'a';
        actual.TRANS_MAT = 'a';
        actual.SPEC_PROC = 'a';
        actual.PRODCAT = 'a';
        actual.FUNC_AREA = 'a';
        actual.POD_PROC = 'a';
        actual.CAMPAIGN = null;
        actual.FKK_CONACCT = 'a';
        actual.FUNC_AREA_LONG = 'a';
        actual.FKK_CONACCT_GUID = null;
        actual.TRANS_MAT_EXTERNAL = 'a';
        actual.TRANS_MAT_GUID = 'a';
        actual.TRANS_MAT_VERSION = 'a';
        actual.SEPA_MANDATE_ID = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.PRICE_GRP);
        system.assertEquals('a', actual.CUST_GROUP);
        system.assertEquals('a', actual.SALES_DIST);
        system.assertEquals('a', actual.PRICE_LIST);
        system.assertEquals('a', actual.INCOTERMS1);
        system.assertEquals('a', actual.INCOTERMS2);
        system.assertEquals('a', actual.ORDCOMBIND);
        system.assertEquals('a', actual.BILL_SCHED);
        system.assertEquals('a', actual.INVO_SCHED);
        system.assertEquals('a', actual.MN_INVOICE);
        system.assertEquals(0, actual.EXCHRATEFI);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FIX_VAL_DY);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.PAYMETHODE);
        system.assertEquals('a', actual.ACCNT_ASGN);
        system.assertEquals(0, actual.EXCHG_RATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRICE_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BILL_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.SERV_DATE);
        system.assertEquals('a', actual.FISC_YEAR);
        system.assertEquals('a', actual.POSTPERIOD);
        system.assertEquals(0, actual.EXCHRATEST);
        system.assertEquals('a', actual.DUNN_KEY);
        system.assertEquals('a', actual.DUNN_BLOCK);
        system.assertEquals('a', actual.BILL_PLAN);
        system.assertEquals('a', actual.PROMOTION);
        system.assertEquals('a', actual.PAY_GUARAN);
        system.assertEquals('a', actual.FINDOCPROC);
        system.assertEquals('a', actual.J_1AFITP_D);
        system.assertEquals('a', actual.REAS_0_VAT);
        system.assertEquals('a', actual.REGION);
        system.assertEquals('a', actual.ACTIVICODE);
        system.assertEquals('a', actual.DISTRIBTYP);
        system.assertEquals('a', actual.TAX_CLASS);
        system.assertEquals('a', actual.DEPART_NO);
        system.assertEquals('a', actual.REC_POINT);
        system.assertEquals('a', actual.PURCH_NO_C);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.PURCH_NO_S);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PO_DAT_S);
        system.assertEquals('a', actual.PO_METH_S);
        system.assertEquals('a', actual.REF_1_S);
        system.assertEquals('a', actual.POITMNOS);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TRANS_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TRANSDATE);
        system.assertEquals('a', actual.CUSTCONGR1);
        system.assertEquals('a', actual.CUSTCONGR2);
        system.assertEquals('a', actual.CUSTCONGR3);
        system.assertEquals('a', actual.CUSTCONGR4);
        system.assertEquals('a', actual.CUSTCONGR5);
        system.assertEquals('a', actual.VALCONTCUR);
        system.assertEquals('a', actual.ISOVALCONT);
        system.assertEquals(0, actual.EXCHRATECO);
        system.assertEquals('a', actual.CURRENCKEY);
        system.assertEquals('a', actual.ISOCURRKEY);
        system.assertEquals(0, actual.EXCHRATELC);
        system.assertEquals(0, actual.CEPRPERCEN);
        system.assertEquals('a', actual.INFLAT_IDX);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BASDATEIDX);
        system.assertEquals('a', actual.CUST_PO_NO);
        system.assertEquals('a', actual.DLV_TIME);
        system.assertEquals('a', actual.DLI_PROFIL);
        system.assertEquals('a', actual.CALC_MOTIVE);
        system.assertEquals('a', actual.BILL_FORM);
        system.assertEquals('a', actual.REVENUETYP);
        system.assertEquals('a', actual.BEGDEMAPER);
        system.assertEquals(0, actual.EXCHRATELC_V);
        system.assertEquals(0, actual.EXCH_RATE_FI_V);
        system.assertEquals(0, actual.EXCHG_RATE_V);
        system.assertEquals(0, actual.EXCHRATEST_V);
        system.assertEquals(0, actual.EXCHRATECO_V);
        system.assertEquals('a', actual.DELIV_TYPE);
        system.assertEquals('a', actual.TRANS_CAT);
        system.assertEquals('a', actual.TRANS_MAT);
        system.assertEquals('a', actual.SPEC_PROC);
        system.assertEquals('a', actual.PRODCAT);
        system.assertEquals('a', actual.FUNC_AREA);
        system.assertEquals('a', actual.POD_PROC);
        system.assertEquals(null, actual.CAMPAIGN);
        system.assertEquals('a', actual.FKK_CONACCT);
        system.assertEquals('a', actual.FUNC_AREA_LONG);
        system.assertEquals(null, actual.FKK_CONACCT_GUID);
        system.assertEquals('a', actual.TRANS_MAT_EXTERNAL);
        system.assertEquals('a', actual.TRANS_MAT_GUID);
        system.assertEquals('a', actual.TRANS_MAT_VERSION);
        system.assertEquals('a', actual.SEPA_MANDATE_ID);

        sapSalesOrderDetail.ORDER_BUSINESS_OUT actual0 = new sapSalesOrderDetail.ORDER_BUSINESS_OUT();
    }
    @istest
    private static void TestORDER_CFGS_CUBLBS_OUT() {
        sapSalesOrderDetail.ORDER_CFGS_CUBLBS_OUT actual = new sapSalesOrderDetail.ORDER_CFGS_CUBLBS_OUT('a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.CONTEXT);

        sapSalesOrderDetail.ORDER_CFGS_CUBLBS_OUT actual0 = new sapSalesOrderDetail.ORDER_CFGS_CUBLBS_OUT();
    }
    @istest
    private static void TestORDER_CFGS_CUCFGS_OUT() {
        sapSalesOrderDetail.ORDER_CFGS_CUCFGS_OUT actual = new sapSalesOrderDetail.ORDER_CFGS_CUCFGS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.POSEX);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.ROOT_ID);
        system.assertEquals('a', actual.SCE);
        system.assertEquals('a', actual.KBNAME);
        system.assertEquals('a', actual.KBVERSION);
        system.assertEquals('a', actual.COMPLETE);
        system.assertEquals('a', actual.CONSISTENT);
        system.assertEquals('a', actual.CFGINFO);
        system.assertEquals('a', actual.KBPROFILE);
        system.assertEquals('a', actual.KBLANGUAGE);
        system.assertEquals('a', actual.CBASE_ID);
        system.assertEquals('a', actual.CBASE_ID_TYPE);

        sapSalesOrderDetail.ORDER_CFGS_CUCFGS_OUT actual0 = new sapSalesOrderDetail.ORDER_CFGS_CUCFGS_OUT();
    }
    @istest
    private static void TestORDER_CFGS_CUINS_OUT() {
        sapSalesOrderDetail.ORDER_CFGS_CUINS_OUT actual = new sapSalesOrderDetail.ORDER_CFGS_CUINS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.OBJ_TYPE);
        system.assertEquals('a', actual.CLASS_TYPE);
        system.assertEquals('a', actual.OBJ_KEY);
        system.assertEquals('a', actual.OBJ_TXT);
        system.assertEquals('a', actual.QUANTITY);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.QUANTITY_UNIT);
        system.assertEquals('a', actual.COMPLETE);
        system.assertEquals('a', actual.CONSISTENT);
        system.assertEquals('a', actual.OBJECT_GUID);
        system.assertEquals('a', actual.PERSIST_ID);
        system.assertEquals('a', actual.PERSIST_ID_TYPE);

        sapSalesOrderDetail.ORDER_CFGS_CUINS_OUT actual0 = new sapSalesOrderDetail.ORDER_CFGS_CUINS_OUT();
    }
    @istest
    private static void TestORDER_CFGS_CUPRTS_OUT() {
        sapSalesOrderDetail.ORDER_CFGS_CUPRTS_OUT actual = new sapSalesOrderDetail.ORDER_CFGS_CUPRTS_OUT('a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.PARENT_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.PART_OF_NO);
        system.assertEquals('a', actual.OBJ_TYPE);
        system.assertEquals('a', actual.CLASS_TYPE);
        system.assertEquals('a', actual.OBJ_KEY);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.SALES_RELEVANT);
        system.assertEquals('a', actual.PART_OF_GUID);

        sapSalesOrderDetail.ORDER_CFGS_CUPRTS_OUT actual0 = new sapSalesOrderDetail.ORDER_CFGS_CUPRTS_OUT();
    }
    @istest
    private static void TestORDER_CFGS_CUREFS_OUT() {
        sapSalesOrderDetail.ORDER_CFGS_CUREFS_OUT actual = new sapSalesOrderDetail.ORDER_CFGS_CUREFS_OUT('a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.POSEX);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);

        sapSalesOrderDetail.ORDER_CFGS_CUREFS_OUT actual0 = new sapSalesOrderDetail.ORDER_CFGS_CUREFS_OUT();
    }
    @istest
    private static void TestORDER_CFGS_CUVALS_OUT() {
        sapSalesOrderDetail.ORDER_CFGS_CUVALS_OUT actual = new sapSalesOrderDetail.ORDER_CFGS_CUVALS_OUT('a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.CHARC);
        system.assertEquals('a', actual.CHARC_TXT);
        system.assertEquals('a', actual.VALUE);
        system.assertEquals('a', actual.VALUE_TXT);
        system.assertEquals('a', actual.AUTHOR);
        system.assertEquals('a', actual.VALUE_TO);
        system.assertEquals('a', actual.VALCODE);

        sapSalesOrderDetail.ORDER_CFGS_CUVALS_OUT actual0 = new sapSalesOrderDetail.ORDER_CFGS_CUVALS_OUT();
    }
    @istest
    private static void TestORDER_CFGS_CUVKS_OUT() {
        sapSalesOrderDetail.ORDER_CFGS_CUVKS_OUT actual = new sapSalesOrderDetail.ORDER_CFGS_CUVKS_OUT('a','a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.CONFIG_ID);
        system.assertEquals('a', actual.INST_ID);
        system.assertEquals('a', actual.VKEY);
        system.assertEquals('a', actual.FACTOR);

        sapSalesOrderDetail.ORDER_CFGS_CUVKS_OUT actual0 = new sapSalesOrderDetail.ORDER_CFGS_CUVKS_OUT();
    }
    @istest
    private static void TestORDER_CONDITIONS_OUT() {
        sapSalesOrderDetail.ORDER_CONDITIONS_OUT actual = new sapSalesOrderDetail.ORDER_CONDITIONS_OUT('a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',0,'a','a',0,'a','a',0,0,'a','a',0,0,'a','a','a','a','a','a','a','a','a','a');

        actual.CONDCOUNT = 'a';
        actual.ACCOUNTKEY = 'a';
        actual.GL_ACCOUNT = 'a';
        actual.TAX_CODE = 'a';
        actual.ACCOUNT_KE = 'a';
        actual.GLACCOUNT = 'a';
        actual.WITHTAXCOD = 'a';
        actual.VENDOR_NO = 'a';
        actual.CUSTNO_RR = 'a';
        actual.ROUNDOFFDI = 0;
        actual.CONDVALUE = 0;
        actual.CONDCNTRL = 'a';
        actual.CONDISACTI = 'a';
        actual.CONDCLASS = 'a';
        actual.CONDCOINHD = 'a';
        actual.INDIBASVAL = 'a';
        actual.INDICONVAL = 'a';
        actual.FACTBASVAL = 0;
        actual.STRUCTCOND = 'a';
        actual.FACTCONBAS = 0;
        actual.PRICELEVEL = 'a';
        actual.CONDFORMUL = 'a';
        actual.SCALETYP = 'a';
        actual.INCREMSCAL = 0;
        actual.INCREASCAL = 0;
        actual.INDEX_NO = 0;
        actual.INDEXNO = 0;
        actual.CONDITIDX = 'a';
        actual.PRINT_ID = 'a';
        actual.FROREFSTEP = 'a';
        actual.FROMREFSTE = 'a';
        actual.CONDSUBTOT = 'a';
        actual.COND_FORM = 'a';
        actual.COND_FORM1 = 'a';
        actual.MAKMANENTR = 'a';
        actual.ROUNDRULE = 'a';
        actual.PMSIGNAMOU = 'a';
        actual.CURRCONVER = 'a';
        actual.CONDISMAND = 'a';
        actual.RATEOFCHA1 = 'a';
        actual.RATEOFCHA2 = 'a';
        actual.RATEOFCHA3 = 'a';
        actual.RATEOFCHA4 = 'a';
        actual.RATEOFCHA5 = 'a';
        actual.RATEOFCHA6 = 'a';
        actual.TERMSOFPAY = 'a';
        actual.MESSAGENO = 'a';
        actual.INDIUPDATE = 'a';
        actual.SELECTION = 'a';
        actual.SCALEBASIN = 'a';
        actual.SCALBASVAL = 0;
        actual.UNITMEASUR = 'a';
        actual.TUNITISO = 'a';
        actual.CURRENCKEY = 'a';
        actual.CORRENISO = 'a';
        actual.CONDCURREN = 'a';
        actual.CORR_ISO = 'a';
        actual.CONBASVAL = 0;
        actual.CONDIVALUE = 0;
        actual.CONDINCOMP = 'a';
        actual.CONDCONFIG = 'a';
        actual.CONDCHAMAN = 'a';
        actual.PRICESOURC = 'a';
        actual.VARIANCOND = 'a';
        actual.LEVEL_BOM = 0;
        actual.PATH_BOM = 0;
        actual.STATOFAGRE = 'a';
        actual.REB_RETROA = 'a';
        actual.INDIDELETE = 'a';
        actual.AGREE_COND = 'a';
        actual.CALCULBASE = 'a';
        actual.SH_MAT_TYP = 'a';
        actual.ROUNDDIFCO = 'a';
        actual.QTYCONVERS = 'a';
        actual.CONCBUFFER = 'a';
        actual.RELACCASSI = 'a';
        actual.INDIMATMAI = 'a';
        actual.TAXJURISDI = 'a';
        actual.CONEXCHRAT_V = 0;
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.CONDIT_NO);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_ST_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.APPLICATIO);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CONPRICDAT);
        system.assertEquals('a', actual.CALCTYPCON);
        system.assertEquals(0, actual.CONBASEVAL);
        system.assertEquals('a', actual.SDCURRENCY);
        system.assertEquals('a', actual.CURREN_ISO);
        system.assertEquals(0, actual.COND_VALUE);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURRENCISO);
        system.assertEquals(0, actual.CONEXCHRAT);
        system.assertEquals(0, actual.COND_P_UNT);
        system.assertEquals('a', actual.COND_D_UNT);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals(0, actual.NUMCONVERT);
        system.assertEquals(0, actual.DENOMINATO);
        system.assertEquals('a', actual.CONDTYPE);
        system.assertEquals('a', actual.STAT_CON);
        system.assertEquals('a', actual.SCALETYPE);
        system.assertEquals('a', actual.ACCRUALS);
        system.assertEquals('a', actual.CONINVOLST);
        system.assertEquals('a', actual.CONDORIGIN);
        system.assertEquals('a', actual.GROUPCOND);
        system.assertEquals('a', actual.COND_UPDAT);
        system.assertEquals('a', actual.ACCESS_SEQ);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.CONDCOUNT);
        system.assertEquals('a', actual.ACCOUNTKEY);
        system.assertEquals('a', actual.GL_ACCOUNT);
        system.assertEquals('a', actual.TAX_CODE);
        system.assertEquals('a', actual.ACCOUNT_KE);
        system.assertEquals('a', actual.GLACCOUNT);
        system.assertEquals('a', actual.WITHTAXCOD);
        system.assertEquals('a', actual.VENDOR_NO);
        system.assertEquals('a', actual.CUSTNO_RR);
        system.assertEquals(0, actual.ROUNDOFFDI);
        system.assertEquals(0, actual.CONDVALUE);
        system.assertEquals('a', actual.CONDCNTRL);
        system.assertEquals('a', actual.CONDISACTI);
        system.assertEquals('a', actual.CONDCLASS);
        system.assertEquals('a', actual.CONDCOINHD);
        system.assertEquals('a', actual.INDIBASVAL);
        system.assertEquals('a', actual.INDICONVAL);
        system.assertEquals(0, actual.FACTBASVAL);
        system.assertEquals('a', actual.STRUCTCOND);
        system.assertEquals(0, actual.FACTCONBAS);
        system.assertEquals('a', actual.PRICELEVEL);
        system.assertEquals('a', actual.CONDFORMUL);
        system.assertEquals('a', actual.SCALETYP);
        system.assertEquals(0, actual.INCREMSCAL);
        system.assertEquals(0, actual.INCREASCAL);
        system.assertEquals(0, actual.INDEX_NO);
        system.assertEquals(0, actual.INDEXNO);
        system.assertEquals('a', actual.CONDITIDX);
        system.assertEquals('a', actual.PRINT_ID);
        system.assertEquals('a', actual.FROREFSTEP);
        system.assertEquals('a', actual.FROMREFSTE);
        system.assertEquals('a', actual.CONDSUBTOT);
        system.assertEquals('a', actual.COND_FORM);
        system.assertEquals('a', actual.COND_FORM1);
        system.assertEquals('a', actual.MAKMANENTR);
        system.assertEquals('a', actual.ROUNDRULE);
        system.assertEquals('a', actual.PMSIGNAMOU);
        system.assertEquals('a', actual.CURRCONVER);
        system.assertEquals('a', actual.CONDISMAND);
        system.assertEquals('a', actual.RATEOFCHA1);
        system.assertEquals('a', actual.RATEOFCHA2);
        system.assertEquals('a', actual.RATEOFCHA3);
        system.assertEquals('a', actual.RATEOFCHA4);
        system.assertEquals('a', actual.RATEOFCHA5);
        system.assertEquals('a', actual.RATEOFCHA6);
        system.assertEquals('a', actual.TERMSOFPAY);
        system.assertEquals('a', actual.MESSAGENO);
        system.assertEquals('a', actual.INDIUPDATE);
        system.assertEquals('a', actual.SELECTION);
        system.assertEquals('a', actual.SCALEBASIN);
        system.assertEquals(0, actual.SCALBASVAL);
        system.assertEquals('a', actual.UNITMEASUR);
        system.assertEquals('a', actual.TUNITISO);
        system.assertEquals('a', actual.CURRENCKEY);
        system.assertEquals('a', actual.CORRENISO);
        system.assertEquals('a', actual.CONDCURREN);
        system.assertEquals('a', actual.CORR_ISO);
        system.assertEquals(0, actual.CONBASVAL);
        system.assertEquals(0, actual.CONDIVALUE);
        system.assertEquals('a', actual.CONDINCOMP);
        system.assertEquals('a', actual.CONDCONFIG);
        system.assertEquals('a', actual.CONDCHAMAN);
        system.assertEquals('a', actual.PRICESOURC);
        system.assertEquals('a', actual.VARIANCOND);
        system.assertEquals(0, actual.LEVEL_BOM);
        system.assertEquals(0, actual.PATH_BOM);
        system.assertEquals('a', actual.STATOFAGRE);
        system.assertEquals('a', actual.REB_RETROA);
        system.assertEquals('a', actual.INDIDELETE);
        system.assertEquals('a', actual.AGREE_COND);
        system.assertEquals('a', actual.CALCULBASE);
        system.assertEquals('a', actual.SH_MAT_TYP);
        system.assertEquals('a', actual.ROUNDDIFCO);
        system.assertEquals('a', actual.QTYCONVERS);
        system.assertEquals('a', actual.CONCBUFFER);
        system.assertEquals('a', actual.RELACCASSI);
        system.assertEquals('a', actual.INDIMATMAI);
        system.assertEquals('a', actual.TAXJURISDI);
        system.assertEquals(0, actual.CONEXCHRAT_V);

        sapSalesOrderDetail.ORDER_CONDITIONS_OUT actual0 = new sapSalesOrderDetail.ORDER_CONDITIONS_OUT();
    }
    @istest
    private static void TestORDER_COND_HEAD() {
        sapSalesOrderDetail.ORDER_COND_HEAD actual = new sapSalesOrderDetail.ORDER_COND_HEAD('a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.CREATED_BY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CREAT_DATE);
        system.assertEquals('a', actual.COND_USAGE);
        system.assertEquals('a', actual.TABLE_NO);
        system.assertEquals('a', actual.APPLICATIO);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals('a', actual.VARKEY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.VALID_FROM);
        system.assertEquals(Date.newInstance(2000,1,1), actual.VALID_TO);
        system.assertEquals('a', actual.SEARCHTERM);
        system.assertEquals('a', actual.RESPONS);
        system.assertEquals('a', actual.PROMOT_NO);
        system.assertEquals('a', actual.SALES_DEAL);
        system.assertEquals('a', actual.SALESQUOTE);
        system.assertEquals('a', actual.STD_AGRMNT);
        system.assertEquals('a', actual.PROMOTION);
        system.assertEquals('a', actual.REBAGREEMT);
        system.assertEquals('a', actual.LIC_NO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LIC_DATE);
        system.assertEquals('a', actual.VARDATE);

        sapSalesOrderDetail.ORDER_COND_HEAD actual0 = new sapSalesOrderDetail.ORDER_COND_HEAD();
    }
    @istest
    private static void TestORDER_COND_ITEM() {
        sapSalesOrderDetail.ORDER_COND_ITEM actual = new sapSalesOrderDetail.ORDER_COND_ITEM('a','a','a','a','a','a','a','a','a','a',0,'a','a',0,'a','a','a',0,'a','a',0,'a','a','a',0,0,'a','a',0,0,0,0);

        actual.CUMM_ACCR = 0;
        actual.CURRENCY_x = 'a';
        actual.CURR_ISO = 'a';
        actual.CONDCURREN = 'a';
        actual.ISOCURRENC = 'a';
        actual.PLAN_BASIS = 0;
        actual.RATE_UNIT = 'a';
        actual.EXCLUSION = 'a';
        actual.CUSTOMER = 'a';
        actual.VENDOR_NO = 'a';
        actual.TAX_CODE = 'a';
        actual.INDIDELETE = 'a';
        actual.CONDITIDX = 'a';
        actual.MATLSETTL = 'a';
        actual.ACCRUALS = 0;
        actual.REB_RETROA = 'a';
        actual.STATOFAGRE = 'a';
        actual.PROMOT_NO = 'a';
        actual.SALES_DEAL = 'a';
        actual.SALESQUOTE = 'a';
        actual.ADD_VAL_DY = 'a';
        actual.FIX_VAL_DY = Date.newInstance(2000,1,1);
        actual.PMNTTRMS = 'a';
        actual.NUMBORDERS = 'a';
        actual.MINCONBAVA = 0;
        actual.MAXCONBAVA = 0;
        actual.MAXCONVAL = 0;
        actual.INCR_SCALE = 'a';
        actual.PRICSCALE = 'a';
        actual.RELPRCG = 'a';
        actual.PROMOTION = 'a';
        actual.REBAGREEMT = 'a';
        actual.WITHTAXCOD = 'a';
        actual.CONTRACT = 'a';
        actual.CONTRACTNO = 'a';
        actual.FLOW_TYPE = 'a';
        actual.INDIMATMAI = 'a';
        actual.STATUS = 'a';
        actual.UMSABST = 'a';
        actual.MATLSETTL_EXTERNAL = 'a';
        actual.MATLSETTL_GUID = 'a';
        actual.MATLSETTL_VERSION = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.APPLICATIO);
        system.assertEquals('a', actual.COND_TYPE);
        system.assertEquals('a', actual.TEXT_NO);
        system.assertEquals('a', actual.SCALETYPE);
        system.assertEquals('a', actual.SCALEBASIN);
        system.assertEquals(0, actual.SCALE_QTY);
        system.assertEquals('a', actual.UNITMEASUR);
        system.assertEquals('a', actual.MEASUR_ISO);
        system.assertEquals(0, actual.SCALE_VAL);
        system.assertEquals('a', actual.CURRENCKEY);
        system.assertEquals('a', actual.CURREN_ISO);
        system.assertEquals('a', actual.CALCTYPCON);
        system.assertEquals(0, actual.COND_VALUE);
        system.assertEquals('a', actual.CONDCURR);
        system.assertEquals('a', actual.COND_ISO);
        system.assertEquals(0, actual.COND_P_UNT);
        system.assertEquals('a', actual.COND_UNIT);
        system.assertEquals('a', actual.CONUNITISO);
        system.assertEquals('a', actual.PRICELEVEL);
        system.assertEquals(0, actual.NUMCONVERT);
        system.assertEquals(0, actual.DENOMINATO);
        system.assertEquals('a', actual.BASE_UOM);
        system.assertEquals('a', actual.BASEQTYISO);
        system.assertEquals(0, actual.LOWERLIMIT);
        system.assertEquals(0, actual.UPPERLIMIT);
        system.assertEquals(0, actual.PLCONDVAL);
        system.assertEquals(0, actual.CUM_VALUE);
        system.assertEquals(0, actual.CUMM_ACCR);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.CONDCURREN);
        system.assertEquals('a', actual.ISOCURRENC);
        system.assertEquals(0, actual.PLAN_BASIS);
        system.assertEquals('a', actual.RATE_UNIT);
        system.assertEquals('a', actual.EXCLUSION);
        system.assertEquals('a', actual.CUSTOMER);
        system.assertEquals('a', actual.VENDOR_NO);
        system.assertEquals('a', actual.TAX_CODE);
        system.assertEquals('a', actual.INDIDELETE);
        system.assertEquals('a', actual.CONDITIDX);
        system.assertEquals('a', actual.MATLSETTL);
        system.assertEquals(0, actual.ACCRUALS);
        system.assertEquals('a', actual.REB_RETROA);
        system.assertEquals('a', actual.STATOFAGRE);
        system.assertEquals('a', actual.PROMOT_NO);
        system.assertEquals('a', actual.SALES_DEAL);
        system.assertEquals('a', actual.SALESQUOTE);
        system.assertEquals('a', actual.ADD_VAL_DY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FIX_VAL_DY);
        system.assertEquals('a', actual.PMNTTRMS);
        system.assertEquals('a', actual.NUMBORDERS);
        system.assertEquals(0, actual.MINCONBAVA);
        system.assertEquals(0, actual.MAXCONBAVA);
        system.assertEquals(0, actual.MAXCONVAL);
        system.assertEquals('a', actual.INCR_SCALE);
        system.assertEquals('a', actual.PRICSCALE);
        system.assertEquals('a', actual.RELPRCG);
        system.assertEquals('a', actual.PROMOTION);
        system.assertEquals('a', actual.REBAGREEMT);
        system.assertEquals('a', actual.WITHTAXCOD);
        system.assertEquals('a', actual.CONTRACT);
        system.assertEquals('a', actual.CONTRACTNO);
        system.assertEquals('a', actual.FLOW_TYPE);
        system.assertEquals('a', actual.INDIMATMAI);
        system.assertEquals('a', actual.STATUS);
        system.assertEquals('a', actual.UMSABST);
        system.assertEquals('a', actual.MATLSETTL_EXTERNAL);
        system.assertEquals('a', actual.MATLSETTL_GUID);
        system.assertEquals('a', actual.MATLSETTL_VERSION);

        sapSalesOrderDetail.ORDER_COND_ITEM actual0 = new sapSalesOrderDetail.ORDER_COND_ITEM();
    }
    @istest
    private static void TestORDER_COND_QTY_SCALE() {
        sapSalesOrderDetail.ORDER_COND_QTY_SCALE actual = new sapSalesOrderDetail.ORDER_COND_QTY_SCALE('a','a','a','a','a','a',0,'a','a',0,'a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.LINE_NO);
        system.assertEquals(0, actual.SCALE_QTY);
        system.assertEquals('a', actual.COND_UNIT);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals(0, actual.CURRENCY_x);
        system.assertEquals('a', actual.CONDCURR);
        system.assertEquals('a', actual.CURREN_ISO);

        sapSalesOrderDetail.ORDER_COND_QTY_SCALE actual0 = new sapSalesOrderDetail.ORDER_COND_QTY_SCALE();
    }
    @istest
    private static void TestORDER_COND_VAL_SCALE() {
        sapSalesOrderDetail.ORDER_COND_VAL_SCALE actual = new sapSalesOrderDetail.ORDER_COND_VAL_SCALE('a','a','a','a','a','a',0,'a','a',0,'a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.COND_NO);
        system.assertEquals('a', actual.COND_COUNT);
        system.assertEquals('a', actual.LINE_NO);
        system.assertEquals(0, actual.SCALE_VAL);
        system.assertEquals('a', actual.CURRENCKEY);
        system.assertEquals('a', actual.CURRENCISO);
        system.assertEquals(0, actual.CURRENCY_x);
        system.assertEquals('a', actual.CONDCURR);
        system.assertEquals('a', actual.CURREN_ISO);

        sapSalesOrderDetail.ORDER_COND_VAL_SCALE actual0 = new sapSalesOrderDetail.ORDER_COND_VAL_SCALE();
    }
    @istest
    private static void TestORDER_CONTRACTS_OUT() {
        sapSalesOrderDetail.ORDER_CONTRACTS_OUT actual = new sapSalesOrderDetail.ORDER_CONTRACTS_OUT('a','a','a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a',Date.newInstance(2000,1,1),'a',Date.newInstance(2000,1,1),'a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.VAL_PER);
        system.assertEquals('a', actual.VALPERUNIT);
        system.assertEquals('a', actual.VALPERCAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.INST_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.ACCEPTDATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CONTSTADAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CONTSIGDAT);
        system.assertEquals('a', actual.CANC_PROC);
        system.assertEquals('a', actual.CONTENDACT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CONTCANDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQCANCDAT);
        system.assertEquals('a', actual.CANC_PARTY);
        system.assertEquals('a', actual.CANCREASON);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CONTENDDAT);
        system.assertEquals('a', actual.CANC_DOC);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CANCDOCDAT);
        system.assertEquals('a', actual.CONTSTARUL);
        system.assertEquals('a', actual.LEADTIMACT);
        system.assertEquals('a', actual.LEADTIMUNI);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DISM_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.ACTIONDATE);
        system.assertEquals('a', actual.WI_ID);
        system.assertEquals('a', actual.ACTDATRULE);
        system.assertEquals('a', actual.CONTENDRUL);

        sapSalesOrderDetail.ORDER_CONTRACTS_OUT actual0 = new sapSalesOrderDetail.ORDER_CONTRACTS_OUT();
    }
    @istest
    private static void TestORDER_CREDITCARDS_OUT() {
        sapSalesOrderDetail.ORDER_CREDITCARDS_OUT actual = new sapSalesOrderDetail.ORDER_CREDITCARDS_OUT('a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a',0,'a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a','a',0,'a','a','a','a','a','a','a');

        actual.RADRCHECK2 = 'a';
        actual.RADRCHECK3 = 'a';
        actual.RCARDCHECK = 'a';
        actual.REASONTEXT = 'a';
        actual.CC_LIMIT = 0;
        actual.AUTH_USED = 'a';
        actual.CC_LIMITED = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.CC_TYPE);
        system.assertEquals('a', actual.CC_NUMBER);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CC_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CC_VALID_T);
        system.assertEquals('a', actual.CC_NAME);
        system.assertEquals('a', actual.DATAORIGIN);
        system.assertEquals(0, actual.AUTHAMOUNT);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURR_ISO);
        system.assertEquals('a', actual.CC_SETTLED);
        system.assertEquals('a', actual.AUTH_CC_NO);
        system.assertEquals('a', actual.AUTH_REFNO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AUTH_DATE);
        system.assertEquals('a', actual.AUTH_TIME);
        system.assertEquals('a', actual.MERCHIDCL);
        system.assertEquals('a', actual.PNTOFRECEI);
        system.assertEquals('a', actual.TERMINAL);
        system.assertEquals('a', actual.SETTLEMRUN);
        system.assertEquals('a', actual.CARDCATEGO);
        system.assertEquals('a', actual.AUTHORTYPE);
        system.assertEquals('a', actual.STATEXTSYS);
        system.assertEquals('a', actual.CC_REACT);
        system.assertEquals(0, actual.AMOUNTAUTH);
        system.assertEquals('a', actual.CURR_CRED);
        system.assertEquals('a', actual.CURCREDISO);
        system.assertEquals('a', actual.AUTH_EXPIR);
        system.assertEquals('a', actual.AMOUNTCHAN);
        system.assertEquals('a', actual.PRE_AUTH);
        system.assertEquals('a', actual.HIGHLEAUTH);
        system.assertEquals('a', actual.RADRCHECK1);
        system.assertEquals('a', actual.RADRCHECK2);
        system.assertEquals('a', actual.RADRCHECK3);
        system.assertEquals('a', actual.RCARDCHECK);
        system.assertEquals('a', actual.REASONTEXT);
        system.assertEquals(0, actual.CC_LIMIT);
        system.assertEquals('a', actual.AUTH_USED);
        system.assertEquals('a', actual.CC_LIMITED);

        sapSalesOrderDetail.ORDER_CREDITCARDS_OUT actual0 = new sapSalesOrderDetail.ORDER_CREDITCARDS_OUT();
    }
    @istest
    private static void TestORDER_FLOWS_OUT() {
        sapSalesOrderDetail.ORDER_FLOWS_OUT actual = new sapSalesOrderDetail.ORDER_FLOWS_OUT('a','a','a','a','a','a','a',0,'a','a',0,'a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',0,'a','a',0,'a','a');

        actual.BILL_PLAN = 'a';
        actual.BILL_PLANI = 'a';
        actual.REFQTYUNIT = 0;
        actual.REFQTYFLOA = 0;
        actual.SALES_UNIT = 'a';
        actual.ISOCODUNIT = 'a';
        actual.GURANTEED = 0;
        actual.SPEC_STOCK = 'a';
        actual.SP_STCK_NO = 'a';
        actual.INDINVMANG = 'a';
        actual.NET_WEIGHT = 0;
        actual.MATERIAL_EXTERNAL = 'a';
        actual.MATERIAL_GUID = 'a';
        actual.MATERIAL_VERSION = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.PRECSDDOC);
        system.assertEquals('a', actual.PREDITDOC);
        system.assertEquals('a', actual.SUBSSDDOC);
        system.assertEquals('a', actual.SUBSITDOC);
        system.assertEquals('a', actual.DOCCATEGOR);
        system.assertEquals(0, actual.REF_QTY);
        system.assertEquals('a', actual.BASE_UOM);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals(0, actual.REFERENVAL);
        system.assertEquals('a', actual.STATISCURR);
        system.assertEquals('a', actual.CURRENCISO);
        system.assertEquals('a', actual.DOC_CAT_SD);
        system.assertEquals('a', actual.QTYPOSCALC);
        system.assertEquals('a', actual.ID_MM_WM);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CREAT_DATE);
        system.assertEquals('a', actual.REC_TIME);
        system.assertEquals('a', actual.MATERIAL);
        system.assertEquals('a', actual.MOVE_TYP);
        system.assertEquals('a', actual.REQ_TYPE);
        system.assertEquals('a', actual.PLTYPE);
        system.assertEquals('a', actual.LEVELFLOWR);
        system.assertEquals('a', actual.WHSE_NO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CH_ON);
        system.assertEquals('a', actual.BILLINGTYP);
        system.assertEquals(0, actual.GROSS_WT);
        system.assertEquals('a', actual.UNIT_OF_WT);
        system.assertEquals('a', actual.UNITWTISO);
        system.assertEquals(0, actual.VOLUME);
        system.assertEquals('a', actual.VOLUMEUNIT);
        system.assertEquals('a', actual.VOLUNITISO);
        system.assertEquals('a', actual.BILL_PLAN);
        system.assertEquals('a', actual.BILL_PLANI);
        system.assertEquals(0, actual.REFQTYUNIT);
        system.assertEquals(0, actual.REFQTYFLOA);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.ISOCODUNIT);
        system.assertEquals(0, actual.GURANTEED);
        system.assertEquals('a', actual.SPEC_STOCK);
        system.assertEquals('a', actual.SP_STCK_NO);
        system.assertEquals('a', actual.INDINVMANG);
        system.assertEquals(0, actual.NET_WEIGHT);
        system.assertEquals('a', actual.MATERIAL_EXTERNAL);
        system.assertEquals('a', actual.MATERIAL_GUID);
        system.assertEquals('a', actual.MATERIAL_VERSION);

        sapSalesOrderDetail.ORDER_FLOWS_OUT actual0 = new sapSalesOrderDetail.ORDER_FLOWS_OUT();
    }
    @istest
    private static void TestORDER_HEADERS_OUT() {
        sapSalesOrderDetail.ORDER_HEADERS_OUT actual = new sapSalesOrderDetail.ORDER_HEADERS_OUT('a','a',Date.newInstance(2000,1,1),'a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a','a','a',Date.newInstance(2000,1,1),'a','a','a',0,'a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a',Date.newInstance(2000,1,1),'a','a');

        actual.DOC_CLASS = 'a';
        actual.DOC_INDIC = 'a';
        actual.SD_PRIC_PR = 'a';
        actual.SHIP_COND = 'a';
        actual.ORDBILLTYP = 'a';
        actual.ORD_PROBAB = 'a';
        actual.SEAR_PRPR = 'a';
        actual.PURCH_NO = 'a';
        actual.PO_METHOD = 'a';
        actual.PURCH_DATE = Date.newInstance(2000,1,1);
        actual.PO_SUPPLEM = 'a';
        actual.REF_1 = 'a';
        actual.ORDERER_NA = 'a';
        actual.TELEPHONE = 'a';
        actual.DUN_COUNT = 0;
        actual.DUN_DATE = Date.newInstance(2000,1,1);
        actual.SOLD_TO = 'a';
        actual.COSTCENTER = 'a';
        actual.UPDATE_GRP = 'a';
        actual.STAT_CURR = 'a';
        actual.ISOSTATCUR = 'a';
        actual.CH_ON = Date.newInstance(2000,1,1);
        actual.CUST_GRP1 = 'a';
        actual.CUST_GRP2 = 'a';
        actual.CUST_GRP3 = 'a';
        actual.CUST_GRP4 = 'a';
        actual.CUST_GRP5 = 'a';
        actual.AGREE_COND = 'a';
        actual.CO_AREA = 'a';
        actual.WBS_ELEM = 'a';
        actual.EXCHG_RATE = 'a';
        actual.C_CTR_AREA = 'a';
        actual.CRED_ACCNT = 'a';
        actual.CRED_GROUP = 'a';
        actual.REPR_GROUP = 'a';
        actual.RISK_CATEG = 'a';
        actual.CURR_CRED = 'a';
        actual.ISOCURRCRE = 'a';
        actual.REL_DAT_DD = Date.newInstance(2000,1,1);
        actual.NEXT_CHDAT = Date.newInstance(2000,1,1);
        actual.NEXT_DATE = Date.newInstance(2000,1,1);
        actual.REL_CREDIT = 0;
        actual.HI_TYPE_PR = 'a';
        actual.DLVSCHEDUS = 'a';
        actual.PLAN_DLV = 'a';
        actual.REF_DOC = 'a';
        actual.OB_JNR_HD = 'a';
        actual.COMP_CODE = 'a';
        actual.ALT_TAX_CL = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.REF_DOC_L = 'a';
        actual.ASS_NUMBER = 'a';
        actual.DOC_CAT_SD = 'a';
        actual.KALSM_CH = 'a';
        actual.ACC_PERIOD = 'a';
        actual.ORDERID = 'a';
        actual.NOTIF_NO = 'a';
        actual.MASTER_CON = 'a';
        actual.REF_PROC = 'a';
        actual.CHECK_PART = 'a';
        actual.PICK_UP_DA = Date.newInstance(2000,1,1);
        actual.PICK_UP_T1 = 'a';
        actual.PICK_UP_T2 = 'a';
        actual.NUM_PAY_CA = 'a';
        actual.LINE_TIME = 'a';
        actual.TAX_DEST_CT = 'a';
        actual.ISOTAXDEST = 'a';
        actual.TAX_DEPART = 'a';
        actual.ISOTAXDEPA = 'a';
        actual.EU_TRIANG = 'a';
        actual.MAST_CONTR = 'a';
        actual.CML_QTY_DA = Date.newInstance(2000,1,1);
        actual.MS_DATE = Date.newInstance(2000,1,1);
        actual.VERSION = 'a';
        actual.REF_DOC_L_LONG = 'a';
        actual.CRM_GUID = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REC_DATE);
        system.assertEquals('a', actual.REC_TIME);
        system.assertEquals('a', actual.CREATED_BY);
        system.assertEquals(Date.newInstance(2000,1,1), actual.QT_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.QT_VALID_T);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DOC_DATE);
        system.assertEquals('a', actual.SD_DOC_CAT);
        system.assertEquals('a', actual.TRAN_GROUP);
        system.assertEquals('a', actual.DOC_TYPE);
        system.assertEquals('a', actual.ORD_REASON);
        system.assertEquals(Date.newInstance(2000,1,1), actual.WAR_DATE);
        system.assertEquals('a', actual.SD_COL_NUM);
        system.assertEquals('a', actual.DLV_BLOCK);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals(0, actual.NET_VAL_HD);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURREN_ISO);
        system.assertEquals('a', actual.SALES_ORG);
        system.assertEquals('a', actual.DISTR_CHAN);
        system.assertEquals('a', actual.DIVISION);
        system.assertEquals('a', actual.SALES_GRP);
        system.assertEquals('a', actual.SALES_OFF);
        system.assertEquals('a', actual.BUS_AREA);
        system.assertEquals('a', actual.CT_AREA);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CT_VALID_F);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CT_VALID_T);
        system.assertEquals('a', actual.CONDITIONS);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE_H);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals('a', actual.COMPL_DLV);
        system.assertEquals('a', actual.DOC_CLASS);
        system.assertEquals('a', actual.DOC_INDIC);
        system.assertEquals('a', actual.SD_PRIC_PR);
        system.assertEquals('a', actual.SHIP_COND);
        system.assertEquals('a', actual.ORDBILLTYP);
        system.assertEquals('a', actual.ORD_PROBAB);
        system.assertEquals('a', actual.SEAR_PRPR);
        system.assertEquals('a', actual.PURCH_NO);
        system.assertEquals('a', actual.PO_METHOD);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PURCH_DATE);
        system.assertEquals('a', actual.PO_SUPPLEM);
        system.assertEquals('a', actual.REF_1);
        system.assertEquals('a', actual.ORDERER_NA);
        system.assertEquals('a', actual.TELEPHONE);
        system.assertEquals(0, actual.DUN_COUNT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DUN_DATE);
        system.assertEquals('a', actual.SOLD_TO);
        system.assertEquals('a', actual.COSTCENTER);
        system.assertEquals('a', actual.UPDATE_GRP);
        system.assertEquals('a', actual.STAT_CURR);
        system.assertEquals('a', actual.ISOSTATCUR);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CH_ON);
        system.assertEquals('a', actual.CUST_GRP1);
        system.assertEquals('a', actual.CUST_GRP2);
        system.assertEquals('a', actual.CUST_GRP3);
        system.assertEquals('a', actual.CUST_GRP4);
        system.assertEquals('a', actual.CUST_GRP5);
        system.assertEquals('a', actual.AGREE_COND);
        system.assertEquals('a', actual.CO_AREA);
        system.assertEquals('a', actual.WBS_ELEM);
        system.assertEquals('a', actual.EXCHG_RATE);
        system.assertEquals('a', actual.C_CTR_AREA);
        system.assertEquals('a', actual.CRED_ACCNT);
        system.assertEquals('a', actual.CRED_GROUP);
        system.assertEquals('a', actual.REPR_GROUP);
        system.assertEquals('a', actual.RISK_CATEG);
        system.assertEquals('a', actual.CURR_CRED);
        system.assertEquals('a', actual.ISOCURRCRE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REL_DAT_DD);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NEXT_CHDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NEXT_DATE);
        system.assertEquals(0, actual.REL_CREDIT);
        system.assertEquals('a', actual.HI_TYPE_PR);
        system.assertEquals('a', actual.DLVSCHEDUS);
        system.assertEquals('a', actual.PLAN_DLV);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.OB_JNR_HD);
        system.assertEquals('a', actual.COMP_CODE);
        system.assertEquals('a', actual.ALT_TAX_CL);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals('a', actual.REF_DOC_L);
        system.assertEquals('a', actual.ASS_NUMBER);
        system.assertEquals('a', actual.DOC_CAT_SD);
        system.assertEquals('a', actual.KALSM_CH);
        system.assertEquals('a', actual.ACC_PERIOD);
        system.assertEquals('a', actual.ORDERID);
        system.assertEquals('a', actual.NOTIF_NO);
        system.assertEquals('a', actual.MASTER_CON);
        system.assertEquals('a', actual.REF_PROC);
        system.assertEquals('a', actual.CHECK_PART);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PICK_UP_DA);
        system.assertEquals('a', actual.PICK_UP_T1);
        system.assertEquals('a', actual.PICK_UP_T2);
        system.assertEquals('a', actual.NUM_PAY_CA);
        system.assertEquals('a', actual.LINE_TIME);
        system.assertEquals('a', actual.TAX_DEST_CT);
        system.assertEquals('a', actual.ISOTAXDEST);
        system.assertEquals('a', actual.TAX_DEPART);
        system.assertEquals('a', actual.ISOTAXDEPA);
        system.assertEquals('a', actual.EU_TRIANG);
        system.assertEquals('a', actual.MAST_CONTR);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CML_QTY_DA);
        system.assertEquals(Date.newInstance(2000,1,1), actual.MS_DATE);
        system.assertEquals('a', actual.VERSION);
        system.assertEquals('a', actual.REF_DOC_L_LONG);
        system.assertEquals('a', actual.CRM_GUID);

        sapSalesOrderDetail.ORDER_HEADERS_OUT actual0 = new sapSalesOrderDetail.ORDER_HEADERS_OUT();
    }
    @istest
    private static void TestORDER_ITEMS_OUT() {
        sapSalesOrderDetail.ORDER_ITEMS_OUT actual = new sapSalesOrderDetail.ORDER_ITEMS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',0,0,'a','a',0,0,'a','a',0,0,Date.newInstance(2000,1,1),0,'a','a',0);

        actual.MAX_DEV_DA = 0;
        actual.REPAIR_PRO = 'a';
        actual.DLVSCHEDUS = 'a';
        actual.DLV_GROUP = 'a';
        actual.FIXED_QUAN = 'a';
        actual.DELI_UNLIM = 'a';
        actual.OVER_DLV_T = 0;
        actual.UNDER_DLV = 0;
        actual.BILL_BLOCK = 'a';
        actual.REPLACE_PT = 'a';
        actual.METH_BILL = 'a';
        actual.DIVISION = 'a';
        actual.BUS_AREA = 'a';
        actual.NET_VALUE = 0;
        actual.CURRENCY_x = 'a';
        actual.CURREN_ISO = 'a';
        actual.MAX_PL_DLV = 0;
        actual.PART_DLV = 'a';
        actual.BTCH_SPLIT = 'a';
        actual.REQ_QTY = 0;
        actual.CUM_REQ_DE = 0;
        actual.CUM_CF_QTY = 0;
        actual.CUM_CON_QU = 0;
        actual.SALES_UNIT = 'a';
        actual.ISOCODUNIT = 'a';
        actual.SALES_QTY1 = 0;
        actual.SALES_QTY2 = 0;
        actual.GROSS_WEIG = 0;
        actual.NET_WEIGHT = 0;
        actual.UNIT_OF_WT = 'a';
        actual.UNIT_WTISO = 'a';
        actual.VOLUME = 0;
        actual.VOLUMEUNIT = 'a';
        actual.VOLUNITISO = 'a';
        actual.CAU_VBELN = 'a';
        actual.CAU_POSNR = 'a';
        actual.REF_DOC = 'a';
        actual.POSNR_VOR = 'a';
        actual.OBJ_COPY = 'a';
        actual.UPDAT_FLAG = 'a';
        actual.END_RULE = 'a';
        actual.DLV_PRIO = 'a';
        actual.PLANT = 'a';
        actual.STGE_LOC = 'a';
        actual.SHIP_POINT = 'a';
        actual.ROUTE = 'a';
        actual.KEY_ST = 'a';
        actual.DATE_ST = Date.newInstance(2000,1,1);
        actual.NBR_ST = 'a';
        actual.STPOS_VBAP = 0;
        actual.ORDER_PROB = 'a';
        actual.CREAT_DATE = Date.newInstance(2000,1,1);
        actual.CREATED_BY = 'a';
        actual.REC_TIME = 'a';
        actual.TAX_CLASS1 = 'a';
        actual.TAX_CLASS2 = 'a';
        actual.TAX_CLASS3 = 'a';
        actual.TAX_CLASS4 = 'a';
        actual.TAX_CLASS5 = 'a';
        actual.TAX_CLASS6 = 'a';
        actual.TAX_CLASS7 = 'a';
        actual.TAX_CLASS8 = 'a';
        actual.TAX_CLASS9 = 'a';
        actual.FIX_SP_DAY = 0;
        actual.VAR_SP_DAY = 0;
        actual.PREC_DOC = 'a';
        actual.NET_PRICE = 0;
        actual.COND_P_UNT = 0;
        actual.COND_UNIT = 'a';
        actual.CONISOUNIT = 'a';
        actual.RETOURE = 'a';
        actual.CASH_DISC = 'a';
        actual.AVAILCHECK = 'a';
        actual.SUM_REQUIR = 'a';
        actual.MAT_PR_GRP = 'a';
        actual.ACCT_ASSGT = 'a';
        actual.REBATE_GRP = 'a';
        actual.COMM_GROUP = 'a';
        actual.EUR_ART_NR = 'a';
        actual.PRICE_OK = 'a';
        actual.VAL_TYPE = 'a';
        actual.SEP_VALUAT = 'a';
        actual.BATCH_MGMT = 'a';
        actual.IND_BTCH = 'a';
        actual.MIN_DELY = 0;
        actual.UPDATE_GRP = 'a';
        actual.COST_DOC_C = 0;
        actual.SUBTOT_PP1 = 0;
        actual.SUBTOT_PP2 = 0;
        actual.SUBTOT_PP3 = 0;
        actual.SUBTOT_PP4 = 0;
        actual.SUBTOT_PP5 = 0;
        actual.SUBTOT_PP6 = 0;
        actual.EXCH_RATE = 0;
        actual.CH_ON = Date.newInstance(2000,1,1);
        actual.EAN_UPC = 'a';
        actual.FIX_DATE = 'a';
        actual.PROFIT_CTR = 'a';
        actual.PRC_GROUP1 = 'a';
        actual.PRC_GROUP2 = 'a';
        actual.PRC_GROUP3 = 'a';
        actual.PRC_GROUP4 = 'a';
        actual.PRC_GROUP5 = 'a';
        actual.COMPON_QTY = 0;
        actual.SUBSTREASO = 'a';
        actual.SPEC_STOCK = 'a';
        actual.ALLOC_INDI = 'a';
        actual.PROFIT_SEG = 'a';
        actual.WBS_ELEM = 'a';
        actual.ORDERID = 'a';
        actual.PLNG_MATL = 'a';
        actual.PLNG_PLANT = 'a';
        actual.BASE_UNIT = 'a';
        actual.ISOBASUNIT = 'a';
        actual.CONV_FACT = 0;
        actual.ACCTASSCAT = 'a';
        actual.CONSUMPT = 'a';
        actual.BOMEXPLNO = 'a';
        actual.OBJ_NR_IT = 'a';
        actual.RES_ANAL = 'a';
        actual.REQMTSTYP = 'a';
        actual.CREDPRICIT = 0;
        actual.PARTRELID = 'a';
        actual.ACTCREDID = 'a';
        actual.CR_EXCHRAT = 0;
        actual.CONFIG = 'a';
        actual.CHCLASS_IN = 'a';
        actual.STAT_PRICE = 'a';
        actual.COND_UPDAT = 'a';
        actual.SERNO_PROF = 'a';
        actual.NO_OF_SERI = 0;
        actual.NOGRPOSTED = 'a';
        actual.MAT_GRP_SM = 'a';
        actual.MAN_PR_CH = 'a';
        actual.DOC_CAT_SD = 'a';
        actual.MATDETERID = 'a';
        actual.ITUSAGEID = 'a';
        actual.COSTESTNR = 'a';
        actual.CSTG_VRNT = 'a';
        actual.BOMITEMNR = 'a';
        actual.STAT_VAL = 'a';
        actual.STAT_DATE = Date.newInstance(2000,1,1);
        actual.BUS_TRANST = 'a';
        actual.PREF_INDIC = 'a';
        actual.NRCONDREC = 'a';
        actual.INTCLASSNR = 'a';
        actual.BATCH_EXIT = 'a';
        actual.BOM_CATEGO = 'a';
        actual.BOM_IT_NR = 'a';
        actual.COUNTER = 'a';
        actual.INCONSCONF = 'a';
        actual.OVERH_KEY = 'a';
        actual.CSTG_SHEET = 'a';
        actual.CSTG_VRNT1 = 'a';
        actual.PROD_ALLOC = 'a';
        actual.PRICE_REF = 'a';
        actual.MATPRICGRP = 'a';
        actual.MATFRGTGRP = 'a';
        actual.PLANDLVSCH = 'a';
        actual.SEQUENCENO = 'a';
        actual.CREDPRIC = 0;
        actual.PAY_GUARAN = 'a';
        actual.GURANTEED = 0;
        actual.CFOP_CODE = 'a';
        actual.TAXLAWICMS = 'a';
        actual.TAXLAWIPI = 'a';
        actual.SD_TAXCODE = 'a';
        actual.VALCONTRNR = 'a';
        actual.VALCONTRIT = 'a';
        actual.ASSORT_MOD = 'a';
        actual.VALSPECSTO = 'a';
        actual.MATGRHIE1 = 'a';
        actual.MATGRHIE2 = 'a';
        actual.PROMOTION = 'a';
        actual.SALES_DEAL = 'a';
        actual.FLGLEADUNI = 'a';
        actual.FREE_GOODS = 'a';
        actual.VALID_OBJ = 'a';
        actual.TAX_AMOUNT = 0;
        actual.MRP_AREA = 'a';
        actual.CUST_MAT35 = 'a';
        actual.CR_EXCHRAT_V = 0;
        actual.EXCHRATEST_V = 0;
        actual.ITM_TYPE_USAGE = 'a';
        actual.CFOP_LONG = 'a';
        actual.GROSS_VAL = 0;
        actual.LOG_SYSTEM_OWN = 'a';
        actual.TAXLAWISS = 'a';
        actual.TAXLAWCOFINS = 'a';
        actual.TAXLAWPIS = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.MATERIAL);
        system.assertEquals('a', actual.MAT_ENTRD);
        system.assertEquals('a', actual.PR_REF_MAT);
        system.assertEquals('a', actual.BATCH);
        system.assertEquals('a', actual.MATL_GROUP);
        system.assertEquals('a', actual.SHORT_TEXT);
        system.assertEquals('a', actual.ITEM_CATEG);
        system.assertEquals('a', actual.ITEM_TYPE);
        system.assertEquals('a', actual.REL_FOR_DE);
        system.assertEquals('a', actual.REL_FOR_BI);
        system.assertEquals('a', actual.HG_LV_ITEM);
        system.assertEquals('a', actual.ALTERN_ITM);
        system.assertEquals('a', actual.REA_FOR_RE);
        system.assertEquals('a', actual.PROD_HIER);
        system.assertEquals(0, actual.OUT_AGR_TA);
        system.assertEquals(0, actual.TARGET_QTY);
        system.assertEquals('a', actual.TARGET_QU);
        system.assertEquals('a', actual.T_UNIT_ISO);
        system.assertEquals(0, actual.TARG_QTY_N);
        system.assertEquals(0, actual.TARG_QTY_D);
        system.assertEquals('a', actual.BASE_UOM);
        system.assertEquals('a', actual.T_BAS_UNIT);
        system.assertEquals(0, actual.SCALE_QUAN);
        system.assertEquals(0, actual.ROUND_DLV);
        system.assertEquals(Date.newInstance(2000,1,1), actual.RECON_DATE);
        system.assertEquals(0, actual.MAX_DEVIAT);
        system.assertEquals('a', actual.PO_ITM_NO);
        system.assertEquals('a', actual.CUST_MAT22);
        system.assertEquals(0, actual.MAX_DEV_PE);
        system.assertEquals(0, actual.MAX_DEV_DA);
        system.assertEquals('a', actual.REPAIR_PRO);
        system.assertEquals('a', actual.DLVSCHEDUS);
        system.assertEquals('a', actual.DLV_GROUP);
        system.assertEquals('a', actual.FIXED_QUAN);
        system.assertEquals('a', actual.DELI_UNLIM);
        system.assertEquals(0, actual.OVER_DLV_T);
        system.assertEquals(0, actual.UNDER_DLV);
        system.assertEquals('a', actual.BILL_BLOCK);
        system.assertEquals('a', actual.REPLACE_PT);
        system.assertEquals('a', actual.METH_BILL);
        system.assertEquals('a', actual.DIVISION);
        system.assertEquals('a', actual.BUS_AREA);
        system.assertEquals(0, actual.NET_VALUE);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.CURREN_ISO);
        system.assertEquals(0, actual.MAX_PL_DLV);
        system.assertEquals('a', actual.PART_DLV);
        system.assertEquals('a', actual.BTCH_SPLIT);
        system.assertEquals(0, actual.REQ_QTY);
        system.assertEquals(0, actual.CUM_REQ_DE);
        system.assertEquals(0, actual.CUM_CF_QTY);
        system.assertEquals(0, actual.CUM_CON_QU);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.ISOCODUNIT);
        system.assertEquals(0, actual.SALES_QTY1);
        system.assertEquals(0, actual.SALES_QTY2);
        system.assertEquals(0, actual.GROSS_WEIG);
        system.assertEquals(0, actual.NET_WEIGHT);
        system.assertEquals('a', actual.UNIT_OF_WT);
        system.assertEquals('a', actual.UNIT_WTISO);
        system.assertEquals(0, actual.VOLUME);
        system.assertEquals('a', actual.VOLUMEUNIT);
        system.assertEquals('a', actual.VOLUNITISO);
        system.assertEquals('a', actual.CAU_VBELN);
        system.assertEquals('a', actual.CAU_POSNR);
        system.assertEquals('a', actual.REF_DOC);
        system.assertEquals('a', actual.POSNR_VOR);
        system.assertEquals('a', actual.OBJ_COPY);
        system.assertEquals('a', actual.UPDAT_FLAG);
        system.assertEquals('a', actual.END_RULE);
        system.assertEquals('a', actual.DLV_PRIO);
        system.assertEquals('a', actual.PLANT);
        system.assertEquals('a', actual.STGE_LOC);
        system.assertEquals('a', actual.SHIP_POINT);
        system.assertEquals('a', actual.ROUTE);
        system.assertEquals('a', actual.KEY_ST);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DATE_ST);
        system.assertEquals('a', actual.NBR_ST);
        system.assertEquals(0, actual.STPOS_VBAP);
        system.assertEquals('a', actual.ORDER_PROB);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CREAT_DATE);
        system.assertEquals('a', actual.CREATED_BY);
        system.assertEquals('a', actual.REC_TIME);
        system.assertEquals('a', actual.TAX_CLASS1);
        system.assertEquals('a', actual.TAX_CLASS2);
        system.assertEquals('a', actual.TAX_CLASS3);
        system.assertEquals('a', actual.TAX_CLASS4);
        system.assertEquals('a', actual.TAX_CLASS5);
        system.assertEquals('a', actual.TAX_CLASS6);
        system.assertEquals('a', actual.TAX_CLASS7);
        system.assertEquals('a', actual.TAX_CLASS8);
        system.assertEquals('a', actual.TAX_CLASS9);
        system.assertEquals(0, actual.FIX_SP_DAY);
        system.assertEquals(0, actual.VAR_SP_DAY);
        system.assertEquals('a', actual.PREC_DOC);
        system.assertEquals(0, actual.NET_PRICE);
        system.assertEquals(0, actual.COND_P_UNT);
        system.assertEquals('a', actual.COND_UNIT);
        system.assertEquals('a', actual.CONISOUNIT);
        system.assertEquals('a', actual.RETOURE);
        system.assertEquals('a', actual.CASH_DISC);
        system.assertEquals('a', actual.AVAILCHECK);
        system.assertEquals('a', actual.SUM_REQUIR);
        system.assertEquals('a', actual.MAT_PR_GRP);
        system.assertEquals('a', actual.ACCT_ASSGT);
        system.assertEquals('a', actual.REBATE_GRP);
        system.assertEquals('a', actual.COMM_GROUP);
        system.assertEquals('a', actual.EUR_ART_NR);
        system.assertEquals('a', actual.PRICE_OK);
        system.assertEquals('a', actual.VAL_TYPE);
        system.assertEquals('a', actual.SEP_VALUAT);
        system.assertEquals('a', actual.BATCH_MGMT);
        system.assertEquals('a', actual.IND_BTCH);
        system.assertEquals(0, actual.MIN_DELY);
        system.assertEquals('a', actual.UPDATE_GRP);
        system.assertEquals(0, actual.COST_DOC_C);
        system.assertEquals(0, actual.SUBTOT_PP1);
        system.assertEquals(0, actual.SUBTOT_PP2);
        system.assertEquals(0, actual.SUBTOT_PP3);
        system.assertEquals(0, actual.SUBTOT_PP4);
        system.assertEquals(0, actual.SUBTOT_PP5);
        system.assertEquals(0, actual.SUBTOT_PP6);
        system.assertEquals(0, actual.EXCH_RATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CH_ON);
        system.assertEquals('a', actual.EAN_UPC);
        system.assertEquals('a', actual.FIX_DATE);
        system.assertEquals('a', actual.PROFIT_CTR);
        system.assertEquals('a', actual.PRC_GROUP1);
        system.assertEquals('a', actual.PRC_GROUP2);
        system.assertEquals('a', actual.PRC_GROUP3);
        system.assertEquals('a', actual.PRC_GROUP4);
        system.assertEquals('a', actual.PRC_GROUP5);
        system.assertEquals(0, actual.COMPON_QTY);
        system.assertEquals('a', actual.SUBSTREASO);
        system.assertEquals('a', actual.SPEC_STOCK);
        system.assertEquals('a', actual.ALLOC_INDI);
        system.assertEquals('a', actual.PROFIT_SEG);
        system.assertEquals('a', actual.WBS_ELEM);
        system.assertEquals('a', actual.ORDERID);
        system.assertEquals('a', actual.PLNG_MATL);
        system.assertEquals('a', actual.PLNG_PLANT);
        system.assertEquals('a', actual.BASE_UNIT);
        system.assertEquals('a', actual.ISOBASUNIT);
        system.assertEquals(0, actual.CONV_FACT);
        system.assertEquals('a', actual.ACCTASSCAT);
        system.assertEquals('a', actual.CONSUMPT);
        system.assertEquals('a', actual.BOMEXPLNO);
        system.assertEquals('a', actual.OBJ_NR_IT);
        system.assertEquals('a', actual.RES_ANAL);
        system.assertEquals('a', actual.REQMTSTYP);
        system.assertEquals(0, actual.CREDPRICIT);
        system.assertEquals('a', actual.PARTRELID);
        system.assertEquals('a', actual.ACTCREDID);
        system.assertEquals(0, actual.CR_EXCHRAT);
        system.assertEquals('a', actual.CONFIG);
        system.assertEquals('a', actual.CHCLASS_IN);
        system.assertEquals('a', actual.STAT_PRICE);
        system.assertEquals('a', actual.COND_UPDAT);
        system.assertEquals('a', actual.SERNO_PROF);
        system.assertEquals(0, actual.NO_OF_SERI);
        system.assertEquals('a', actual.NOGRPOSTED);
        system.assertEquals('a', actual.MAT_GRP_SM);
        system.assertEquals('a', actual.MAN_PR_CH);
        system.assertEquals('a', actual.DOC_CAT_SD);
        system.assertEquals('a', actual.MATDETERID);
        system.assertEquals('a', actual.ITUSAGEID);
        system.assertEquals('a', actual.COSTESTNR);
        system.assertEquals('a', actual.CSTG_VRNT);
        system.assertEquals('a', actual.BOMITEMNR);
        system.assertEquals('a', actual.STAT_VAL);
        system.assertEquals(Date.newInstance(2000,1,1), actual.STAT_DATE);
        system.assertEquals('a', actual.BUS_TRANST);
        system.assertEquals('a', actual.PREF_INDIC);
        system.assertEquals('a', actual.NRCONDREC);
        system.assertEquals('a', actual.INTCLASSNR);
        system.assertEquals('a', actual.BATCH_EXIT);
        system.assertEquals('a', actual.BOM_CATEGO);
        system.assertEquals('a', actual.BOM_IT_NR);
        system.assertEquals('a', actual.COUNTER);
        system.assertEquals('a', actual.INCONSCONF);
        system.assertEquals('a', actual.OVERH_KEY);
        system.assertEquals('a', actual.CSTG_SHEET);
        system.assertEquals('a', actual.CSTG_VRNT1);
        system.assertEquals('a', actual.PROD_ALLOC);
        system.assertEquals('a', actual.PRICE_REF);
        system.assertEquals('a', actual.MATPRICGRP);
        system.assertEquals('a', actual.MATFRGTGRP);
        system.assertEquals('a', actual.PLANDLVSCH);
        system.assertEquals('a', actual.SEQUENCENO);
        system.assertEquals(0, actual.CREDPRIC);
        system.assertEquals('a', actual.PAY_GUARAN);
        system.assertEquals(0, actual.GURANTEED);
        system.assertEquals('a', actual.CFOP_CODE);
        system.assertEquals('a', actual.TAXLAWICMS);
        system.assertEquals('a', actual.TAXLAWIPI);
        system.assertEquals('a', actual.SD_TAXCODE);
        system.assertEquals('a', actual.VALCONTRNR);
        system.assertEquals('a', actual.VALCONTRIT);
        system.assertEquals('a', actual.ASSORT_MOD);
        system.assertEquals('a', actual.VALSPECSTO);
        system.assertEquals('a', actual.MATGRHIE1);
        system.assertEquals('a', actual.MATGRHIE2);
        system.assertEquals('a', actual.PROMOTION);
        system.assertEquals('a', actual.SALES_DEAL);
        system.assertEquals('a', actual.FLGLEADUNI);
        system.assertEquals('a', actual.FREE_GOODS);
        system.assertEquals('a', actual.VALID_OBJ);
        system.assertEquals(0, actual.TAX_AMOUNT);
        system.assertEquals('a', actual.MRP_AREA);
        system.assertEquals('a', actual.CUST_MAT35);
        system.assertEquals(0, actual.CR_EXCHRAT_V);
        system.assertEquals(0, actual.EXCHRATEST_V);
        system.assertEquals('a', actual.ITM_TYPE_USAGE);
        system.assertEquals('a', actual.CFOP_LONG);
        system.assertEquals(0, actual.GROSS_VAL);
        system.assertEquals('a', actual.LOG_SYSTEM_OWN);
        system.assertEquals('a', actual.TAXLAWISS);
        system.assertEquals('a', actual.TAXLAWCOFINS);
        system.assertEquals('a', actual.TAXLAWPIS);

        sapSalesOrderDetail.ORDER_ITEMS_OUT actual0 = new sapSalesOrderDetail.ORDER_ITEMS_OUT();
    }
    @istest
    private static void TestORDER_PARTNERS_OUT() {
        sapSalesOrderDetail.ORDER_PARTNERS_OUT actual = new sapSalesOrderDetail.ORDER_PARTNERS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.PARTN_ROLE);
        system.assertEquals('a', actual.CUSTOMER);
        system.assertEquals('a', actual.VENDOR_NO);
        system.assertEquals('a', actual.PERSON_NO);
        system.assertEquals('a', actual.CONTACT);
        system.assertEquals('a', actual.ADDRESS);
        system.assertEquals('a', actual.UNLOAD_PT);
        system.assertEquals('a', actual.COUNTRY);
        system.assertEquals('a', actual.COUNTRYISO);
        system.assertEquals('a', actual.ADDRE_INDI);
        system.assertEquals('a', actual.ACC_1_TIME);
        system.assertEquals('a', actual.CUSTHITYP);
        system.assertEquals('a', actual.PRIC_REL);
        system.assertEquals('a', actual.REBATE_REL);
        system.assertEquals('a', actual.LEVEL_NR);
        system.assertEquals('a', actual.DESC_PARTN);
        system.assertEquals('a', actual.TRANSPZONE);
        system.assertEquals('a', actual.ASSIGN_HI);
        system.assertEquals('a', actual.VAT_REG_NO);
        system.assertEquals('a', actual.FURTHERPAR);
        system.assertEquals('a', actual.PERS_NO);
        system.assertEquals('a', actual.CALEND_UPD);

        sapSalesOrderDetail.ORDER_PARTNERS_OUT actual0 = new sapSalesOrderDetail.ORDER_PARTNERS_OUT();
    }
    @istest
    private static void TestORDER_SCHEDULES_OUT() {
        sapSalesOrderDetail.ORDER_SCHEDULES_OUT actual = new sapSalesOrderDetail.ORDER_SCHEDULES_OUT('a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',0,0,'a','a',0,'a','a',Date.newInstance(2000,1,1),'a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        actual.LOAD_DATE = Date.newInstance(2000,1,1);
        actual.GI_DATE = Date.newInstance(2000,1,1);
        actual.CORR_QTY = 0;
        actual.REQ_DLV_BL = 'a';
        actual.GRP_DEFIN = 'a';
        actual.RELEASTYP = 'a';
        actual.FORCAST_NR = 'a';
        actual.COMMIT_QTY = 0;
        actual.SIZE2 = 0;
        actual.SIZE3 = 0;
        actual.UNIT_MEAS = 'a';
        actual.ISO_ROMEI = 'a';
        actual.FORMULAKEY = 'a';
        actual.SALESQTYNR = 0;
        actual.SALESQTYDE = 0;
        actual.AVAIL_CON = 'a';
        actual.MOVE_TYPE = 'a';
        actual.PREQ_ITEM = 'a';
        actual.LINTYP_EDI = 'a';
        actual.ORDERID = 'a';
        actual.PLANORDNR = 'a';
        actual.BOMEXPL_NO = 'a';
        actual.CUSTCHSTAT = 'a';
        actual.GURANTEED = 0;
        actual.MS_TIME = 'a';
        actual.TP_TIME = 'a';
        actual.LOAD_TIME = 'a';
        actual.GI_TIME = 'a';
        actual.ROUTESCHED = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.DOC_NUMBER);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SCHED_LINE);
        system.assertEquals('a', actual.SCHED_TYPE);
        system.assertEquals('a', actual.RELFORDEL);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE);
        system.assertEquals('a', actual.REQ_TIME);
        system.assertEquals(0, actual.REQ_QTY);
        system.assertEquals(0, actual.CONFIR_QTY);
        system.assertEquals('a', actual.SALES_UNIT);
        system.assertEquals('a', actual.ISOCODUNIT);
        system.assertEquals(0, actual.REQ_QTY1);
        system.assertEquals('a', actual.BASE_UOM);
        system.assertEquals('a', actual.ISOBASUNIT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REQ_DATE1);
        system.assertEquals('a', actual.REQ_TYPE);
        system.assertEquals('a', actual.PLTYPE);
        system.assertEquals('a', actual.BUSIDOCNR);
        system.assertEquals('a', actual.BUSIITNR);
        system.assertEquals('a', actual.SCHED_LIN1);
        system.assertEquals(Date.newInstance(2000,1,1), actual.EARL_DATE);
        system.assertEquals('a', actual.MAINT_REQ);
        system.assertEquals('a', actual.PREQ_NO);
        system.assertEquals('a', actual.PO_TYPE);
        system.assertEquals('a', actual.DOC_CAT);
        system.assertEquals('a', actual.CONF_STAT);
        system.assertEquals('a', actual.IR_IND);
        system.assertEquals(Date.newInstance(2000,1,1), actual.RETURNDATE);
        system.assertEquals('a', actual.DATE_TYPE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TP_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.MS_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LOAD_DATE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE);
        system.assertEquals(0, actual.CORR_QTY);
        system.assertEquals('a', actual.REQ_DLV_BL);
        system.assertEquals('a', actual.GRP_DEFIN);
        system.assertEquals('a', actual.RELEASTYP);
        system.assertEquals('a', actual.FORCAST_NR);
        system.assertEquals(0, actual.COMMIT_QTY);
        system.assertEquals(0, actual.SIZE2);
        system.assertEquals(0, actual.SIZE3);
        system.assertEquals('a', actual.UNIT_MEAS);
        system.assertEquals('a', actual.ISO_ROMEI);
        system.assertEquals('a', actual.FORMULAKEY);
        system.assertEquals(0, actual.SALESQTYNR);
        system.assertEquals(0, actual.SALESQTYDE);
        system.assertEquals('a', actual.AVAIL_CON);
        system.assertEquals('a', actual.MOVE_TYPE);
        system.assertEquals('a', actual.PREQ_ITEM);
        system.assertEquals('a', actual.LINTYP_EDI);
        system.assertEquals('a', actual.ORDERID);
        system.assertEquals('a', actual.PLANORDNR);
        system.assertEquals('a', actual.BOMEXPL_NO);
        system.assertEquals('a', actual.CUSTCHSTAT);
        system.assertEquals(0, actual.GURANTEED);
        system.assertEquals('a', actual.MS_TIME);
        system.assertEquals('a', actual.TP_TIME);
        system.assertEquals('a', actual.LOAD_TIME);
        system.assertEquals('a', actual.GI_TIME);
        system.assertEquals('a', actual.ROUTESCHED);

        sapSalesOrderDetail.ORDER_SCHEDULES_OUT actual0 = new sapSalesOrderDetail.ORDER_SCHEDULES_OUT();
    }
    @istest
    private static void TestORDER_STATUSHEADERS_OUT() {
        sapSalesOrderDetail.ORDER_STATUSHEADERS_OUT actual = new sapSalesOrderDetail.ORDER_STATUSHEADERS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a');

        actual.CUSTRESIT1 = 'a';
        actual.CUSTRESIT2 = 'a';
        actual.CUSTRESIT3 = 'a';
        actual.CUSTRESIT4 = 'a';
        actual.CUSTRESIT5 = 'a';
        actual.TOTSTATIT = 'a';
        actual.STATSTACLC = 'a';
        actual.STATDYNCLC = 'a';
        actual.STATCREDCH = 'a';
        actual.STATCRECH1 = 'a';
        actual.STATCRECH2 = 'a';
        actual.STATCRECH3 = 'a';
        actual.STATCRECH4 = 'a';
        actual.STATCRECH5 = 'a';
        actual.STATCRECH6 = 'a';
        actual.STATCRECH7 = 'a';
        actual.STATCRECH8 = 'a';
        actual.STATCRECH9 = 'a';
        actual.STATCRECHA = 'a';
        actual.STATCRECHB = 'a';
        actual.STATCRECHC = 'a';
        actual.TOTSTATCCH = 'a';
        actual.TRNSPLANST = 'a';
        actual.QUITTSTAT = 'a';
        actual.CONFIRMSTA = 'a';
        actual.SAPRELEASE = 'a';
        actual.TOTINCOMI = 'a';
        actual.TOTINCOMI1 = 'a';
        actual.TOTINCOMI2 = 'a';
        actual.HDINCOMPL = 'a';
        actual.HDINCOMPL1 = 'a';
        actual.HDINCOMPL2 = 'a';
        actual.HDINCOMPL3 = 'a';
        actual.CREDCHECK = 'a';
        actual.DELAYSTAT = 'a';
        actual.SHIPPUNIT = 'a';
        actual.DISTRISTAT = 'a';
        actual.REVDETSTAT = 'a';
        actual.INDIDOCACH = 'a';
        actual.TOBILBLOST = 'a';
        actual.TODELBLOST = 'a';
        actual.TOBLOCKSTA = 'a';
        actual.LEBHEADSTA = 'a';
        actual.FMSTATUS = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.REFDOCHDST);
        system.assertEquals('a', actual.TOTREFSTAT);
        system.assertEquals('a', actual.CONFIRSTAT);
        system.assertEquals('a', actual.DELIV_STAT);
        system.assertEquals('a', actual.DLV_STAT_H);
        system.assertEquals('a', actual.TOTGOODSMV);
        system.assertEquals('a', actual.BILLSTATUS);
        system.assertEquals('a', actual.BILLINGSTA);
        system.assertEquals('a', actual.ACCOUNTSTA);
        system.assertEquals('a', actual.OVERALLREJ);
        system.assertEquals('a', actual.PRC_STAT_H);
        system.assertEquals('a', actual.OVERALLPIC);
        system.assertEquals('a', actual.OVERALL_WM);
        system.assertEquals('a', actual.TOTINCOMPL);
        system.assertEquals('a', actual.TOTINCOMIT);
        system.assertEquals('a', actual.TOTINCOMBI);
        system.assertEquals('a', actual.GENINCOMHD);
        system.assertEquals('a', actual.HDIMCOMDEL);
        system.assertEquals('a', actual.HDINCOMBIL);
        system.assertEquals('a', actual.DOCIMCOMPR);
        system.assertEquals('a', actual.SD_DOC_CAT);
        system.assertEquals('a', actual.SDDOCOBJ);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CH_ON);
        system.assertEquals('a', actual.BILTOTSTAT);
        system.assertEquals('a', actual.INVOICSTAT);
        system.assertEquals('a', actual.CUSTRESHD1);
        system.assertEquals('a', actual.CUSTRESHD2);
        system.assertEquals('a', actual.CUSTRESHD3);
        system.assertEquals('a', actual.CUSTRESHD4);
        system.assertEquals('a', actual.CUSTRESHD5);
        system.assertEquals('a', actual.CUSTRESIT1);
        system.assertEquals('a', actual.CUSTRESIT2);
        system.assertEquals('a', actual.CUSTRESIT3);
        system.assertEquals('a', actual.CUSTRESIT4);
        system.assertEquals('a', actual.CUSTRESIT5);
        system.assertEquals('a', actual.TOTSTATIT);
        system.assertEquals('a', actual.STATSTACLC);
        system.assertEquals('a', actual.STATDYNCLC);
        system.assertEquals('a', actual.STATCREDCH);
        system.assertEquals('a', actual.STATCRECH1);
        system.assertEquals('a', actual.STATCRECH2);
        system.assertEquals('a', actual.STATCRECH3);
        system.assertEquals('a', actual.STATCRECH4);
        system.assertEquals('a', actual.STATCRECH5);
        system.assertEquals('a', actual.STATCRECH6);
        system.assertEquals('a', actual.STATCRECH7);
        system.assertEquals('a', actual.STATCRECH8);
        system.assertEquals('a', actual.STATCRECH9);
        system.assertEquals('a', actual.STATCRECHA);
        system.assertEquals('a', actual.STATCRECHB);
        system.assertEquals('a', actual.STATCRECHC);
        system.assertEquals('a', actual.TOTSTATCCH);
        system.assertEquals('a', actual.TRNSPLANST);
        system.assertEquals('a', actual.QUITTSTAT);
        system.assertEquals('a', actual.CONFIRMSTA);
        system.assertEquals('a', actual.SAPRELEASE);
        system.assertEquals('a', actual.TOTINCOMI);
        system.assertEquals('a', actual.TOTINCOMI1);
        system.assertEquals('a', actual.TOTINCOMI2);
        system.assertEquals('a', actual.HDINCOMPL);
        system.assertEquals('a', actual.HDINCOMPL1);
        system.assertEquals('a', actual.HDINCOMPL2);
        system.assertEquals('a', actual.HDINCOMPL3);
        system.assertEquals('a', actual.CREDCHECK);
        system.assertEquals('a', actual.DELAYSTAT);
        system.assertEquals('a', actual.SHIPPUNIT);
        system.assertEquals('a', actual.DISTRISTAT);
        system.assertEquals('a', actual.REVDETSTAT);
        system.assertEquals('a', actual.INDIDOCACH);
        system.assertEquals('a', actual.TOBILBLOST);
        system.assertEquals('a', actual.TODELBLOST);
        system.assertEquals('a', actual.TOBLOCKSTA);
        system.assertEquals('a', actual.LEBHEADSTA);
        system.assertEquals('a', actual.FMSTATUS);

        sapSalesOrderDetail.ORDER_STATUSHEADERS_OUT actual0 = new sapSalesOrderDetail.ORDER_STATUSHEADERS_OUT();
    }
    @istest
    private static void TestORDER_STATUSITEMS_OUT() {
        sapSalesOrderDetail.ORDER_STATUSITEMS_OUT actual = new sapSalesOrderDetail.ORDER_STATUSITEMS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.INCOSTAGOO = 'a';
        actual.DELAYSTAT = 'a';
        actual.REVDETSTAT = 'a';
        actual.DECTWHOUSE = 'a';
        actual.ITBILBLOST = 'a';
        actual.ITDELBLOST = 'a';
        actual.LEBITEMSTA = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.REFERNSTAT);
        system.assertEquals('a', actual.REFTOTSTAT);
        system.assertEquals('a', actual.CONFSTATIT);
        system.assertEquals('a', actual.DELIV_STAT);
        system.assertEquals('a', actual.DLV_STAT_I);
        system.assertEquals('a', actual.GOODSMVSTA);
        system.assertEquals('a', actual.BILLSTATHD);
        system.assertEquals('a', actual.BILLSTATIT);
        system.assertEquals('a', actual.REJSTATIT);
        system.assertEquals('a', actual.OVRPROCSTA);
        system.assertEquals('a', actual.PICKINGSTA);
        system.assertEquals('a', actual.WHMANAGSTA);
        system.assertEquals('a', actual.GENINCOMST);
        system.assertEquals('a', actual.INCOMSTDEL);
        system.assertEquals('a', actual.INCOMSTBIL);
        system.assertEquals('a', actual.INCOMSTPRI);
        system.assertEquals('a', actual.BILLSTAINT);
        system.assertEquals('a', actual.CUSTRESIT1);
        system.assertEquals('a', actual.CUSTRESIT2);
        system.assertEquals('a', actual.CUSTRESIT3);
        system.assertEquals('a', actual.CUSTRESIT4);
        system.assertEquals('a', actual.CUSTRESIT5);
        system.assertEquals('a', actual.PACKSTSTIT);
        system.assertEquals('a', actual.STAPICKCON);
        system.assertEquals('a', actual.CONFIRMSTA);
        system.assertEquals('a', actual.STATCRECH6);
        system.assertEquals('a', actual.STATCRECH7);
        system.assertEquals('a', actual.INCOMSTAIT);
        system.assertEquals('a', actual.INCOMSTAPA);
        system.assertEquals('a', actual.INCOSTAGOO);
        system.assertEquals('a', actual.DELAYSTAT);
        system.assertEquals('a', actual.REVDETSTAT);
        system.assertEquals('a', actual.DECTWHOUSE);
        system.assertEquals('a', actual.ITBILBLOST);
        system.assertEquals('a', actual.ITDELBLOST);
        system.assertEquals('a', actual.LEBITEMSTA);

        sapSalesOrderDetail.ORDER_STATUSITEMS_OUT actual0 = new sapSalesOrderDetail.ORDER_STATUSITEMS_OUT();
    }
    @istest
    private static void TestORDER_TEXTHEADERS_OUT() {
        sapSalesOrderDetail.ORDER_TEXTHEADERS_OUT actual = new sapSalesOrderDetail.ORDER_TEXTHEADERS_OUT('a','a','a','a','a','a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.COMPRESSTD = 'a';
        actual.OBJ_CLASS = 'a';
        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.SD_DOC);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.APPLOBJECT);
        system.assertEquals('a', actual.TEXT_NAME);
        system.assertEquals('a', actual.TEXT_ID);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.TITLE);
        system.assertEquals('a', actual.FORM);
        system.assertEquals('a', actual.STYLE);
        system.assertEquals('a', actual.VERSION);
        system.assertEquals('a', actual.CREATEUSER);
        system.assertEquals('a', actual.CREATEREL);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CREATEDATE);
        system.assertEquals('a', actual.CREATETIME);
        system.assertEquals('a', actual.CHANGEUSER);
        system.assertEquals('a', actual.CHANGEREL);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CHANGEDATE);
        system.assertEquals('a', actual.CHANGETIME);
        system.assertEquals('a', actual.LINESIZE);
        system.assertEquals('a', actual.LINEAMOUNT);
        system.assertEquals('a', actual.HYPHENAT);
        system.assertEquals('a', actual.ORGSPRAS);
        system.assertEquals('a', actual.ORGSPRAISO);
        system.assertEquals('a', actual.TRANSTAT);
        system.assertEquals('a', actual.MATCHCOD1);
        system.assertEquals('a', actual.MATCHCOD2);
        system.assertEquals('a', actual.REFOBJECT);
        system.assertEquals('a', actual.REFNAME);
        system.assertEquals('a', actual.REFID);
        system.assertEquals('a', actual.TEXTTYPE);
        system.assertEquals('a', actual.COMPRESSTD);
        system.assertEquals('a', actual.OBJ_CLASS);

        sapSalesOrderDetail.ORDER_TEXTHEADERS_OUT actual0 = new sapSalesOrderDetail.ORDER_TEXTHEADERS_OUT();
    }
    @istest
    private static void TestORDER_TEXTLINES_OUT() {
        sapSalesOrderDetail.ORDER_TEXTLINES_OUT actual = new sapSalesOrderDetail.ORDER_TEXTLINES_OUT('a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.OPERATION);
        system.assertEquals('a', actual.APPLOBJECT);
        system.assertEquals('a', actual.TEXT_NAME);
        system.assertEquals('a', actual.TEXT_ID);
        system.assertEquals('a', actual.LANGU);
        system.assertEquals('a', actual.LANGU_ISO);
        system.assertEquals('a', actual.LINE_CNT);
        system.assertEquals('a', actual.LINE);
        system.assertEquals('a', actual.FORMAT_COL);

        sapSalesOrderDetail.ORDER_TEXTLINES_OUT actual0 = new sapSalesOrderDetail.ORDER_TEXTLINES_OUT();
    }
    @istest
    private static void TestSALES_DOCUMENTS() {
        sapSalesOrderDetail.SALES_DOCUMENTS actual = new sapSalesOrderDetail.SALES_DOCUMENTS('a');

        system.assertEquals('a', actual.VBELN);

        sapSalesOrderDetail.SALES_DOCUMENTS actual0 = new sapSalesOrderDetail.SALES_DOCUMENTS();
    }

    @istest
    private static void testRun() {
        sapSalesOrderDetail request = testSetup();
        /*sapSalesOrderDetail response = request.run();
        system.assertEquals('a', response.BAPISDORDER_GETDETAILEDLIST.I_MEMORY_READ);
        string requestid = request.runAsync(null, null, new Continuation(10));*///Commented by Sourav for Overcast uninstall
    }

    private static sapSalesOrderDetail testSetup() {
        //overcast.TestingUtilities.SetupTestEnvironment('sapSalesOrderDetail');//Commented by Sourav for Overcast uninstall
        sapSalesOrderDetail request = new sapSalesOrderDetail();
        request.BAPISDORDER_GETDETAILEDLIST.I_MEMORY_READ = 'a';

        string s = request.serialize();
        request.testResponse = '{"output":' + s + '}';
        return request;
    }


    @istest
    private static void TestSerialize() {
        sapSalesOrderDetail input = new sapSalesOrderDetail();
        input.BAPISDORDER_GETDETAILEDLIST.I_MEMORY_READ = 'a';
        sapSalesOrderDetail actual = (sapSalesOrderDetail)JSON.deserialize(input.serialize(), sapSalesOrderDetail.class);
        system.assertEquals('a', actual.BAPISDORDER_GETDETAILEDLIST.I_MEMORY_READ);
    }

    @istest
    private static void TestDeserialize() {
        sapSalesOrderDetail output = new sapSalesOrderDetail();
        output.BAPISDORDER_GETDETAILEDLIST.I_MEMORY_READ = 'a';

        string s = output.serialize();
        sapSalesOrderDetail actual = sapSalesOrderDetail.deserialize('{"output":' + s + '}');
        system.assertEquals('a', actual.BAPISDORDER_GETDETAILEDLIST.I_MEMORY_READ);
    }

    @istest
    private static void TestDeserializeError() {
        try {
            sapSalesOrderDetail actual = sapSalesOrderDetail.deserialize('{"error":["A test error"]}');
            system.assert(false, 'No exception thrown');
        }
        catch (sapSalesOrderDetail.sapSalesOrderDetailException e) {
            system.assertEquals('A test error', e.getMessage());
        }
    }

    @istest
    private static void TestGetterSetter() {
        sapSalesOrderDetail output = new sapSalesOrderDetail();
        output.set('SAMPLE1', new map<string, object>{
            'FIELD1' => 'VALUE1'
        });
        
        system.assertEquals(null, output.get('NOVAL'));
        
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));       
    }
    
    @istest
    private static void TestLoadAsyncResponse() {
        sapSalesOrderDetail output = new sapSalesOrderDetail();
        output.loadAsyncResponse('{"output":{"SAMPLE1":{"FIELD1":"VALUE1"}}}');
        system.assertEquals(null, output.get('NOVAL'));
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));
    }

    @istest
    private static void TestGetMetadata() {
        sapSalesOrderDetail output = new sapSalesOrderDetail();
      /*  map<string, overcast.TypeInfo> metadata = output.getMetadata();
        
        set<string> keys = metadata.keySet();
        system.assert(keys.contains('BAPISDORDER_GETDETAILEDLIST'));
        system.assert(keys.contains('I_BAPI_VIEW'));
        system.assert(keys.contains('EXTENSIONOUT'));
        system.assert(keys.contains('ORDER_ADDRESS_OUT'));
        system.assert(keys.contains('ORDER_BILLINGDATES_OUT'));
        system.assert(keys.contains('ORDER_BILLINGPLANS_OUT'));
        system.assert(keys.contains('ORDER_BUSINESS_OUT'));
        system.assert(keys.contains('ORDER_CFGS_CUBLBS_OUT'));
        system.assert(keys.contains('ORDER_CFGS_CUCFGS_OUT'));
        system.assert(keys.contains('ORDER_CFGS_CUINS_OUT'));
        system.assert(keys.contains('ORDER_CFGS_CUPRTS_OUT'));
        system.assert(keys.contains('ORDER_CFGS_CUREFS_OUT'));
        system.assert(keys.contains('ORDER_CFGS_CUVALS_OUT'));
        system.assert(keys.contains('ORDER_CFGS_CUVKS_OUT'));
        system.assert(keys.contains('ORDER_CONDITIONS_OUT'));
        system.assert(keys.contains('ORDER_COND_HEAD'));
        system.assert(keys.contains('ORDER_COND_ITEM'));
        system.assert(keys.contains('ORDER_COND_QTY_SCALE'));
        system.assert(keys.contains('ORDER_COND_VAL_SCALE'));
        system.assert(keys.contains('ORDER_CONTRACTS_OUT'));
        system.assert(keys.contains('ORDER_CREDITCARDS_OUT'));
        system.assert(keys.contains('ORDER_FLOWS_OUT'));
        system.assert(keys.contains('ORDER_HEADERS_OUT'));
        system.assert(keys.contains('ORDER_ITEMS_OUT'));
        system.assert(keys.contains('ORDER_PARTNERS_OUT'));
        system.assert(keys.contains('ORDER_SCHEDULES_OUT'));
        system.assert(keys.contains('ORDER_STATUSHEADERS_OUT'));
        system.assert(keys.contains('ORDER_STATUSITEMS_OUT'));
        system.assert(keys.contains('ORDER_TEXTHEADERS_OUT'));
        system.assert(keys.contains('ORDER_TEXTLINES_OUT'));
        system.assert(keys.contains('SALES_DOCUMENTS'));
        
        overcast.TypeInfo first = metadata.get(output.getTopTypeName());
        system.assertNotEquals(null, first);
        system.assertEquals('BAPISDORDER_GETDETAILEDLIST', first.name);*///Commented by Sourav for Overcast uninstall
    }
}