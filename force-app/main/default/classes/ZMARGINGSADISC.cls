global class ZMARGINGSADISC {//implements overcast.Realtime.Runnable {//Commented by Sourav for Overcast uninstall
/* 
 * Generated by Overcast UTC 2019-03-02 20:21:09Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
    public class ZMARGINGSADISCException extends Exception {}
    
    global ZMARGINGSADISC() {
        this.ZCRMFM_MARGIN_OVERCAST = new ZMARGINGSADISC.ZCRMFM_MARGIN_OVERCAST();
        this.ES_GSA_CALC = new ZMARGINGSADISC.ES_GSA_CALC();
        this.ES_MARGIN_HDR = new ZMARGINGSADISC.ES_MARGIN_HDR();
        this.ET_MARGIN_DETAILS = new list<ZMARGINGSADISC.ET_MARGIN_DETAILS>();
        this.IS_MARGIN_GSA = new list<ZMARGINGSADISC.IS_MARGIN_GSA>();
    }

    public class ZCRMFM_MARGIN_OVERCAST {
        @AuraEnabled public Decimal DISCOUNTABLE_ONLY { get; set; }
        @AuraEnabled public Decimal DISC_ON_DISC_ONLY { get; set; }
        @AuraEnabled public Decimal DISC_ON_NON_DISC { get; set; }
        @AuraEnabled public Decimal DISC_VAL_TO_CUST { get; set; }
        @AuraEnabled public Decimal NON_DISCOUNTABLE { get; set; }
        @AuraEnabled public Decimal NON_DISC_VAL_TO_CUST { get; set; }
        @AuraEnabled public Decimal REBATE { get; set; }
        @AuraEnabled public Decimal SERV_DISC { get; set; }

        public ZCRMFM_MARGIN_OVERCAST() {}

        public ZCRMFM_MARGIN_OVERCAST(Decimal pDISCOUNTABLE_ONLY, Decimal pDISC_ON_DISC_ONLY, Decimal pDISC_ON_NON_DISC, Decimal pDISC_VAL_TO_CUST, Decimal pNON_DISCOUNTABLE, Decimal pNON_DISC_VAL_TO_CUST, Decimal pREBATE, Decimal pSERV_DISC) {
            this.DISCOUNTABLE_ONLY = pDISCOUNTABLE_ONLY;
            this.DISC_ON_DISC_ONLY = pDISC_ON_DISC_ONLY;
            this.DISC_ON_NON_DISC = pDISC_ON_NON_DISC;
            this.DISC_VAL_TO_CUST = pDISC_VAL_TO_CUST;
            this.NON_DISCOUNTABLE = pNON_DISCOUNTABLE;
            this.NON_DISC_VAL_TO_CUST = pNON_DISC_VAL_TO_CUST;
            this.REBATE = pREBATE;
            this.SERV_DISC = pSERV_DISC;
        }
    }

    public class ES_GSA_CALC {
        @AuraEnabled public Decimal ORDER_PRICE { get; set; }
        @AuraEnabled public Decimal GSA_PRICE { get; set; }
        @AuraEnabled public Decimal DIFF_PRICE { get; set; }
        @AuraEnabled public String RESULT { get; set; }

        public ES_GSA_CALC() {}

        public ES_GSA_CALC(Decimal pORDER_PRICE, Decimal pGSA_PRICE, Decimal pDIFF_PRICE, String pRESULT) {
            this.ORDER_PRICE = pORDER_PRICE;
            this.GSA_PRICE = pGSA_PRICE;
            this.DIFF_PRICE = pDIFF_PRICE;
            this.RESULT = pRESULT;
        }
    }

    public class ES_MARGIN_HDR {
        @AuraEnabled public String ORDER_NUM { get; set; }
        @AuraEnabled public String ORDER_TYPE { get; set; }
        @AuraEnabled public String DESCRIPTION { get; set; }
        @AuraEnabled public String SOLD_TO_PARTY { get; set; }
        @AuraEnabled public String EMP_RESP { get; set; }
        @AuraEnabled public String LEASE_TERM { get; set; }
        @AuraEnabled public String FREE_LEASE { get; set; }
        @AuraEnabled public String SERVICE_TERM { get; set; }
        @AuraEnabled public String FREE_SERVICE { get; set; }
        @AuraEnabled public String STATUS { get; set; }
        @AuraEnabled public Date BOOKING_DATE { get; set; }
        @AuraEnabled public Decimal NET_VALUE { get; set; }
        @AuraEnabled public Decimal TAX_AMOUNT { get; set; }
        @AuraEnabled public Decimal GROSS_AMOUNT { get; set; }
        @AuraEnabled public Date PRICING_DATE { get; set; }
        @AuraEnabled public String PRICE_LIST { get; set; }
        @AuraEnabled public String SERVICE_LEVEL { get; set; }
        @AuraEnabled public String CURRENCY_x { get; set; }
        @AuraEnabled public Decimal MARGIN_PRODUCT { get; set; }
        @AuraEnabled public Decimal MARGIN_SERVICE { get; set; }
        @AuraEnabled public Decimal CONT_LPRICE_EXT { get; set; }
        @AuraEnabled public Decimal DISCOUNT_EXT { get; set; }
        @AuraEnabled public Decimal MARGIN_EXT { get; set; }
        @AuraEnabled public Decimal VAL_CUST_EXT { get; set; }
        @AuraEnabled public Decimal COST_EXT { get; set; }
        @AuraEnabled public Decimal USA_LPRICE_EXT { get; set; }
        @AuraEnabled public Decimal LABOR_EXT { get; set; }
        @AuraEnabled public Decimal BILLING_EXT { get; set; }
        @AuraEnabled public Decimal BOOKING_EXT { get; set; }
        @AuraEnabled public Decimal COMMISSION_EXT { get; set; }
        @AuraEnabled public Decimal OVERHEAD_EXT { get; set; }
        @AuraEnabled public Decimal SERVICE_COST { get; set; }
        @AuraEnabled public Decimal SERVICE_BOOKING { get; set; }
        @AuraEnabled public String ORDER_TYPE_DESC { get; set; }
        @AuraEnabled public String IDN_PRICE_DESC { get; set; }
        @AuraEnabled public String GPO_PRICE_DESC { get; set; }
        @AuraEnabled public String IDN_PRICE_LIST { get; set; }
        @AuraEnabled public String SERVICE_PRICE_DESC { get; set; }

        public ES_MARGIN_HDR() {}

        public ES_MARGIN_HDR(String pORDER_NUM, String pORDER_TYPE, String pDESCRIPTION, String pSOLD_TO_PARTY, String pEMP_RESP, String pLEASE_TERM, String pFREE_LEASE, String pSERVICE_TERM, String pFREE_SERVICE, String pSTATUS, Date pBOOKING_DATE, Decimal pNET_VALUE, Decimal pTAX_AMOUNT, Decimal pGROSS_AMOUNT, Date pPRICING_DATE, String pPRICE_LIST, String pSERVICE_LEVEL, String pCURRENCY_x, Decimal pMARGIN_PRODUCT, Decimal pMARGIN_SERVICE, Decimal pCONT_LPRICE_EXT, Decimal pDISCOUNT_EXT, Decimal pMARGIN_EXT, Decimal pVAL_CUST_EXT, Decimal pCOST_EXT, Decimal pUSA_LPRICE_EXT, Decimal pLABOR_EXT, Decimal pBILLING_EXT, Decimal pBOOKING_EXT, Decimal pCOMMISSION_EXT, Decimal pOVERHEAD_EXT, Decimal pSERVICE_COST) {
            this.ORDER_NUM = pORDER_NUM;
            this.ORDER_TYPE = pORDER_TYPE;
            this.DESCRIPTION = pDESCRIPTION;
            this.SOLD_TO_PARTY = pSOLD_TO_PARTY;
            this.EMP_RESP = pEMP_RESP;
            this.LEASE_TERM = pLEASE_TERM;
            this.FREE_LEASE = pFREE_LEASE;
            this.SERVICE_TERM = pSERVICE_TERM;
            this.FREE_SERVICE = pFREE_SERVICE;
            this.STATUS = pSTATUS;
            this.BOOKING_DATE = pBOOKING_DATE;
            this.NET_VALUE = pNET_VALUE;
            this.TAX_AMOUNT = pTAX_AMOUNT;
            this.GROSS_AMOUNT = pGROSS_AMOUNT;
            this.PRICING_DATE = pPRICING_DATE;
            this.PRICE_LIST = pPRICE_LIST;
            this.SERVICE_LEVEL = pSERVICE_LEVEL;
            this.CURRENCY_x = pCURRENCY_x;
            this.MARGIN_PRODUCT = pMARGIN_PRODUCT;
            this.MARGIN_SERVICE = pMARGIN_SERVICE;
            this.CONT_LPRICE_EXT = pCONT_LPRICE_EXT;
            this.DISCOUNT_EXT = pDISCOUNT_EXT;
            this.MARGIN_EXT = pMARGIN_EXT;
            this.VAL_CUST_EXT = pVAL_CUST_EXT;
            this.COST_EXT = pCOST_EXT;
            this.USA_LPRICE_EXT = pUSA_LPRICE_EXT;
            this.LABOR_EXT = pLABOR_EXT;
            this.BILLING_EXT = pBILLING_EXT;
            this.BOOKING_EXT = pBOOKING_EXT;
            this.COMMISSION_EXT = pCOMMISSION_EXT;
            this.OVERHEAD_EXT = pOVERHEAD_EXT;
            this.SERVICE_COST = pSERVICE_COST;
        }
    }

    public class ET_MARGIN_DETAILS {
        @AuraEnabled public String QUOTE_ID { get; set; }
        @AuraEnabled public String QUOTE_TYPE { get; set; }
        @AuraEnabled public String QUOTE_TYPE_DESC { get; set; }
        @AuraEnabled public String QUOTE_DESC { get; set; }
        @AuraEnabled public String SOLD_TO_ID { get; set; }
        @AuraEnabled public String SOLD_TO_NAME { get; set; }
        @AuraEnabled public String EMP_RESP_NAME { get; set; }
        @AuraEnabled public String QUOTE_STATUS { get; set; }
        @AuraEnabled public String PO_NUMBER { get; set; }
        @AuraEnabled public Date VALID_FROM { get; set; }
        @AuraEnabled public Date VALID_TO { get; set; }
        @AuraEnabled public String CONTACT_NAME { get; set; }
        @AuraEnabled public String PAYER_ID { get; set; }
        @AuraEnabled public String PAYER_NAME { get; set; }
        @AuraEnabled public String CREATED_BY { get; set; }
        @AuraEnabled public String SHIP_TO_ID { get; set; }
        @AuraEnabled public String SHIP_TO_NAME { get; set; }
        @AuraEnabled public String BILL_TO_ID { get; set; }
        @AuraEnabled public String BILL_TO_NAME { get; set; }
        @AuraEnabled public Date REQ_DEL_DATE { get; set; }
        @AuraEnabled public String SALES_OFFICE { get; set; }
        @AuraEnabled public String DIST_CHANNEL { get; set; }
        @AuraEnabled public String TERRITORY_ID { get; set; }
        @AuraEnabled public String ITEM_NO { get; set; }
        @AuraEnabled public String HIGHER_ITEM_NO { get; set; }
        @AuraEnabled public String PRODUCT_CATEGORY { get; set; }
        @AuraEnabled public String PRODUCT_ID { get; set; }
        @AuraEnabled public String PRODUCT_NAME { get; set; }
        @AuraEnabled public String PROD_FAMILY { get; set; }
        @AuraEnabled public String PROD_LINE { get; set; }
        @AuraEnabled public String PROD_CLASS { get; set; }
        @AuraEnabled public String PROD_TYPE { get; set; }
        @AuraEnabled public String PROD_CLASS_DESC { get; set; }
        @AuraEnabled public String PROD_TYPE_DESC { get; set; }
        @AuraEnabled public Decimal QUANTITY { get; set; }
        @AuraEnabled public String ITEM_CATEGORY { get; set; }
        @AuraEnabled public String ITEM_CATEGORY_DESC { get; set; }
        @AuraEnabled public Date BOOKING_DATE { get; set; }
        @AuraEnabled public Decimal VALUE_TO_CUSTOMER { get; set; }
        @AuraEnabled public Decimal VALUE_TO_CUSTOMER_EXT { get; set; }
        @AuraEnabled public String VALUE_CURRENCY { get; set; }
        @AuraEnabled public Decimal REBATE_COMPETITOR_BUYOUT { get; set; }
        @AuraEnabled public Decimal PARTY_INT_RATE_3RD { get; set; }
        @AuraEnabled public Decimal PARTY_DEAL_SPREAD_3RD { get; set; }
        @AuraEnabled public Decimal NETVALUE { get; set; }
        @AuraEnabled public Decimal NETVALUE_EXT { get; set; }
        @AuraEnabled public String NETVALUE_CURRENCY { get; set; }
        @AuraEnabled public Decimal DISCOUNT { get; set; }
        @AuraEnabled public Decimal DISCOUNT_EXT { get; set; }
        @AuraEnabled public Decimal BILL_VAL_CUST { get; set; }
        @AuraEnabled public Decimal BILL_VAL_CUST_EXT { get; set; }
        @AuraEnabled public String BILLING_URRENCY { get; set; }
        @AuraEnabled public Decimal BOOK_VAL_OMNICELL { get; set; }
        @AuraEnabled public Decimal BOOK_VAL_OMNICELL_EXT { get; set; }
        @AuraEnabled public String BOOKING_CURRENCY { get; set; }
        @AuraEnabled public Decimal COMM_VAL_OMNICELL { get; set; }
        @AuraEnabled public Decimal COMM_VAL_OMNICELL_EXT { get; set; }
        @AuraEnabled public String COMM_CURRENCY { get; set; }
        @AuraEnabled public Decimal COST_TO_OMNICELL { get; set; }
        @AuraEnabled public Decimal COST_TO_OMNICELL_EXT { get; set; }
        @AuraEnabled public String COST_CURRENCY { get; set; }
        @AuraEnabled public Decimal LABOR_OMNICELL { get; set; }
        @AuraEnabled public Decimal LABOR_OMNICELL_EXT { get; set; }
        @AuraEnabled public Decimal USA_LIST_PRICE { get; set; }
        @AuraEnabled public String USA_LIST_CURRENCY { get; set; }
        @AuraEnabled public Decimal CONTRACT_LIST_PRICE { get; set; }
        @AuraEnabled public Decimal CONTRACT_LPRICE_EXT { get; set; }
        @AuraEnabled public String CONTRACT_LIST_CURRENCY { get; set; }
        @AuraEnabled public Decimal MARGIN { get; set; }
        @AuraEnabled public String MARGIN_PERC { get; set; }
        @AuraEnabled public Decimal SERVICE_COST { get; set; }
        @AuraEnabled public Decimal KPI_01_AMT { get; set; }
        @AuraEnabled public String KPI_01_CURR { get; set; }
        @AuraEnabled public Decimal KPI_02_AMT { get; set; }
        @AuraEnabled public String KPI_02_CURR { get; set; }
        @AuraEnabled public Decimal KPI_03_AMT { get; set; }
        @AuraEnabled public String KPI_03_CURR { get; set; }
        @AuraEnabled public Decimal KPI_04_AMT { get; set; }
        @AuraEnabled public String KPI_04_CURR { get; set; }
        @AuraEnabled public Decimal KPI_05_AMT { get; set; }
        @AuraEnabled public String KPI_05_CURR { get; set; }
        @AuraEnabled public Decimal KPI_06_AMT { get; set; }
        @AuraEnabled public String KPI_06_CURR { get; set; }
        @AuraEnabled public Decimal KPI_07_AMT { get; set; }
        @AuraEnabled public String KPI_07_CURR { get; set; }
        @AuraEnabled public Decimal KPI_08_AMT { get; set; }
        @AuraEnabled public String KPI_08_CURR { get; set; }
        @AuraEnabled public Decimal KPI_09_AMT { get; set; }
        @AuraEnabled public String KPI_09_CURR { get; set; }
        @AuraEnabled public Decimal KPI_10_AMT { get; set; }
        @AuraEnabled public String KPI_10_CURR { get; set; }
        @AuraEnabled public String LINKED_OPP_ID { get; set; }
        @AuraEnabled public String LINKED_ORDER_ID { get; set; }
        @AuraEnabled public Decimal OVERHEAD { get; set; }
        @AuraEnabled public String PO_NUMBER_SHIP { get; set; }
        @AuraEnabled public String NON_DISCOUNTABLE { get; set; }

        public ET_MARGIN_DETAILS() {}

        public ET_MARGIN_DETAILS(String pQUOTE_ID, String pQUOTE_TYPE, String pQUOTE_TYPE_DESC, String pQUOTE_DESC, String pSOLD_TO_ID, String pSOLD_TO_NAME, String pEMP_RESP_NAME, String pQUOTE_STATUS, String pPO_NUMBER, Date pVALID_FROM, Date pVALID_TO, String pCONTACT_NAME, String pPAYER_ID, String pPAYER_NAME, String pCREATED_BY, String pSHIP_TO_ID, String pSHIP_TO_NAME, String pBILL_TO_ID, String pBILL_TO_NAME, Date pREQ_DEL_DATE, String pSALES_OFFICE, String pDIST_CHANNEL, String pTERRITORY_ID, String pITEM_NO, String pHIGHER_ITEM_NO, String pPRODUCT_CATEGORY, String pPRODUCT_ID, String pPRODUCT_NAME, String pPROD_FAMILY, String pPROD_LINE, String pPROD_CLASS, String pPROD_TYPE) {
            this.QUOTE_ID = pQUOTE_ID;
            this.QUOTE_TYPE = pQUOTE_TYPE;
            this.QUOTE_TYPE_DESC = pQUOTE_TYPE_DESC;
            this.QUOTE_DESC = pQUOTE_DESC;
            this.SOLD_TO_ID = pSOLD_TO_ID;
            this.SOLD_TO_NAME = pSOLD_TO_NAME;
            this.EMP_RESP_NAME = pEMP_RESP_NAME;
            this.QUOTE_STATUS = pQUOTE_STATUS;
            this.PO_NUMBER = pPO_NUMBER;
            this.VALID_FROM = pVALID_FROM;
            this.VALID_TO = pVALID_TO;
            this.CONTACT_NAME = pCONTACT_NAME;
            this.PAYER_ID = pPAYER_ID;
            this.PAYER_NAME = pPAYER_NAME;
            this.CREATED_BY = pCREATED_BY;
            this.SHIP_TO_ID = pSHIP_TO_ID;
            this.SHIP_TO_NAME = pSHIP_TO_NAME;
            this.BILL_TO_ID = pBILL_TO_ID;
            this.BILL_TO_NAME = pBILL_TO_NAME;
            this.REQ_DEL_DATE = pREQ_DEL_DATE;
            this.SALES_OFFICE = pSALES_OFFICE;
            this.DIST_CHANNEL = pDIST_CHANNEL;
            this.TERRITORY_ID = pTERRITORY_ID;
            this.ITEM_NO = pITEM_NO;
            this.HIGHER_ITEM_NO = pHIGHER_ITEM_NO;
            this.PRODUCT_CATEGORY = pPRODUCT_CATEGORY;
            this.PRODUCT_ID = pPRODUCT_ID;
            this.PRODUCT_NAME = pPRODUCT_NAME;
            this.PROD_FAMILY = pPROD_FAMILY;
            this.PROD_LINE = pPROD_LINE;
            this.PROD_CLASS = pPROD_CLASS;
            this.PROD_TYPE = pPROD_TYPE;
        }
    }

    public class IS_MARGIN_GSA {
        @AuraEnabled public String QUOTE_ID { get; set; }
        @AuraEnabled public String PROCESS_TYPE { get; set; }
        @AuraEnabled public String CALC_GSA { get; set; }
        @AuraEnabled public String CALC_MARGIN { get; set; }
        @AuraEnabled public String CALC_DISC { get; set; }

        public IS_MARGIN_GSA() {}

        public IS_MARGIN_GSA(String pQUOTE_ID, String pPROCESS_TYPE, String pCALC_GSA, String pCALC_MARGIN, String pCALC_DISC) {
            this.QUOTE_ID = pQUOTE_ID;
            this.PROCESS_TYPE = pPROCESS_TYPE;
            this.CALC_GSA = pCALC_GSA;
            this.CALC_MARGIN = pCALC_MARGIN;
            this.CALC_DISC = pCALC_DISC;
        }
    }

    @AuraEnabled public ZMARGINGSADISC.ZCRMFM_MARGIN_OVERCAST ZCRMFM_MARGIN_OVERCAST { get; set; }
    @AuraEnabled public ZMARGINGSADISC.ES_GSA_CALC ES_GSA_CALC { get; set; }
    @AuraEnabled public ZMARGINGSADISC.ES_MARGIN_HDR ES_MARGIN_HDR { get; set; }
    @AuraEnabled public list<ZMARGINGSADISC.ET_MARGIN_DETAILS> ET_MARGIN_DETAILS { get; set; }
    @AuraEnabled public list<ZMARGINGSADISC.IS_MARGIN_GSA> IS_MARGIN_GSA { get; set; }

    public string inputSetName { get; set; }

    /*public ZMARGINGSADISC run() {
        overcast.Logger logger1 = new overcast.Logger('ZMARGINGSADISC');
        try {
            ZMARGINGSADISC response = this.run(logger1, null);
            logger1.commitToDatabase();
            return response;
        }
        catch (Exception e) {
            logger1.addLog('ERROR', e.getTypeName() + ': ' + e.getMessage());
            logger1.setStatusCode(300);
            logger1.commitToDatabase();
            throw e;
        }
    }
    
    public ZMARGINGSADISC run(overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = setup(logger, namedCredential);

        if (Test.isRunningTest()) {
            if (this.dynamicBody != null) {
                return this;
            }
            return ZMARGINGSADISC.deserialize(this.testResponse);
        }
        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);
        
        return ZMARGINGSADISC.deserialize(sh.Response);
    }

    public string runAsync(overcast.Logger logger, string namedCredential, Continuation con) {
        overcast.SynchronousHandler sh = setup(logger, namedCredential);

        sh.ContinuationWebRequest = new HttpRequest();
        overcast.EpgwController.ExecuteScenarioSynchronously(sh, logger);

        return con.addHttpRequest(sh.ContinuationWebRequest);
    }*///Commented by Sourav for Overcast uninstall

    public static ZMARGINGSADISC handleAsyncResponse(HttpResponse resp) {
        return ZMARGINGSADISC.deserialize(resp.getBody());
    }
    
   /* private overcast.SynchronousHandler setup(overcast.Logger logger, string namedCredential) {
        overcast.SynchronousHandler sh = overcast.SynchronousHandler.CreateFromName('ZMARGINGSADISC');
        if (!String.isBlank(this.inputSetName)) {
            sh.CorrelationId = this.inputSetName;
        }

        sh.InputJson = this.serialize();
        sh.NamedCredential = namedCredential;
        if (logger != null) {
            logger.setInputSetName(sh.CorrelationId);
        }

        return sh;
    }*///Commented by Sourav for Overcast uninstall

    public string getBackendMessage() {
        return this.backendMessage;
    }

    global string serialize() {
        if (dynamicBody != null) {
            return JSON.serialize(dynamicBody, true);
        }
        return JSON.serialize(this, true);
    }
    
    public static ZMARGINGSADISC deserialize(string responsedata) {
        map<string, string> m = getOutputData(responsedata);
        string outputData = m.get('output');
        string backendMessage = m.get('backendMessage');
        if (outputData == null) {
            return new ZMARGINGSADISC();
        }
        ZMARGINGSADISC obj = (ZMARGINGSADISC)JSON.deserialize(outputData, ZMARGINGSADISC.class);
        obj.outputData = outputData;
        obj.backendMessage = backendMessage;

        return obj;
    }

    private static map<string, string> getOutputData(string responseData) {
        if (string.isblank(responsedata)) {
            throw new ZMARGINGSADISCException('Response null for ZMARGINGSADISC request.');
        }

        map<string, string> m = new map<string, string>();

        JSONParser jresponse = JSON.createParser(responsedata);
        jresponse.nextValue();

        boolean hasOutput = false;
        while (jresponse.nextValue() != JSONToken.END_OBJECT && jresponse.getCurrentToken() != null) {
            if (jresponse.getCurrentName() == 'output') {
                jresponse.skipChildren();
                hasOutput = true;
                continue;
            }
            if (jresponse.getCurrentName() == 'backendMessage') {
                m.put('backendMessage', (string)jresponse.readValueAs(string.class));
                continue;
            }
            if (jresponse.getCurrentName() == 'error') {
                string[] errors = (string[])jresponse.readValueAs(list<string>.class);
                throw new ZMARGINGSADISCException(string.join(errors, ';'));
            }
        }
        if (!hasOutput) {
            throw new ZMARGINGSADISCException('Malformed response for ZMARGINGSADISC request.');
        }
        integer start = responsedata.indexOf(':') + 1;
        integer lastIndex = m.get('backendMessage') == null
            ? responsedata.length() - 2
            : responsedata.lastIndexOf('backendMessage');
        integer finish = responsedata.lastIndexOf('}', lastIndex) + 1;
        m.put('output', responseData.substring(start, finish));
        return m;
    }


    public transient string testResponse;
    private transient map<string, object> dynamicBody;
    private transient string outputData;
    //private transient map<string, overcast.TypeInfo> metadata;//Commented by Sourav for Overcast uninstall
    private transient string backendMessage;

    global void set(string typeName, object records) {
        if (typeName == '@testResponse') {
            dynamicBody = (map<string, object>)records;
            return;
        }
        if (dynamicBody == null) {
            dynamicBody = new map<string, object>();            
        }
        
        dynamicBody.put(typeName, records);
    }
    
    global object get(string typeName) {
        if (dynamicBody == null && outputData != null) {           
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }
        if (dynamicBody == null) { 
            return null;
        }
        return dynamicBody.get(typeName);
    }
    
    global void loadAsyncResponse(string responseBody) {
        map<string, string> m = getOutputData(responseBody);
        outputData = m.get('output');
        backendMessage = m.get('backendMessage');
        
        if (outputData != null) {           
            dynamicBody = (map<string, object>)JSON.deserializeUntyped(outputData);
        }    
    }

    global string getTopTypeName() {
        return 'ZCRMFM_MARGIN_OVERCAST';
    }
/*
    global map<string, overcast.TypeInfo> getMetadata() {
        if (metadata == null) {
            metadata = new map<string, overcast.TypeInfo> {
                'ZCRMFM_MARGIN_OVERCAST' => new overcast.TypeInfo('ZCRMFM_MARGIN_OVERCAST', '', overcast.Realtime.StructureType.STRUCTURE, overcast.Realtime.Direction.BOTH,
                    new map<string, overcast.FieldInfo> {
                        'DISCOUNTABLE_ONLY' => new overcast.FieldInfo('DISCOUNTABLE_ONLY', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'DISC_ON_DISC_ONLY' => new overcast.FieldInfo('DISC_ON_DISC_ONLY', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'DISC_ON_NON_DISC' => new overcast.FieldInfo('DISC_ON_NON_DISC', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'DISC_VAL_TO_CUST' => new overcast.FieldInfo('DISC_VAL_TO_CUST', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'NON_DISCOUNTABLE' => new overcast.FieldInfo('NON_DISCOUNTABLE', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'NON_DISC_VAL_TO_CUST' => new overcast.FieldInfo('NON_DISC_VAL_TO_CUST', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'REBATE' => new overcast.FieldInfo('REBATE', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'SERV_DISC' => new overcast.FieldInfo('SERV_DISC', 'Total Net Value of Document in Document Currency', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT)                }),
                'ES_GSA_CALC' => new overcast.TypeInfo('ES_GSA_CALC', 'Overcast GSA test', overcast.Realtime.StructureType.STRUCTURE, overcast.Realtime.Direction.OUTPUT,
                    new map<string, overcast.FieldInfo> {
                        'ORDER_PRICE' => new overcast.FieldInfo('ORDER_PRICE', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'GSA_PRICE' => new overcast.FieldInfo('GSA_PRICE', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'DIFF_PRICE' => new overcast.FieldInfo('DIFF_PRICE', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'RESULT' => new overcast.FieldInfo('RESULT', 'RESULT', overcast.Realtime.ApexType.STRINGX, 0, overcast.Realtime.Direction.OUTPUT)                }),
                'ES_MARGIN_HDR' => new overcast.TypeInfo('ES_MARGIN_HDR', 'Margin Analysis Header', overcast.Realtime.StructureType.STRUCTURE, overcast.Realtime.Direction.OUTPUT,
                    new map<string, overcast.FieldInfo> {
                        'ORDER_NUM' => new overcast.FieldInfo('ORDER_NUM', 'Transaction No.', overcast.Realtime.ApexType.STRINGX, 10, overcast.Realtime.Direction.OUTPUT),
                        'ORDER_TYPE' => new overcast.FieldInfo('ORDER_TYPE', 'Transaction Type', overcast.Realtime.ApexType.STRINGX, 4, overcast.Realtime.Direction.OUTPUT),
                        'DESCRIPTION' => new overcast.FieldInfo('DESCRIPTION', 'Description', overcast.Realtime.ApexType.STRINGX, 40, overcast.Realtime.Direction.OUTPUT),
                        'SOLD_TO_PARTY' => new overcast.FieldInfo('SOLD_TO_PARTY', 'BusinessPartner', overcast.Realtime.ApexType.STRINGX, 10, overcast.Realtime.Direction.OUTPUT),
                        'EMP_RESP' => new overcast.FieldInfo('EMP_RESP', 'Complete name', overcast.Realtime.ApexType.STRINGX, 80, overcast.Realtime.Direction.OUTPUT),
                        'LEASE_TERM' => new overcast.FieldInfo('LEASE_TERM', 'Lease Duration', overcast.Realtime.ApexType.STRINGX, 3, overcast.Realtime.Direction.OUTPUT),
                        'FREE_LEASE' => new overcast.FieldInfo('FREE_LEASE', 'Free Months - Lease', overcast.Realtime.ApexType.STRINGX, 3, overcast.Realtime.Direction.OUTPUT),
                        'SERVICE_TERM' => new overcast.FieldInfo('SERVICE_TERM', 'Service Duration', overcast.Realtime.ApexType.STRINGX, 3, overcast.Realtime.Direction.OUTPUT),
                        'FREE_SERVICE' => new overcast.FieldInfo('FREE_SERVICE', 'Free Months - Servic', overcast.Realtime.ApexType.STRINGX, 3, overcast.Realtime.Direction.OUTPUT),
                        'STATUS' => new overcast.FieldInfo('STATUS', 'Status', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'BOOKING_DATE' => new overcast.FieldInfo('BOOKING_DATE', 'Date', overcast.Realtime.ApexType.DATEX, 8, overcast.Realtime.Direction.OUTPUT),
                        'NET_VALUE' => new overcast.FieldInfo('NET_VALUE', 'Exp.Total Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'TAX_AMOUNT' => new overcast.FieldInfo('TAX_AMOUNT', 'Tax amount', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'GROSS_AMOUNT' => new overcast.FieldInfo('GROSS_AMOUNT', 'Gross Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'PRICING_DATE' => new overcast.FieldInfo('PRICING_DATE', 'Pricing Date', overcast.Realtime.ApexType.DATEX, 8, overcast.Realtime.Direction.OUTPUT),
                        'PRICE_LIST' => new overcast.FieldInfo('PRICE_LIST', 'Price Group', overcast.Realtime.ApexType.STRINGX, 2, overcast.Realtime.Direction.OUTPUT),
                        'SERVICE_LEVEL' => new overcast.FieldInfo('SERVICE_LEVEL', 'Price List', overcast.Realtime.ApexType.STRINGX, 2, overcast.Realtime.Direction.OUTPUT),
                        'CURRENCY_x' => new overcast.FieldInfo('CURRENCY_x', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'MARGIN_PRODUCT' => new overcast.FieldInfo('MARGIN_PRODUCT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'MARGIN_SERVICE' => new overcast.FieldInfo('MARGIN_SERVICE', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'CONT_LPRICE_EXT' => new overcast.FieldInfo('CONT_LPRICE_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'DISCOUNT_EXT' => new overcast.FieldInfo('DISCOUNT_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'MARGIN_EXT' => new overcast.FieldInfo('MARGIN_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'VAL_CUST_EXT' => new overcast.FieldInfo('VAL_CUST_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'COST_EXT' => new overcast.FieldInfo('COST_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'USA_LPRICE_EXT' => new overcast.FieldInfo('USA_LPRICE_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'LABOR_EXT' => new overcast.FieldInfo('LABOR_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'BILLING_EXT' => new overcast.FieldInfo('BILLING_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'BOOKING_EXT' => new overcast.FieldInfo('BOOKING_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'COMMISSION_EXT' => new overcast.FieldInfo('COMMISSION_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'OVERHEAD_EXT' => new overcast.FieldInfo('OVERHEAD_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'SERVICE_COST' => new overcast.FieldInfo('SERVICE_COST', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'SERVICE_BOOKING' => new overcast.FieldInfo('SERVICE_BOOKING', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'ORDER_TYPE_DESC' => new overcast.FieldInfo('ORDER_TYPE_DESC', 'Description', overcast.Realtime.ApexType.STRINGX, 40, overcast.Realtime.Direction.OUTPUT),
                        'IDN_PRICE_DESC' => new overcast.FieldInfo('IDN_PRICE_DESC', 'Short Description', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'GPO_PRICE_DESC' => new overcast.FieldInfo('GPO_PRICE_DESC', 'Short Description', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'IDN_PRICE_LIST' => new overcast.FieldInfo('IDN_PRICE_LIST', 'Price Group', overcast.Realtime.ApexType.STRINGX, 2, overcast.Realtime.Direction.OUTPUT),
                        'SERVICE_PRICE_DESC' => new overcast.FieldInfo('SERVICE_PRICE_DESC', 'Short Description', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT)                }),
                'ET_MARGIN_DETAILS' => new overcast.TypeInfo('ET_MARGIN_DETAILS', 'Margin Analysis', overcast.Realtime.StructureType.TABLE, overcast.Realtime.Direction.OUTPUT,
                    new map<string, overcast.FieldInfo> {
                        'QUOTE_ID' => new overcast.FieldInfo('QUOTE_ID', 'ID', overcast.Realtime.ApexType.STRINGX, 10, overcast.Realtime.Direction.OUTPUT),
                        'QUOTE_TYPE' => new overcast.FieldInfo('QUOTE_TYPE', 'Transaction Type', overcast.Realtime.ApexType.STRINGX, 4, overcast.Realtime.Direction.OUTPUT),
                        'QUOTE_TYPE_DESC' => new overcast.FieldInfo('QUOTE_TYPE_DESC', 'Short Description', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'QUOTE_DESC' => new overcast.FieldInfo('QUOTE_DESC', 'Ext. Reference', overcast.Realtime.ApexType.STRINGX, 35, overcast.Realtime.Direction.OUTPUT),
                        'SOLD_TO_ID' => new overcast.FieldInfo('SOLD_TO_ID', 'Partner ID', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'SOLD_TO_NAME' => new overcast.FieldInfo('SOLD_TO_NAME', 'Name 1', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'EMP_RESP_NAME' => new overcast.FieldInfo('EMP_RESP_NAME', 'Name 1', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'QUOTE_STATUS' => new overcast.FieldInfo('QUOTE_STATUS', 'Status', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'PO_NUMBER' => new overcast.FieldInfo('PO_NUMBER', 'Ext. Reference', overcast.Realtime.ApexType.STRINGX, 35, overcast.Realtime.Direction.OUTPUT),
                        'VALID_FROM' => new overcast.FieldInfo('VALID_FROM', 'Date', overcast.Realtime.ApexType.DATEX, 8, overcast.Realtime.Direction.OUTPUT),
                        'VALID_TO' => new overcast.FieldInfo('VALID_TO', 'Date', overcast.Realtime.ApexType.DATEX, 8, overcast.Realtime.Direction.OUTPUT),
                        'CONTACT_NAME' => new overcast.FieldInfo('CONTACT_NAME', 'Name 1', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'PAYER_ID' => new overcast.FieldInfo('PAYER_ID', 'Partner ID', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'PAYER_NAME' => new overcast.FieldInfo('PAYER_NAME', 'Name 1', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'CREATED_BY' => new overcast.FieldInfo('CREATED_BY', 'Name 1', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'SHIP_TO_ID' => new overcast.FieldInfo('SHIP_TO_ID', 'Partner ID', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'SHIP_TO_NAME' => new overcast.FieldInfo('SHIP_TO_NAME', 'Name 1', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'BILL_TO_ID' => new overcast.FieldInfo('BILL_TO_ID', 'Partner ID', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'BILL_TO_NAME' => new overcast.FieldInfo('BILL_TO_NAME', 'Name 1', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'REQ_DEL_DATE' => new overcast.FieldInfo('REQ_DEL_DATE', 'Date', overcast.Realtime.ApexType.DATEX, 8, overcast.Realtime.Direction.OUTPUT),
                        'SALES_OFFICE' => new overcast.FieldInfo('SALES_OFFICE', 'Sales Office', overcast.Realtime.ApexType.STRINGX, 12, overcast.Realtime.Direction.OUTPUT),
                        'DIST_CHANNEL' => new overcast.FieldInfo('DIST_CHANNEL', 'Distribution Channel', overcast.Realtime.ApexType.STRINGX, 2, overcast.Realtime.Direction.OUTPUT),
                        'TERRITORY_ID' => new overcast.FieldInfo('TERRITORY_ID', 'Terr. Hier. ID', overcast.Realtime.ApexType.STRINGX, 30, overcast.Realtime.Direction.OUTPUT),
                        'ITEM_NO' => new overcast.FieldInfo('ITEM_NO', 'Item', overcast.Realtime.ApexType.STRINGX, 10, overcast.Realtime.Direction.OUTPUT),
                        'HIGHER_ITEM_NO' => new overcast.FieldInfo('HIGHER_ITEM_NO', 'Character Field Length = 10', overcast.Realtime.ApexType.STRINGX, 10, overcast.Realtime.Direction.OUTPUT),
                        'PRODUCT_CATEGORY' => new overcast.FieldInfo('PRODUCT_CATEGORY', 'Category ID', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'PRODUCT_ID' => new overcast.FieldInfo('PRODUCT_ID', 'Product', overcast.Realtime.ApexType.STRINGX, 54, overcast.Realtime.Direction.OUTPUT),
                        'PRODUCT_NAME' => new overcast.FieldInfo('PRODUCT_NAME', 'Description', overcast.Realtime.ApexType.STRINGX, 40, overcast.Realtime.Direction.OUTPUT),
                        'PROD_FAMILY' => new overcast.FieldInfo('PROD_FAMILY', 'Product Cat.', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'PROD_LINE' => new overcast.FieldInfo('PROD_LINE', 'Product Cat.', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'PROD_CLASS' => new overcast.FieldInfo('PROD_CLASS', 'Product Group 1', overcast.Realtime.ApexType.STRINGX, 3, overcast.Realtime.Direction.OUTPUT),
                        'PROD_TYPE' => new overcast.FieldInfo('PROD_TYPE', 'Product Group 2', overcast.Realtime.ApexType.STRINGX, 3, overcast.Realtime.Direction.OUTPUT),
                        'PROD_CLASS_DESC' => new overcast.FieldInfo('PROD_CLASS_DESC', 'Description', overcast.Realtime.ApexType.STRINGX, 40, overcast.Realtime.Direction.OUTPUT),
                        'PROD_TYPE_DESC' => new overcast.FieldInfo('PROD_TYPE_DESC', 'Description', overcast.Realtime.ApexType.STRINGX, 40, overcast.Realtime.Direction.OUTPUT),
                        'QUANTITY' => new overcast.FieldInfo('QUANTITY', 'Quantity', overcast.Realtime.ApexType.DECIMALX, 14,3, overcast.Realtime.Direction.OUTPUT),
                        'ITEM_CATEGORY' => new overcast.FieldInfo('ITEM_CATEGORY', 'Item Category', overcast.Realtime.ApexType.STRINGX, 4, overcast.Realtime.Direction.OUTPUT),
                        'ITEM_CATEGORY_DESC' => new overcast.FieldInfo('ITEM_CATEGORY_DESC', 'Description', overcast.Realtime.ApexType.STRINGX, 20, overcast.Realtime.Direction.OUTPUT),
                        'BOOKING_DATE' => new overcast.FieldInfo('BOOKING_DATE', 'Date', overcast.Realtime.ApexType.DATEX, 8, overcast.Realtime.Direction.OUTPUT),
                        'VALUE_TO_CUSTOMER' => new overcast.FieldInfo('VALUE_TO_CUSTOMER', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'VALUE_TO_CUSTOMER_EXT' => new overcast.FieldInfo('VALUE_TO_CUSTOMER_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'VALUE_CURRENCY' => new overcast.FieldInfo('VALUE_CURRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'REBATE_COMPETITOR_BUYOUT' => new overcast.FieldInfo('REBATE_COMPETITOR_BUYOUT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'PARTY_INT_RATE_3RD' => new overcast.FieldInfo('PARTY_INT_RATE_3RD', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'PARTY_DEAL_SPREAD_3RD' => new overcast.FieldInfo('PARTY_DEAL_SPREAD_3RD', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'NETVALUE' => new overcast.FieldInfo('NETVALUE', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'NETVALUE_EXT' => new overcast.FieldInfo('NETVALUE_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'NETVALUE_CURRENCY' => new overcast.FieldInfo('NETVALUE_CURRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'DISCOUNT' => new overcast.FieldInfo('DISCOUNT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'DISCOUNT_EXT' => new overcast.FieldInfo('DISCOUNT_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'BILL_VAL_CUST' => new overcast.FieldInfo('BILL_VAL_CUST', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'BILL_VAL_CUST_EXT' => new overcast.FieldInfo('BILL_VAL_CUST_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'BILLING_URRENCY' => new overcast.FieldInfo('BILLING_URRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'BOOK_VAL_OMNICELL' => new overcast.FieldInfo('BOOK_VAL_OMNICELL', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'BOOK_VAL_OMNICELL_EXT' => new overcast.FieldInfo('BOOK_VAL_OMNICELL_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'BOOKING_CURRENCY' => new overcast.FieldInfo('BOOKING_CURRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'COMM_VAL_OMNICELL' => new overcast.FieldInfo('COMM_VAL_OMNICELL', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'COMM_VAL_OMNICELL_EXT' => new overcast.FieldInfo('COMM_VAL_OMNICELL_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'COMM_CURRENCY' => new overcast.FieldInfo('COMM_CURRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'COST_TO_OMNICELL' => new overcast.FieldInfo('COST_TO_OMNICELL', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'COST_TO_OMNICELL_EXT' => new overcast.FieldInfo('COST_TO_OMNICELL_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'COST_CURRENCY' => new overcast.FieldInfo('COST_CURRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'LABOR_OMNICELL' => new overcast.FieldInfo('LABOR_OMNICELL', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'LABOR_OMNICELL_EXT' => new overcast.FieldInfo('LABOR_OMNICELL_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'USA_LIST_PRICE' => new overcast.FieldInfo('USA_LIST_PRICE', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'USA_LIST_CURRENCY' => new overcast.FieldInfo('USA_LIST_CURRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'CONTRACT_LIST_PRICE' => new overcast.FieldInfo('CONTRACT_LIST_PRICE', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'CONTRACT_LPRICE_EXT' => new overcast.FieldInfo('CONTRACT_LPRICE_EXT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'CONTRACT_LIST_CURRENCY' => new overcast.FieldInfo('CONTRACT_LIST_CURRENCY', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'MARGIN' => new overcast.FieldInfo('MARGIN', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'MARGIN_PERC' => new overcast.FieldInfo('MARGIN_PERC', 'Margin Percantage', overcast.Realtime.ApexType.STRINGX, 10, overcast.Realtime.Direction.OUTPUT),
                        'SERVICE_COST' => new overcast.FieldInfo('SERVICE_COST', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_01_AMT' => new overcast.FieldInfo('KPI_01_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_01_CURR' => new overcast.FieldInfo('KPI_01_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_02_AMT' => new overcast.FieldInfo('KPI_02_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_02_CURR' => new overcast.FieldInfo('KPI_02_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_03_AMT' => new overcast.FieldInfo('KPI_03_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_03_CURR' => new overcast.FieldInfo('KPI_03_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_04_AMT' => new overcast.FieldInfo('KPI_04_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_04_CURR' => new overcast.FieldInfo('KPI_04_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_05_AMT' => new overcast.FieldInfo('KPI_05_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_05_CURR' => new overcast.FieldInfo('KPI_05_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_06_AMT' => new overcast.FieldInfo('KPI_06_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_06_CURR' => new overcast.FieldInfo('KPI_06_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_07_AMT' => new overcast.FieldInfo('KPI_07_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_07_CURR' => new overcast.FieldInfo('KPI_07_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_08_AMT' => new overcast.FieldInfo('KPI_08_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_08_CURR' => new overcast.FieldInfo('KPI_08_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_09_AMT' => new overcast.FieldInfo('KPI_09_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_09_CURR' => new overcast.FieldInfo('KPI_09_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'KPI_10_AMT' => new overcast.FieldInfo('KPI_10_AMT', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'KPI_10_CURR' => new overcast.FieldInfo('KPI_10_CURR', 'Currency', overcast.Realtime.ApexType.STRINGX, 5, overcast.Realtime.Direction.OUTPUT),
                        'LINKED_OPP_ID' => new overcast.FieldInfo('LINKED_OPP_ID', 'Char255', overcast.Realtime.ApexType.STRINGX, 255, overcast.Realtime.Direction.OUTPUT),
                        'LINKED_ORDER_ID' => new overcast.FieldInfo('LINKED_ORDER_ID', 'Char255', overcast.Realtime.ApexType.STRINGX, 255, overcast.Realtime.Direction.OUTPUT),
                        'OVERHEAD' => new overcast.FieldInfo('OVERHEAD', 'Net Value', overcast.Realtime.ApexType.DECIMALX, 16,2, overcast.Realtime.Direction.OUTPUT),
                        'PO_NUMBER_SHIP' => new overcast.FieldInfo('PO_NUMBER_SHIP', 'Ext. Reference', overcast.Realtime.ApexType.STRINGX, 35, overcast.Realtime.Direction.OUTPUT),
                        'NON_DISCOUNTABLE' => new overcast.FieldInfo('NON_DISCOUNTABLE', 'Indicator', overcast.Realtime.ApexType.STRINGX, 1, overcast.Realtime.Direction.OUTPUT)                }),
                'IS_MARGIN_GSA' => new overcast.TypeInfo('IS_MARGIN_GSA', 'Input Structure for Margins and GSA', overcast.Realtime.StructureType.TABLE, overcast.Realtime.Direction.BOTH,
                    new map<string, overcast.FieldInfo> {
                        'QUOTE_ID' => new overcast.FieldInfo('QUOTE_ID', 'ID', overcast.Realtime.ApexType.STRINGX, 10, overcast.Realtime.Direction.BOTH),
                        'PROCESS_TYPE' => new overcast.FieldInfo('PROCESS_TYPE', 'Transaction Type', overcast.Realtime.ApexType.STRINGX, 4, overcast.Realtime.Direction.BOTH),
                        'CALC_GSA' => new overcast.FieldInfo('CALC_GSA', 'Indicator', overcast.Realtime.ApexType.STRINGX, 1, overcast.Realtime.Direction.BOTH),
                        'CALC_MARGIN' => new overcast.FieldInfo('CALC_MARGIN', 'Indicator', overcast.Realtime.ApexType.STRINGX, 1, overcast.Realtime.Direction.BOTH),
                        'CALC_DISC' => new overcast.FieldInfo('CALC_DISC', 'Indicator', overcast.Realtime.ApexType.STRINGX, 1, overcast.Realtime.Direction.BOTH)                })            };
        }
        return metadata;
    }*///Commented by Sourav for Overcast uninstall
}