/* 
 * Generated by Overcast UTC 2020-01-05 06:45:29Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
@istest
private class sapDeliveryTest {
    @istest
    private static void testsapDelivery() {
        sapDelivery actual = new sapDelivery();
        system.assertNotEquals(null, actual.BAPI_DELIVERY_GETLIST);
        system.assertNotEquals(null, actual.IS_DLV_DATA_CONTROL);
        system.assertNotEquals(null, actual.ET_DELIVERY_HEADER);
        system.assertNotEquals(null, actual.ET_DELIVERY_HEADER_STS);
        system.assertNotEquals(null, actual.ET_DELIVERY_ITEM);
        system.assertNotEquals(null, actual.ET_DELIVERY_ITEM_STS);
        system.assertNotEquals(null, actual.ET_DELIVERY_PARTNER);
        system.assertNotEquals(null, actual.ET_DOCUMENT_FLOW);
        system.assertNotEquals(null, actual.ET_FOREIGN_TRADE_HEADER);
        system.assertNotEquals(null, actual.ET_FOREIGN_TRADE_ITEM);
        system.assertNotEquals(null, actual.ET_HU_HEADER);
        system.assertNotEquals(null, actual.ET_ITEM_SERIAL_NO);
        system.assertNotEquals(null, actual.EXTENSIONIN);
        system.assertNotEquals(null, actual.EXTENSIONOUT);
        system.assertNotEquals(null, actual.IT_ABLAD);
        system.assertNotEquals(null, actual.IT_ABTNR);
        system.assertNotEquals(null, actual.IT_AUFNR);
        system.assertNotEquals(null, actual.IT_AULWE);
        system.assertNotEquals(null, actual.IT_BESTK);
        system.assertNotEquals(null, actual.IT_BLDAT);
        system.assertNotEquals(null, actual.IT_CHARG);
        system.assertNotEquals(null, actual.IT_CMFRE);
        system.assertNotEquals(null, actual.IT_CMGST);
        system.assertNotEquals(null, actual.IT_CMNGV);
        system.assertNotEquals(null, actual.IT_CTLPC);
        system.assertNotEquals(null, actual.IT_EAN11);
        system.assertNotEquals(null, actual.IT_ERDAT);
        system.assertNotEquals(null, actual.IT_ERNAM);
        system.assertNotEquals(null, actual.IT_FKSTK);
        system.assertNotEquals(null, actual.IT_GBSTK);
        system.assertNotEquals(null, actual.IT_GRUPP);
        system.assertNotEquals(null, actual.IT_KDMAT);
        system.assertNotEquals(null, actual.IT_KKBER);
        system.assertNotEquals(null, actual.IT_KNKLI);
        system.assertNotEquals(null, actual.IT_KODAT);
        system.assertNotEquals(null, actual.IT_KOQUK);
        system.assertNotEquals(null, actual.IT_KOSTK);
        system.assertNotEquals(null, actual.IT_KUNN2);
        system.assertNotEquals(null, actual.IT_KUNNR);
        system.assertNotEquals(null, actual.IT_KUNWE);
        system.assertNotEquals(null, actual.IT_LDDAT);
        system.assertNotEquals(null, actual.IT_LFART);
        system.assertNotEquals(null, actual.IT_LFDAT);
        system.assertNotEquals(null, actual.IT_LGNUM);
        system.assertNotEquals(null, actual.IT_LGORT);
        system.assertNotEquals(null, actual.IT_LGTOR);
        system.assertNotEquals(null, actual.IT_LIFEX);
        system.assertNotEquals(null, actual.IT_LIFSK);
        system.assertNotEquals(null, actual.IT_LPRIO);
        system.assertNotEquals(null, actual.IT_LSTEL);
        system.assertNotEquals(null, actual.IT_LVSTK);
        system.assertNotEquals(null, actual.IT_MATKL);
        system.assertNotEquals(null, actual.IT_MATNR);
        system.assertNotEquals(null, actual.IT_PARNR);
        system.assertNotEquals(null, actual.IT_PARVW);
        system.assertNotEquals(null, actual.IT_PERNR);
        system.assertNotEquals(null, actual.IT_PKSTK);
        system.assertNotEquals(null, actual.IT_PRVBE);
        system.assertNotEquals(null, actual.IT_ROUTE);
        system.assertNotEquals(null, actual.IT_SAMMG);
        system.assertNotEquals(null, actual.IT_SBGRP);
        system.assertNotEquals(null, actual.IT_SPART);
        system.assertNotEquals(null, actual.IT_SPDNR);
        system.assertNotEquals(null, actual.IT_TDDAT);
        system.assertNotEquals(null, actual.IT_TKNUM);
        system.assertNotEquals(null, actual.IT_TRAID);
        system.assertNotEquals(null, actual.IT_TRSTA);
        system.assertNotEquals(null, actual.IT_VBELN);
        system.assertNotEquals(null, actual.IT_VBTYP);
        system.assertNotEquals(null, actual.IT_VGBEL);
        system.assertNotEquals(null, actual.IT_VGSYS);
        system.assertNotEquals(null, actual.IT_VKBUR);
        system.assertNotEquals(null, actual.IT_VKGRP);
        system.assertNotEquals(null, actual.IT_VKORG);
        system.assertNotEquals(null, actual.IT_VSBED);
        system.assertNotEquals(null, actual.IT_VSTEL);
        system.assertNotEquals(null, actual.IT_VTWEG);
        system.assertNotEquals(null, actual.IT_WADAT);
        system.assertNotEquals(null, actual.IT_WADAT_IST);
        system.assertNotEquals(null, actual.IT_WAKTI);
        system.assertNotEquals(null, actual.IT_WAUHR);
        system.assertNotEquals(null, actual.IT_WBSTK);
        system.assertNotEquals(null, actual.IT_WERKS);
        system.assertNotEquals(null, actual.IT_XBLNR);
        system.assertNotEquals(null, actual.RETURN_x);
    }

    @istest
    private static void TestBAPI_DELIVERY_GETLIST() {
        sapDelivery.BAPI_DELIVERY_GETLIST actual = new sapDelivery.BAPI_DELIVERY_GETLIST();


        sapDelivery.BAPI_DELIVERY_GETLIST actual0 = new sapDelivery.BAPI_DELIVERY_GETLIST();
    }
    @istest
    private static void TestIS_DLV_DATA_CONTROL() {
        sapDelivery.IS_DLV_DATA_CONTROL actual = new sapDelivery.IS_DLV_DATA_CONTROL('a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.BYPASSING_BUFFER);
        system.assertEquals('a', actual.HEAD_STATUS);
        system.assertEquals('a', actual.HEAD_PARTNER);
        system.assertEquals('a', actual.ITEM);
        system.assertEquals('a', actual.ITEM_STATUS);
        system.assertEquals('a', actual.DOC_FLOW);
        system.assertEquals('a', actual.FT_DATA);
        system.assertEquals('a', actual.HU_DATA);
        system.assertEquals('a', actual.SERNO);

        sapDelivery.IS_DLV_DATA_CONTROL actual0 = new sapDelivery.IS_DLV_DATA_CONTROL();
    }
    @istest
    private static void TestET_DELIVERY_HEADER() {
        sapDelivery.ET_DELIVERY_HEADER actual = new sapDelivery.ET_DELIVERY_HEADER('a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.STZKL = 0;
        actual.STZZU = 0;
        actual.BTGEW = 0;
        actual.NTGEW = 0;
        actual.GEWEI = 'a';
        actual.VOLUM = 0;
        actual.VOLEH = 'a';
        actual.ANZPK = 'a';
        actual.BEROT = 'a';
        actual.LFUHR = 'a';
        actual.GRULG = 'a';
        actual.LSTEL = 'a';
        actual.TRAGR = 'a';
        actual.FKARV = 'a';
        actual.FKDAT = Date.newInstance(2000,1,1);
        actual.PERFK = 'a';
        actual.ROUTA = 'a';
        actual.STAFO = 'a';
        actual.KALSM = 'a';
        actual.KNUMV = 'a';
        actual.WAERK = 'a';
        actual.VKBUR = 'a';
        actual.VBEAK = 0;
        actual.ZUKRL = 'a';
        actual.VERUR = 'a';
        actual.COMMN = 'a';
        actual.STWAE = 'a';
        actual.STCUR = 0;
        actual.EXNUM = 'a';
        actual.AENAM = 'a';
        actual.AEDAT = Date.newInstance(2000,1,1);
        actual.LGNUM = 'a';
        actual.LISPL = 'a';
        actual.VKOIV = 'a';
        actual.VTWIV = 'a';
        actual.SPAIV = 'a';
        actual.FKAIV = 'a';
        actual.PIOIV = 'a';
        actual.FKDIV = Date.newInstance(2000,1,1);
        actual.KUNIV = 'a';
        actual.KKBER = 'a';
        actual.KNKLI = 'a';
        actual.GRUPP = 'a';
        actual.SBGRP = 'a';
        actual.CTLPC = 'a';
        actual.CMWAE = 'a';
        actual.AMTBL = 0;
        actual.BOLNR = 'a';
        actual.LIFNR = 'a';
        actual.TRATY = 'a';
        actual.TRAID = 'a';
        actual.CMFRE = Date.newInstance(2000,1,1);
        actual.CMNGV = Date.newInstance(2000,1,1);
        actual.XABLN = 'a';
        actual.BLDAT = Date.newInstance(2000,1,1);
        actual.WADAT_IST = Date.newInstance(2000,1,1);
        actual.TRSPG = 'a';
        actual.TPSID = 'a';
        actual.LIFEX = 'a';
        actual.TERNR = 'a';
        actual.KALSM_CH = 'a';
        actual.KLIEF = 'a';
        actual.KALSP = 'a';
        actual.KNUMP = 'a';
        actual.NETWR = 0;
        actual.AULWE = 'a';
        actual.WERKS = 'a';
        actual.LCNUM = 'a';
        actual.ABSSC = 'a';
        actual.KOUHR = 'a';
        actual.TDUHR = 'a';
        actual.LDUHR = 'a';
        actual.WAUHR = 'a';
        actual.LGTOR = 'a';
        actual.LGBZO = 'a';
        actual.AKWAE = 'a';
        actual.AKKUR = 0;
        actual.AKPRZ = 0;
        actual.PROLI = 'a';
        actual.XBLNR = 'a';
        actual.HANDLE = 'a';
        actual.TSEGFL = 'a';
        actual.TSEGTP = 'a';
        actual.TZONIS = 'a';
        actual.TZONRC = 'a';
        actual.CONT_DG = 'a';
        actual.VERURSYS = 'a';
        actual.KZWAB = 'a';
        actual.VLSTK = 'a';
        actual.TCODE = 'a';
        actual.VSART = 'a';
        actual.TRMTYP = 'a';
        actual.SDABW = 'a';
        actual.VBUND = 'a';
        actual.XWOFF = 'a';
        actual.DIRTA = 'a';
        actual.PRVBE = 'a';
        actual.FOLAR = 'a';
        actual.PODAT = Date.newInstance(2000,1,1);
        actual.POTIM = 'a';
        actual.VGANZ = 0;
        actual.IMWRK = 'a';
        actual.SPE_LOEKZ = 'a';
        actual.SPE_LOC_SEQ = 'a';
        actual.SPE_ACC_APP_STS = 'a';
        actual.SPE_SHP_INF_STS = 'a';
        actual.SPE_RET_CANC = 'a';
        actual.SPE_WAUHR_IST = 'a';
        actual.SPE_WAZONE_IST = 'a';
        actual.SPE_REV_VLSTK = 'a';
        actual.SPE_LE_SCENARIO = 'a';
        actual.SPE_ORIG_SYS = 'a';
        actual.SPE_CHNG_SYS = 'a';
        actual.SPE_GEOROUTE = 'a';
        actual.SPE_GEOROUTEIND = 'a';
        actual.SPE_CARRIER_IND = 'a';
        actual.SPE_GTS_REL = 'a';
        actual.SPE_GTS_RT_CDE = 'a';
        actual.SPE_REL_TMSTMP = 0;
        actual.SPE_UNIT_SYSTEM = 'a';
        actual.SPE_INV_BFR_GI = 'a';
        actual.SPE_QI_STATUS = 'a';
        actual.SPE_RED_IND = 'a';
        actual.SAKES = 'a';
        actual.SPE_LIFEX_TYPE = 'a';
        actual.SPE_TTYPE = 'a';
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.VBELN);
        system.assertEquals('a', actual.ERNAM);
        system.assertEquals('a', actual.ERZET);
        system.assertEquals(Date.newInstance(2000,1,1), actual.ERDAT);
        system.assertEquals('a', actual.BZIRK);
        system.assertEquals('a', actual.VSTEL);
        system.assertEquals('a', actual.VKORG);
        system.assertEquals('a', actual.LFART);
        system.assertEquals('a', actual.AUTLF);
        system.assertEquals('a', actual.KZAZU);
        system.assertEquals(Date.newInstance(2000,1,1), actual.WADAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LDDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TDDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LFDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.KODAT);
        system.assertEquals('a', actual.ABLAD);
        system.assertEquals('a', actual.INCO1);
        system.assertEquals('a', actual.INCO2);
        system.assertEquals('a', actual.EXPKZ);
        system.assertEquals('a', actual.ROUTE);
        system.assertEquals('a', actual.FAKSK);
        system.assertEquals('a', actual.LIFSK);
        system.assertEquals('a', actual.VBTYP);
        system.assertEquals('a', actual.KNFAK);
        system.assertEquals('a', actual.TPQUA);
        system.assertEquals('a', actual.TPGRP);
        system.assertEquals('a', actual.LPRIO);
        system.assertEquals('a', actual.VSBED);
        system.assertEquals('a', actual.KUNNR);
        system.assertEquals('a', actual.KUNAG);
        system.assertEquals('a', actual.KDGRP);
        system.assertEquals(0, actual.STZKL);
        system.assertEquals(0, actual.STZZU);
        system.assertEquals(0, actual.BTGEW);
        system.assertEquals(0, actual.NTGEW);
        system.assertEquals('a', actual.GEWEI);
        system.assertEquals(0, actual.VOLUM);
        system.assertEquals('a', actual.VOLEH);
        system.assertEquals('a', actual.ANZPK);
        system.assertEquals('a', actual.BEROT);
        system.assertEquals('a', actual.LFUHR);
        system.assertEquals('a', actual.GRULG);
        system.assertEquals('a', actual.LSTEL);
        system.assertEquals('a', actual.TRAGR);
        system.assertEquals('a', actual.FKARV);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FKDAT);
        system.assertEquals('a', actual.PERFK);
        system.assertEquals('a', actual.ROUTA);
        system.assertEquals('a', actual.STAFO);
        system.assertEquals('a', actual.KALSM);
        system.assertEquals('a', actual.KNUMV);
        system.assertEquals('a', actual.WAERK);
        system.assertEquals('a', actual.VKBUR);
        system.assertEquals(0, actual.VBEAK);
        system.assertEquals('a', actual.ZUKRL);
        system.assertEquals('a', actual.VERUR);
        system.assertEquals('a', actual.COMMN);
        system.assertEquals('a', actual.STWAE);
        system.assertEquals(0, actual.STCUR);
        system.assertEquals('a', actual.EXNUM);
        system.assertEquals('a', actual.AENAM);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AEDAT);
        system.assertEquals('a', actual.LGNUM);
        system.assertEquals('a', actual.LISPL);
        system.assertEquals('a', actual.VKOIV);
        system.assertEquals('a', actual.VTWIV);
        system.assertEquals('a', actual.SPAIV);
        system.assertEquals('a', actual.FKAIV);
        system.assertEquals('a', actual.PIOIV);
        system.assertEquals(Date.newInstance(2000,1,1), actual.FKDIV);
        system.assertEquals('a', actual.KUNIV);
        system.assertEquals('a', actual.KKBER);
        system.assertEquals('a', actual.KNKLI);
        system.assertEquals('a', actual.GRUPP);
        system.assertEquals('a', actual.SBGRP);
        system.assertEquals('a', actual.CTLPC);
        system.assertEquals('a', actual.CMWAE);
        system.assertEquals(0, actual.AMTBL);
        system.assertEquals('a', actual.BOLNR);
        system.assertEquals('a', actual.LIFNR);
        system.assertEquals('a', actual.TRATY);
        system.assertEquals('a', actual.TRAID);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CMFRE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CMNGV);
        system.assertEquals('a', actual.XABLN);
        system.assertEquals(Date.newInstance(2000,1,1), actual.BLDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.WADAT_IST);
        system.assertEquals('a', actual.TRSPG);
        system.assertEquals('a', actual.TPSID);
        system.assertEquals('a', actual.LIFEX);
        system.assertEquals('a', actual.TERNR);
        system.assertEquals('a', actual.KALSM_CH);
        system.assertEquals('a', actual.KLIEF);
        system.assertEquals('a', actual.KALSP);
        system.assertEquals('a', actual.KNUMP);
        system.assertEquals(0, actual.NETWR);
        system.assertEquals('a', actual.AULWE);
        system.assertEquals('a', actual.WERKS);
        system.assertEquals('a', actual.LCNUM);
        system.assertEquals('a', actual.ABSSC);
        system.assertEquals('a', actual.KOUHR);
        system.assertEquals('a', actual.TDUHR);
        system.assertEquals('a', actual.LDUHR);
        system.assertEquals('a', actual.WAUHR);
        system.assertEquals('a', actual.LGTOR);
        system.assertEquals('a', actual.LGBZO);
        system.assertEquals('a', actual.AKWAE);
        system.assertEquals(0, actual.AKKUR);
        system.assertEquals(0, actual.AKPRZ);
        system.assertEquals('a', actual.PROLI);
        system.assertEquals('a', actual.XBLNR);
        system.assertEquals('a', actual.HANDLE);
        system.assertEquals('a', actual.TSEGFL);
        system.assertEquals('a', actual.TSEGTP);
        system.assertEquals('a', actual.TZONIS);
        system.assertEquals('a', actual.TZONRC);
        system.assertEquals('a', actual.CONT_DG);
        system.assertEquals('a', actual.VERURSYS);
        system.assertEquals('a', actual.KZWAB);
        system.assertEquals('a', actual.VLSTK);
        system.assertEquals('a', actual.TCODE);
        system.assertEquals('a', actual.VSART);
        system.assertEquals('a', actual.TRMTYP);
        system.assertEquals('a', actual.SDABW);
        system.assertEquals('a', actual.VBUND);
        system.assertEquals('a', actual.XWOFF);
        system.assertEquals('a', actual.DIRTA);
        system.assertEquals('a', actual.PRVBE);
        system.assertEquals('a', actual.FOLAR);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PODAT);
        system.assertEquals('a', actual.POTIM);
        system.assertEquals(0, actual.VGANZ);
        system.assertEquals('a', actual.IMWRK);
        system.assertEquals('a', actual.SPE_LOEKZ);
        system.assertEquals('a', actual.SPE_LOC_SEQ);
        system.assertEquals('a', actual.SPE_ACC_APP_STS);
        system.assertEquals('a', actual.SPE_SHP_INF_STS);
        system.assertEquals('a', actual.SPE_RET_CANC);
        system.assertEquals('a', actual.SPE_WAUHR_IST);
        system.assertEquals('a', actual.SPE_WAZONE_IST);
        system.assertEquals('a', actual.SPE_REV_VLSTK);
        system.assertEquals('a', actual.SPE_LE_SCENARIO);
        system.assertEquals('a', actual.SPE_ORIG_SYS);
        system.assertEquals('a', actual.SPE_CHNG_SYS);
        system.assertEquals('a', actual.SPE_GEOROUTE);
        system.assertEquals('a', actual.SPE_GEOROUTEIND);
        system.assertEquals('a', actual.SPE_CARRIER_IND);
        system.assertEquals('a', actual.SPE_GTS_REL);
        system.assertEquals('a', actual.SPE_GTS_RT_CDE);
        system.assertEquals(0, actual.SPE_REL_TMSTMP);
        system.assertEquals('a', actual.SPE_UNIT_SYSTEM);
        system.assertEquals('a', actual.SPE_INV_BFR_GI);
        system.assertEquals('a', actual.SPE_QI_STATUS);
        system.assertEquals('a', actual.SPE_RED_IND);
        system.assertEquals('a', actual.SAKES);
        system.assertEquals('a', actual.SPE_LIFEX_TYPE);
        system.assertEquals('a', actual.SPE_TTYPE);

        sapDelivery.ET_DELIVERY_HEADER actual0 = new sapDelivery.ET_DELIVERY_HEADER();
    }
    @istest
    private static void TestET_DELIVERY_HEADER_STS() {
        sapDelivery.ET_DELIVERY_HEADER_STS actual = new sapDelivery.ET_DELIVERY_HEADER_STS('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a');

        actual.UVS01 = 'a';
        actual.UVS02 = 'a';
        actual.UVS03 = 'a';
        actual.UVS04 = 'a';
        actual.UVS05 = 'a';
        actual.PKSTK = 'a';
        actual.CMPSA = 'a';
        actual.CMPSB = 'a';
        actual.CMPSC = 'a';
        actual.CMPSD = 'a';
        actual.CMPSE = 'a';
        actual.CMPSF = 'a';
        actual.CMPSG = 'a';
        actual.CMPSH = 'a';
        actual.CMPSI = 'a';
        actual.CMPSJ = 'a';
        actual.CMPSK = 'a';
        actual.CMPSL = 'a';
        actual.CMPS0 = 'a';
        actual.CMPS1 = 'a';
        actual.CMPS2 = 'a';
        actual.CMGST = 'a';
        actual.TRSTA = 'a';
        actual.KOQUK = 'a';
        actual.COSTA = 'a';
        actual.SAPRL = 'a';
        actual.UVPAS = 'a';
        actual.UVPIS = 'a';
        actual.UVWAS = 'a';
        actual.UVPAK = 'a';
        actual.UVPIK = 'a';
        actual.UVWAK = 'a';
        actual.UVGEK = 'a';
        actual.CMPSM = 'a';
        actual.DCSTK = 'a';
        actual.VESTK = 'a';
        actual.VLSTK = 'a';
        actual.RRSTA = 'a';
        actual.BLOCK = 'a';
        actual.FSSTK = 'a';
        actual.LSSTK = 'a';
        actual.SPSTG = 'a';
        actual.PDSTK = 'a';
        actual.FMSTK = 'a';
        actual.MANEK = 'a';
        actual.SPE_TMPID = 'a';
        actual.HDALL = 'a';
        actual.HDALS = 'a';
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.VBELN);
        system.assertEquals('a', actual.RFSTK);
        system.assertEquals('a', actual.RFGSK);
        system.assertEquals('a', actual.BESTK);
        system.assertEquals('a', actual.LFSTK);
        system.assertEquals('a', actual.LFGSK);
        system.assertEquals('a', actual.WBSTK);
        system.assertEquals('a', actual.FKSTK);
        system.assertEquals('a', actual.FKSAK);
        system.assertEquals('a', actual.BUCHK);
        system.assertEquals('a', actual.ABSTK);
        system.assertEquals('a', actual.GBSTK);
        system.assertEquals('a', actual.KOSTK);
        system.assertEquals('a', actual.LVSTK);
        system.assertEquals('a', actual.UVALS);
        system.assertEquals('a', actual.UVVLS);
        system.assertEquals('a', actual.UVFAS);
        system.assertEquals('a', actual.UVALL);
        system.assertEquals('a', actual.UVVLK);
        system.assertEquals('a', actual.UVFAK);
        system.assertEquals('a', actual.UVPRS);
        system.assertEquals('a', actual.VBTYP);
        system.assertEquals('a', actual.VBOBJ);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AEDAT);
        system.assertEquals('a', actual.FKIVK);
        system.assertEquals('a', actual.RELIK);
        system.assertEquals('a', actual.UVK01);
        system.assertEquals('a', actual.UVK02);
        system.assertEquals('a', actual.UVK03);
        system.assertEquals('a', actual.UVK04);
        system.assertEquals('a', actual.UVK05);
        system.assertEquals('a', actual.UVS01);
        system.assertEquals('a', actual.UVS02);
        system.assertEquals('a', actual.UVS03);
        system.assertEquals('a', actual.UVS04);
        system.assertEquals('a', actual.UVS05);
        system.assertEquals('a', actual.PKSTK);
        system.assertEquals('a', actual.CMPSA);
        system.assertEquals('a', actual.CMPSB);
        system.assertEquals('a', actual.CMPSC);
        system.assertEquals('a', actual.CMPSD);
        system.assertEquals('a', actual.CMPSE);
        system.assertEquals('a', actual.CMPSF);
        system.assertEquals('a', actual.CMPSG);
        system.assertEquals('a', actual.CMPSH);
        system.assertEquals('a', actual.CMPSI);
        system.assertEquals('a', actual.CMPSJ);
        system.assertEquals('a', actual.CMPSK);
        system.assertEquals('a', actual.CMPSL);
        system.assertEquals('a', actual.CMPS0);
        system.assertEquals('a', actual.CMPS1);
        system.assertEquals('a', actual.CMPS2);
        system.assertEquals('a', actual.CMGST);
        system.assertEquals('a', actual.TRSTA);
        system.assertEquals('a', actual.KOQUK);
        system.assertEquals('a', actual.COSTA);
        system.assertEquals('a', actual.SAPRL);
        system.assertEquals('a', actual.UVPAS);
        system.assertEquals('a', actual.UVPIS);
        system.assertEquals('a', actual.UVWAS);
        system.assertEquals('a', actual.UVPAK);
        system.assertEquals('a', actual.UVPIK);
        system.assertEquals('a', actual.UVWAK);
        system.assertEquals('a', actual.UVGEK);
        system.assertEquals('a', actual.CMPSM);
        system.assertEquals('a', actual.DCSTK);
        system.assertEquals('a', actual.VESTK);
        system.assertEquals('a', actual.VLSTK);
        system.assertEquals('a', actual.RRSTA);
        system.assertEquals('a', actual.BLOCK);
        system.assertEquals('a', actual.FSSTK);
        system.assertEquals('a', actual.LSSTK);
        system.assertEquals('a', actual.SPSTG);
        system.assertEquals('a', actual.PDSTK);
        system.assertEquals('a', actual.FMSTK);
        system.assertEquals('a', actual.MANEK);
        system.assertEquals('a', actual.SPE_TMPID);
        system.assertEquals('a', actual.HDALL);
        system.assertEquals('a', actual.HDALS);

        sapDelivery.ET_DELIVERY_HEADER_STS actual0 = new sapDelivery.ET_DELIVERY_HEADER_STS();
    }
    @istest
    private static void TestET_DELIVERY_ITEM() {
        sapDelivery.ET_DELIVERY_ITEM actual = new sapDelivery.ET_DELIVERY_ITEM('a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a','a',0,'a','a',0,0,0,0,'a',0,'a','a','a',0,0,'a','a');

        actual.MBDAT = Date.newInstance(2000,1,1);
        actual.LGMNG = 0;
        actual.ARKTX = 'a';
        actual.LGPBE = 'a';
        actual.VBELV = 'a';
        actual.POSNV = 'a';
        actual.VBTYV = 'a';
        actual.VGSYS = 'a';
        actual.VGBEL = 'a';
        actual.VGPOS = 'a';
        actual.UPFLU = 'a';
        actual.UEPOS = 'a';
        actual.FKREL = 'a';
        actual.LADGR = 'a';
        actual.TRAGR = 'a';
        actual.KOMKZ = 'a';
        actual.LGNUM = 'a';
        actual.LISPL = 'a';
        actual.LGTYP = 'a';
        actual.LGPLA = 'a';
        actual.BWTEX = 'a';
        actual.BWART = 'a';
        actual.BWLVS = 'a';
        actual.KZDLG = 'a';
        actual.BDART = 'a';
        actual.PLART = 'a';
        actual.MTART = 'a';
        actual.XCHPF = 'a';
        actual.XCHAR = 'a';
        actual.VGREF = 'a';
        actual.POSAR = 'a';
        actual.BWTAR = 'a';
        actual.SUMBD = 'a';
        actual.MTVFP = 'a';
        actual.EANNR = 'a';
        actual.GSBER = 'a';
        actual.VKBUR = 'a';
        actual.VKGRP = 'a';
        actual.VTWEG = 'a';
        actual.SPART = 'a';
        actual.GRKOR = 'a';
        actual.FMENG = 'a';
        actual.ANTLF = 0;
        actual.VBEAF = 0;
        actual.VBEAV = 0;
        actual.STAFO = 'a';
        actual.WAVWR = 0;
        actual.KZWI1 = 0;
        actual.KZWI2 = 0;
        actual.KZWI3 = 0;
        actual.KZWI4 = 0;
        actual.KZWI5 = 0;
        actual.KZWI6 = 0;
        actual.SOBKZ = 'a';
        actual.AEDAT = Date.newInstance(2000,1,1);
        actual.EAN11 = 'a';
        actual.KVGR1 = 'a';
        actual.KVGR2 = 'a';
        actual.KVGR3 = 'a';
        actual.KVGR4 = 'a';
        actual.KVGR5 = 'a';
        actual.MVGR1 = 'a';
        actual.MVGR2 = 'a';
        actual.MVGR3 = 'a';
        actual.MVGR4 = 'a';
        actual.MVGR5 = 'a';
        actual.VPZUO = 'a';
        actual.VGTYP = 'a';
        actual.RFVGTYP = 'a';
        actual.KOSTL = 'a';
        actual.KOKRS = 'a';
        actual.PAOBJNR = 'a';
        actual.PRCTR = 'a';
        actual.PS_PSP_PNR = 'a';
        actual.AUFNR = 'a';
        actual.POSNR_PP = 'a';
        actual.KDAUF = 'a';
        actual.KDPOS = 'a';
        actual.VPMAT = 'a';
        actual.VPWRK = 'a';
        actual.PRBME = 'a';
        actual.UMREF = 0;
        actual.KNTTP = 'a';
        actual.KZVBR = 'a';
        actual.FIPOS = 'a';
        actual.FISTL = 'a';
        actual.GEBER = 'a';
        actual.PCKPF = 'a';
        actual.BEDAR_LF = 'a';
        actual.CMPNT = 'a';
        actual.KCMENG = 0;
        actual.KCBRGEW = 0;
        actual.KCNTGEW = 0;
        actual.KCVOLUM = 0;
        actual.UECHA = 'a';
        actual.CUOBJ = 'a';
        actual.CUOBJ_CH = 'a';
        actual.ANZSN = 0;
        actual.SERAIL = 'a';
        actual.KCGEWEI = 'a';
        actual.KCVOLEH = 'a';
        actual.SERNR = 'a';
        actual.ABRLI = 'a';
        actual.ABART = 'a';
        actual.ABRVW = 'a';
        actual.QPLOS = 'a';
        actual.QTLOS = 'a';
        actual.NACHL = 'a';
        actual.MAGRV = 'a';
        actual.OBJKO = 'a';
        actual.OBJPO = 'a';
        actual.AESKD = 'a';
        actual.SHKZG = 'a';
        actual.PROSA = 'a';
        actual.UEPVW = 'a';
        actual.EMPST = 'a';
        actual.ABTNR = 'a';
        actual.KOQUI = 'a';
        actual.STADAT = Date.newInstance(2000,1,1);
        actual.AKTNR = 'a';
        actual.KNUMH_CH = 'a';
        actual.PREFE = 'a';
        actual.EXART = 'a';
        actual.CLINT = 'a';
        actual.CHMVS = 'a';
        actual.ABELN = 'a';
        actual.ABELP = 'a';
        actual.LFIMG_FLO = 0;
        actual.LGMNG_FLO = 0;
        actual.KCMENG_FLO = 0;
        actual.KZUMW = 'a';
        actual.KMPMG = 0;
        actual.AUREL = 'a';
        actual.KPEIN = 0;
        actual.KMEIN = 'a';
        actual.NETPR = 0;
        actual.NETWR = 0;
        actual.KOWRR = 'a';
        actual.KZBEW = 'a';
        actual.MFRGR = 'a';
        actual.CHHPV = 'a';
        actual.ABFOR = 'a';
        actual.ABGES = 0;
        actual.MBUHR = 'a';
        actual.WKTNR = 'a';
        actual.WKTPS = 'a';
        actual.J_1BCFOP = 'a';
        actual.J_1BTAXLW1 = 'a';
        actual.J_1BTAXLW2 = 'a';
        actual.J_1BTXSDC = 'a';
        actual.SITUA = 'a';
        actual.RSNUM = 'a';
        actual.RSPOS = 'a';
        actual.RSART = 'a';
        actual.KANNR = 'a';
        actual.KZFME = 'a';
        actual.PROFL = 'a';
        actual.KCMENGVME = 0;
        actual.KCMENGVMEF = 0;
        actual.KZBWS = 'a';
        actual.PSPNR = 'a';
        actual.EPRIO = 'a';
        actual.RULES = 'a';
        actual.KZBEF = 'a';
        actual.MPROF = 'a';
        actual.EMATN = 'a';
        actual.LGBZO = 'a';
        actual.HANDLE = 'a';
        actual.VERURPOS = 'a';
        actual.LIFEXPOS = 'a';
        actual.NOATP = 'a';
        actual.NOPCK = 'a';
        actual.RBLVS = 'a';
        actual.BERID = 'a';
        actual.BESTQ = 'a';
        actual.UMBSQ = 'a';
        actual.UMMAT = 'a';
        actual.UMWRK = 'a';
        actual.UMLGO = 'a';
        actual.UMCHA = 'a';
        actual.UMBAR = 'a';
        actual.UMSOK = 'a';
        actual.SONUM = 'a';
        actual.USONU = 'a';
        actual.AKKUR = 0;
        actual.AKMNG = 'a';
        actual.VKGRU = 'a';
        actual.SHKZG_UM = 'a';
        actual.INSMK = 'a';
        actual.KZECH = 'a';
        actual.FLGWM = 'a';
        actual.BERKZ = 'a';
        actual.HUPOS = 'a';
        actual.NOWAB = 'a';
        actual.KONTO = 'a';
        actual.KZEAR = 'a';
        actual.HSDAT = Date.newInstance(2000,1,1);
        actual.VFDAT = Date.newInstance(2000,1,1);
        actual.LFGJA = 'a';
        actual.LFBNR = 'a';
        actual.LFPOS = 'a';
        actual.GRUND = 'a';
        actual.FOBWA = 'a';
        actual.DLVTP = 'a';
        actual.EXBWR = 0;
        actual.BPMNG = 0;
        actual.EXVKW = 0;
        actual.CMPRE_FLT = 0;
        actual.KZPOD = 'a';
        actual.LFDEZ = 'a';
        actual.UMREV = 0;
        actual.PODREL = 'a';
        actual.KZUML = 'a';
        actual.FKBER = 'a';
        actual.GRANT_NBR = 'a';
        actual.KZWSO = 'a';
        actual.GMCONTROL = 'a';
        actual.POSTING_CHANGE = 'a';
        actual.UM_PS_PSP_PNR = 'a';
        actual.PRE_VL_ETENS = 'a';
        actual.SPE_GEN_ELIKZ = 'a';
        actual.SPE_SCRAP_IND = 'a';
        actual.SPE_AUTH_NUMBER = 'a';
        actual.SPE_INSPOUT_GUID = null;
        actual.SPE_FOLLOW_UP = 'a';
        actual.SPE_EXP_DATE_EXT = 0;
        actual.SPE_EXP_DATE_INT = 0;
        actual.SPE_AUTH_COMPLET = 'a';
        actual.ORMNG = 0;
        actual.SPE_ATP_TMSTMP = 0;
        actual.SPE_ORIG_SYS = 'a';
        actual.SPE_LIEFFZ = 0;
        actual.SPE_IMWRK = 'a';
        actual.SPE_LIFEXPOS2 = 'a';
        actual.SPE_EXCEPT_CODE = 'a';
        actual.SPE_KEEP_QTY = 0;
        actual.SPE_ALTERNATE = 'a';
        actual.SPE_MAT_SUBST = 'a';
        actual.SPE_STRUC = 'a';
        actual.SPE_EXP_DATE_EXT_B = 0;
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.VBELN);
        system.assertEquals('a', actual.POSNR);
        system.assertEquals('a', actual.PSTYV);
        system.assertEquals('a', actual.ERNAM);
        system.assertEquals('a', actual.ERZET);
        system.assertEquals(Date.newInstance(2000,1,1), actual.ERDAT);
        system.assertEquals('a', actual.MATNR);
        system.assertEquals('a', actual.MATWA);
        system.assertEquals('a', actual.MATKL);
        system.assertEquals('a', actual.WERKS);
        system.assertEquals('a', actual.LGORT);
        system.assertEquals('a', actual.CHARG);
        system.assertEquals('a', actual.LICHN);
        system.assertEquals('a', actual.KDMAT);
        system.assertEquals('a', actual.PRODH);
        system.assertEquals(0, actual.LFIMG);
        system.assertEquals('a', actual.MEINS);
        system.assertEquals('a', actual.VRKME);
        system.assertEquals(0, actual.UMVKZ);
        system.assertEquals(0, actual.UMVKN);
        system.assertEquals(0, actual.NTGEW);
        system.assertEquals(0, actual.BRGEW);
        system.assertEquals('a', actual.GEWEI);
        system.assertEquals(0, actual.VOLUM);
        system.assertEquals('a', actual.VOLEH);
        system.assertEquals('a', actual.KZTLF);
        system.assertEquals('a', actual.UEBTK);
        system.assertEquals(0, actual.UEBTO);
        system.assertEquals(0, actual.UNTTO);
        system.assertEquals('a', actual.CHSPL);
        system.assertEquals('a', actual.FAKSP);
        system.assertEquals(Date.newInstance(2000,1,1), actual.MBDAT);
        system.assertEquals(0, actual.LGMNG);
        system.assertEquals('a', actual.ARKTX);
        system.assertEquals('a', actual.LGPBE);
        system.assertEquals('a', actual.VBELV);
        system.assertEquals('a', actual.POSNV);
        system.assertEquals('a', actual.VBTYV);
        system.assertEquals('a', actual.VGSYS);
        system.assertEquals('a', actual.VGBEL);
        system.assertEquals('a', actual.VGPOS);
        system.assertEquals('a', actual.UPFLU);
        system.assertEquals('a', actual.UEPOS);
        system.assertEquals('a', actual.FKREL);
        system.assertEquals('a', actual.LADGR);
        system.assertEquals('a', actual.TRAGR);
        system.assertEquals('a', actual.KOMKZ);
        system.assertEquals('a', actual.LGNUM);
        system.assertEquals('a', actual.LISPL);
        system.assertEquals('a', actual.LGTYP);
        system.assertEquals('a', actual.LGPLA);
        system.assertEquals('a', actual.BWTEX);
        system.assertEquals('a', actual.BWART);
        system.assertEquals('a', actual.BWLVS);
        system.assertEquals('a', actual.KZDLG);
        system.assertEquals('a', actual.BDART);
        system.assertEquals('a', actual.PLART);
        system.assertEquals('a', actual.MTART);
        system.assertEquals('a', actual.XCHPF);
        system.assertEquals('a', actual.XCHAR);
        system.assertEquals('a', actual.VGREF);
        system.assertEquals('a', actual.POSAR);
        system.assertEquals('a', actual.BWTAR);
        system.assertEquals('a', actual.SUMBD);
        system.assertEquals('a', actual.MTVFP);
        system.assertEquals('a', actual.EANNR);
        system.assertEquals('a', actual.GSBER);
        system.assertEquals('a', actual.VKBUR);
        system.assertEquals('a', actual.VKGRP);
        system.assertEquals('a', actual.VTWEG);
        system.assertEquals('a', actual.SPART);
        system.assertEquals('a', actual.GRKOR);
        system.assertEquals('a', actual.FMENG);
        system.assertEquals(0, actual.ANTLF);
        system.assertEquals(0, actual.VBEAF);
        system.assertEquals(0, actual.VBEAV);
        system.assertEquals('a', actual.STAFO);
        system.assertEquals(0, actual.WAVWR);
        system.assertEquals(0, actual.KZWI1);
        system.assertEquals(0, actual.KZWI2);
        system.assertEquals(0, actual.KZWI3);
        system.assertEquals(0, actual.KZWI4);
        system.assertEquals(0, actual.KZWI5);
        system.assertEquals(0, actual.KZWI6);
        system.assertEquals('a', actual.SOBKZ);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AEDAT);
        system.assertEquals('a', actual.EAN11);
        system.assertEquals('a', actual.KVGR1);
        system.assertEquals('a', actual.KVGR2);
        system.assertEquals('a', actual.KVGR3);
        system.assertEquals('a', actual.KVGR4);
        system.assertEquals('a', actual.KVGR5);
        system.assertEquals('a', actual.MVGR1);
        system.assertEquals('a', actual.MVGR2);
        system.assertEquals('a', actual.MVGR3);
        system.assertEquals('a', actual.MVGR4);
        system.assertEquals('a', actual.MVGR5);
        system.assertEquals('a', actual.VPZUO);
        system.assertEquals('a', actual.VGTYP);
        system.assertEquals('a', actual.RFVGTYP);
        system.assertEquals('a', actual.KOSTL);
        system.assertEquals('a', actual.KOKRS);
        system.assertEquals('a', actual.PAOBJNR);
        system.assertEquals('a', actual.PRCTR);
        system.assertEquals('a', actual.PS_PSP_PNR);
        system.assertEquals('a', actual.AUFNR);
        system.assertEquals('a', actual.POSNR_PP);
        system.assertEquals('a', actual.KDAUF);
        system.assertEquals('a', actual.KDPOS);
        system.assertEquals('a', actual.VPMAT);
        system.assertEquals('a', actual.VPWRK);
        system.assertEquals('a', actual.PRBME);
        system.assertEquals(0, actual.UMREF);
        system.assertEquals('a', actual.KNTTP);
        system.assertEquals('a', actual.KZVBR);
        system.assertEquals('a', actual.FIPOS);
        system.assertEquals('a', actual.FISTL);
        system.assertEquals('a', actual.GEBER);
        system.assertEquals('a', actual.PCKPF);
        system.assertEquals('a', actual.BEDAR_LF);
        system.assertEquals('a', actual.CMPNT);
        system.assertEquals(0, actual.KCMENG);
        system.assertEquals(0, actual.KCBRGEW);
        system.assertEquals(0, actual.KCNTGEW);
        system.assertEquals(0, actual.KCVOLUM);
        system.assertEquals('a', actual.UECHA);
        system.assertEquals('a', actual.CUOBJ);
        system.assertEquals('a', actual.CUOBJ_CH);
        system.assertEquals(0, actual.ANZSN);
        system.assertEquals('a', actual.SERAIL);
        system.assertEquals('a', actual.KCGEWEI);
        system.assertEquals('a', actual.KCVOLEH);
        system.assertEquals('a', actual.SERNR);
        system.assertEquals('a', actual.ABRLI);
        system.assertEquals('a', actual.ABART);
        system.assertEquals('a', actual.ABRVW);
        system.assertEquals('a', actual.QPLOS);
        system.assertEquals('a', actual.QTLOS);
        system.assertEquals('a', actual.NACHL);
        system.assertEquals('a', actual.MAGRV);
        system.assertEquals('a', actual.OBJKO);
        system.assertEquals('a', actual.OBJPO);
        system.assertEquals('a', actual.AESKD);
        system.assertEquals('a', actual.SHKZG);
        system.assertEquals('a', actual.PROSA);
        system.assertEquals('a', actual.UEPVW);
        system.assertEquals('a', actual.EMPST);
        system.assertEquals('a', actual.ABTNR);
        system.assertEquals('a', actual.KOQUI);
        system.assertEquals(Date.newInstance(2000,1,1), actual.STADAT);
        system.assertEquals('a', actual.AKTNR);
        system.assertEquals('a', actual.KNUMH_CH);
        system.assertEquals('a', actual.PREFE);
        system.assertEquals('a', actual.EXART);
        system.assertEquals('a', actual.CLINT);
        system.assertEquals('a', actual.CHMVS);
        system.assertEquals('a', actual.ABELN);
        system.assertEquals('a', actual.ABELP);
        system.assertEquals(0, actual.LFIMG_FLO);
        system.assertEquals(0, actual.LGMNG_FLO);
        system.assertEquals(0, actual.KCMENG_FLO);
        system.assertEquals('a', actual.KZUMW);
        system.assertEquals(0, actual.KMPMG);
        system.assertEquals('a', actual.AUREL);
        system.assertEquals(0, actual.KPEIN);
        system.assertEquals('a', actual.KMEIN);
        system.assertEquals(0, actual.NETPR);
        system.assertEquals(0, actual.NETWR);
        system.assertEquals('a', actual.KOWRR);
        system.assertEquals('a', actual.KZBEW);
        system.assertEquals('a', actual.MFRGR);
        system.assertEquals('a', actual.CHHPV);
        system.assertEquals('a', actual.ABFOR);
        system.assertEquals(0, actual.ABGES);
        system.assertEquals('a', actual.MBUHR);
        system.assertEquals('a', actual.WKTNR);
        system.assertEquals('a', actual.WKTPS);
        system.assertEquals('a', actual.J_1BCFOP);
        system.assertEquals('a', actual.J_1BTAXLW1);
        system.assertEquals('a', actual.J_1BTAXLW2);
        system.assertEquals('a', actual.J_1BTXSDC);
        system.assertEquals('a', actual.SITUA);
        system.assertEquals('a', actual.RSNUM);
        system.assertEquals('a', actual.RSPOS);
        system.assertEquals('a', actual.RSART);
        system.assertEquals('a', actual.KANNR);
        system.assertEquals('a', actual.KZFME);
        system.assertEquals('a', actual.PROFL);
        system.assertEquals(0, actual.KCMENGVME);
        system.assertEquals(0, actual.KCMENGVMEF);
        system.assertEquals('a', actual.KZBWS);
        system.assertEquals('a', actual.PSPNR);
        system.assertEquals('a', actual.EPRIO);
        system.assertEquals('a', actual.RULES);
        system.assertEquals('a', actual.KZBEF);
        system.assertEquals('a', actual.MPROF);
        system.assertEquals('a', actual.EMATN);
        system.assertEquals('a', actual.LGBZO);
        system.assertEquals('a', actual.HANDLE);
        system.assertEquals('a', actual.VERURPOS);
        system.assertEquals('a', actual.LIFEXPOS);
        system.assertEquals('a', actual.NOATP);
        system.assertEquals('a', actual.NOPCK);
        system.assertEquals('a', actual.RBLVS);
        system.assertEquals('a', actual.BERID);
        system.assertEquals('a', actual.BESTQ);
        system.assertEquals('a', actual.UMBSQ);
        system.assertEquals('a', actual.UMMAT);
        system.assertEquals('a', actual.UMWRK);
        system.assertEquals('a', actual.UMLGO);
        system.assertEquals('a', actual.UMCHA);
        system.assertEquals('a', actual.UMBAR);
        system.assertEquals('a', actual.UMSOK);
        system.assertEquals('a', actual.SONUM);
        system.assertEquals('a', actual.USONU);
        system.assertEquals(0, actual.AKKUR);
        system.assertEquals('a', actual.AKMNG);
        system.assertEquals('a', actual.VKGRU);
        system.assertEquals('a', actual.SHKZG_UM);
        system.assertEquals('a', actual.INSMK);
        system.assertEquals('a', actual.KZECH);
        system.assertEquals('a', actual.FLGWM);
        system.assertEquals('a', actual.BERKZ);
        system.assertEquals('a', actual.HUPOS);
        system.assertEquals('a', actual.NOWAB);
        system.assertEquals('a', actual.KONTO);
        system.assertEquals('a', actual.KZEAR);
        system.assertEquals(Date.newInstance(2000,1,1), actual.HSDAT);
        system.assertEquals(Date.newInstance(2000,1,1), actual.VFDAT);
        system.assertEquals('a', actual.LFGJA);
        system.assertEquals('a', actual.LFBNR);
        system.assertEquals('a', actual.LFPOS);
        system.assertEquals('a', actual.GRUND);
        system.assertEquals('a', actual.FOBWA);
        system.assertEquals('a', actual.DLVTP);
        system.assertEquals(0, actual.EXBWR);
        system.assertEquals(0, actual.BPMNG);
        system.assertEquals(0, actual.EXVKW);
        system.assertEquals(0, actual.CMPRE_FLT);
        system.assertEquals('a', actual.KZPOD);
        system.assertEquals('a', actual.LFDEZ);
        system.assertEquals(0, actual.UMREV);
        system.assertEquals('a', actual.PODREL);
        system.assertEquals('a', actual.KZUML);
        system.assertEquals('a', actual.FKBER);
        system.assertEquals('a', actual.GRANT_NBR);
        system.assertEquals('a', actual.KZWSO);
        system.assertEquals('a', actual.GMCONTROL);
        system.assertEquals('a', actual.POSTING_CHANGE);
        system.assertEquals('a', actual.UM_PS_PSP_PNR);
        system.assertEquals('a', actual.PRE_VL_ETENS);
        system.assertEquals('a', actual.SPE_GEN_ELIKZ);
        system.assertEquals('a', actual.SPE_SCRAP_IND);
        system.assertEquals('a', actual.SPE_AUTH_NUMBER);
        system.assertEquals(null, actual.SPE_INSPOUT_GUID);
        system.assertEquals('a', actual.SPE_FOLLOW_UP);
        system.assertEquals(0, actual.SPE_EXP_DATE_EXT);
        system.assertEquals(0, actual.SPE_EXP_DATE_INT);
        system.assertEquals('a', actual.SPE_AUTH_COMPLET);
        system.assertEquals(0, actual.ORMNG);
        system.assertEquals(0, actual.SPE_ATP_TMSTMP);
        system.assertEquals('a', actual.SPE_ORIG_SYS);
        system.assertEquals(0, actual.SPE_LIEFFZ);
        system.assertEquals('a', actual.SPE_IMWRK);
        system.assertEquals('a', actual.SPE_LIFEXPOS2);
        system.assertEquals('a', actual.SPE_EXCEPT_CODE);
        system.assertEquals(0, actual.SPE_KEEP_QTY);
        system.assertEquals('a', actual.SPE_ALTERNATE);
        system.assertEquals('a', actual.SPE_MAT_SUBST);
        system.assertEquals('a', actual.SPE_STRUC);
        system.assertEquals(0, actual.SPE_EXP_DATE_EXT_B);

        sapDelivery.ET_DELIVERY_ITEM actual0 = new sapDelivery.ET_DELIVERY_ITEM();
    }
    @istest
    private static void TestET_DELIVERY_ITEM_STS() {
        sapDelivery.ET_DELIVERY_ITEM_STS actual = new sapDelivery.ET_DELIVERY_ITEM_STS('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        actual.UVWAK = 'a';
        actual.DCSTA = 'a';
        actual.RRSTA = 'a';
        actual.VLSTP = 'a';
        actual.FSSTA = 'a';
        actual.LSSTA = 'a';
        actual.PDSTA = 'a';
        actual.MANEK = 'a';
        actual.HDALL = 'a';
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.VBELN);
        system.assertEquals('a', actual.POSNR);
        system.assertEquals('a', actual.RFSTA);
        system.assertEquals('a', actual.RFGSA);
        system.assertEquals('a', actual.BESTA);
        system.assertEquals('a', actual.LFSTA);
        system.assertEquals('a', actual.LFGSA);
        system.assertEquals('a', actual.WBSTA);
        system.assertEquals('a', actual.FKSTA);
        system.assertEquals('a', actual.FKSAA);
        system.assertEquals('a', actual.ABSTA);
        system.assertEquals('a', actual.GBSTA);
        system.assertEquals('a', actual.KOSTA);
        system.assertEquals('a', actual.LVSTA);
        system.assertEquals('a', actual.UVALL);
        system.assertEquals('a', actual.UVVLK);
        system.assertEquals('a', actual.UVFAK);
        system.assertEquals('a', actual.UVPRS);
        system.assertEquals('a', actual.FKIVP);
        system.assertEquals('a', actual.UVP01);
        system.assertEquals('a', actual.UVP02);
        system.assertEquals('a', actual.UVP03);
        system.assertEquals('a', actual.UVP04);
        system.assertEquals('a', actual.UVP05);
        system.assertEquals('a', actual.PKSTA);
        system.assertEquals('a', actual.KOQUA);
        system.assertEquals('a', actual.COSTA);
        system.assertEquals('a', actual.CMPPI);
        system.assertEquals('a', actual.CMPPJ);
        system.assertEquals('a', actual.UVPIK);
        system.assertEquals('a', actual.UVPAK);
        system.assertEquals('a', actual.UVWAK);
        system.assertEquals('a', actual.DCSTA);
        system.assertEquals('a', actual.RRSTA);
        system.assertEquals('a', actual.VLSTP);
        system.assertEquals('a', actual.FSSTA);
        system.assertEquals('a', actual.LSSTA);
        system.assertEquals('a', actual.PDSTA);
        system.assertEquals('a', actual.MANEK);
        system.assertEquals('a', actual.HDALL);

        sapDelivery.ET_DELIVERY_ITEM_STS actual0 = new sapDelivery.ET_DELIVERY_ITEM_STS();
    }
    @istest
    private static void TestET_DELIVERY_PARTNER() {
        sapDelivery.ET_DELIVERY_PARTNER actual = new sapDelivery.ET_DELIVERY_PARTNER('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.VBELN);
        system.assertEquals('a', actual.POSNR);
        system.assertEquals('a', actual.PARVW);
        system.assertEquals('a', actual.KUNNR);
        system.assertEquals('a', actual.LIFNR);
        system.assertEquals('a', actual.PERNR);
        system.assertEquals('a', actual.PARNR);
        system.assertEquals('a', actual.ADRNR);
        system.assertEquals('a', actual.ABLAD);
        system.assertEquals('a', actual.LAND1);
        system.assertEquals('a', actual.ADRDA);
        system.assertEquals('a', actual.XCPDK);
        system.assertEquals('a', actual.HITYP);
        system.assertEquals('a', actual.PRFRE);
        system.assertEquals('a', actual.BOKRE);
        system.assertEquals('a', actual.HISTUNR);
        system.assertEquals('a', actual.KNREF);
        system.assertEquals('a', actual.LZONE);
        system.assertEquals('a', actual.HZUOR);
        system.assertEquals('a', actual.STCEG);
        system.assertEquals('a', actual.PARVW_FF);
        system.assertEquals('a', actual.ADRNP);
        system.assertEquals('a', actual.KALE);

        sapDelivery.ET_DELIVERY_PARTNER actual0 = new sapDelivery.ET_DELIVERY_PARTNER();
    }
    @istest
    private static void TestET_DOCUMENT_FLOW() {
        sapDelivery.ET_DOCUMENT_FLOW actual = new sapDelivery.ET_DOCUMENT_FLOW('a','a','a','a','a','a',0,'a',0,'a','a','a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',0,'a',0,'a','a','a',0,0,'a');

        actual.ABGES = 0;
        actual.SOBKZ = 'a';
        actual.SONUM = 'a';
        actual.KZBEF = 'a';
        actual.NTGEW = 0;
        actual.LOGSYS = 'a';
        actual.WBSTA = 'a';
        actual.CMETH = 'a';
        actual.MJAHR = 'a';
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.VBELV);
        system.assertEquals('a', actual.POSNV);
        system.assertEquals('a', actual.VBELN);
        system.assertEquals('a', actual.POSNN);
        system.assertEquals('a', actual.VBTYP_N);
        system.assertEquals(0, actual.RFMNG);
        system.assertEquals('a', actual.MEINS);
        system.assertEquals(0, actual.RFWRT);
        system.assertEquals('a', actual.WAERS);
        system.assertEquals('a', actual.VBTYP_V);
        system.assertEquals('a', actual.PLMIN);
        system.assertEquals('a', actual.TAQUI);
        system.assertEquals(Date.newInstance(2000,1,1), actual.ERDAT);
        system.assertEquals('a', actual.ERZET);
        system.assertEquals('a', actual.MATNR);
        system.assertEquals('a', actual.BWART);
        system.assertEquals('a', actual.BDART);
        system.assertEquals('a', actual.PLART);
        system.assertEquals('a', actual.STUFE);
        system.assertEquals('a', actual.LGNUM);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AEDAT);
        system.assertEquals('a', actual.FKTYP);
        system.assertEquals(0, actual.BRGEW);
        system.assertEquals('a', actual.GEWEI);
        system.assertEquals(0, actual.VOLUM);
        system.assertEquals('a', actual.VOLEH);
        system.assertEquals('a', actual.FPLNR);
        system.assertEquals('a', actual.FPLTR);
        system.assertEquals(0, actual.RFMNG_FLO);
        system.assertEquals(0, actual.RFMNG_FLT);
        system.assertEquals('a', actual.VRKME);
        system.assertEquals(0, actual.ABGES);
        system.assertEquals('a', actual.SOBKZ);
        system.assertEquals('a', actual.SONUM);
        system.assertEquals('a', actual.KZBEF);
        system.assertEquals(0, actual.NTGEW);
        system.assertEquals('a', actual.LOGSYS);
        system.assertEquals('a', actual.WBSTA);
        system.assertEquals('a', actual.CMETH);
        system.assertEquals('a', actual.MJAHR);

        sapDelivery.ET_DOCUMENT_FLOW actual0 = new sapDelivery.ET_DOCUMENT_FLOW();
    }
    @istest
    private static void TestET_FOREIGN_TRADE_HEADER() {
        sapDelivery.ET_FOREIGN_TRADE_HEADER actual = new sapDelivery.ET_FOREIGN_TRADE_HEADER('a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a');

        actual.PREDU = Date.newInstance(2000,1,1);
        actual.PRISO = 'a';
        actual.PRHOE = 'a';
        actual.PRUEL = Date.newInstance(2000,1,1);
        actual.NACAR = 'a';
        actual.NACNU = 'a';
        actual.NACDA = Date.newInstance(2000,1,1);
        actual.NAISO = 'a';
        actual.NAHOE = 'a';
        actual.NAUEL = Date.newInstance(2000,1,1);
        actual.TEXT1 = 'a';
        actual.TEXT2 = 'a';
        actual.TEXT3 = 'a';
        actual.EXDAR = 'a';
        actual.EXDAA = 'a';
        actual.EXDAB = 'a';
        actual.EXDTA = 'a';
        actual.EXDT2 = 'a';
        actual.EXDTB = 'a';
        actual.EXDPA = 'a';
        actual.EXPRE = 'a';
        actual.EXDT5 = 'a';
        actual.LADEL = 'a';
        actual.AUSFU = 'a';
        actual.EIOKW = 'a';
        actual.AUSOK = 'a';
        actual.LAZL1 = 'a';
        actual.LAZL2 = 'a';
        actual.LAZL3 = 'a';
        actual.LAZL4 = 'a';
        actual.LAZL5 = 'a';
        actual.LAZL6 = 'a';
        actual.AZOLL = 'a';
        actual.AHBAS = 'a';
        actual.REFNR = 'a';
        actual.MABSD = Date.newInstance(2000,1,1);
        actual.BFMAR = 'a';
        actual.CUDCL = 'a';
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.EXNUM);
        system.assertEquals('a', actual.ALAND);
        system.assertEquals('a', actual.EXPVZ);
        system.assertEquals('a', actual.ZOLLA);
        system.assertEquals('a', actual.ZOLLB);
        system.assertEquals('a', actual.ZOLL1);
        system.assertEquals('a', actual.ZOLL2);
        system.assertEquals('a', actual.ZOLL3);
        system.assertEquals('a', actual.ZOLL4);
        system.assertEquals('a', actual.ZOLL5);
        system.assertEquals('a', actual.ZOLL6);
        system.assertEquals('a', actual.KZGBE);
        system.assertEquals('a', actual.KZABE);
        system.assertEquals('a', actual.STGBE);
        system.assertEquals('a', actual.STABE);
        system.assertEquals('a', actual.CONTA);
        system.assertEquals('a', actual.GRWCU);
        system.assertEquals('a', actual.IEVER);
        system.assertEquals('a', actual.SEGAL);
        system.assertEquals('a', actual.WZOCU);
        system.assertEquals('a', actual.PRONU);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRODA);
        system.assertEquals('a', actual.VORPA);
        system.assertEquals(Date.newInstance(2000,1,1), actual.VORDA);
        system.assertEquals('a', actual.VORNU);
        system.assertEquals('a', actual.BEHOE);
        system.assertEquals('a', actual.KENNU);
        system.assertEquals('a', actual.VOISO);
        system.assertEquals('a', actual.PREFPACOD);
        system.assertEquals('a', actual.PREFA);
        system.assertEquals('a', actual.PREFN);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PREDU);
        system.assertEquals('a', actual.PRISO);
        system.assertEquals('a', actual.PRHOE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRUEL);
        system.assertEquals('a', actual.NACAR);
        system.assertEquals('a', actual.NACNU);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NACDA);
        system.assertEquals('a', actual.NAISO);
        system.assertEquals('a', actual.NAHOE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NAUEL);
        system.assertEquals('a', actual.TEXT1);
        system.assertEquals('a', actual.TEXT2);
        system.assertEquals('a', actual.TEXT3);
        system.assertEquals('a', actual.EXDAR);
        system.assertEquals('a', actual.EXDAA);
        system.assertEquals('a', actual.EXDAB);
        system.assertEquals('a', actual.EXDTA);
        system.assertEquals('a', actual.EXDT2);
        system.assertEquals('a', actual.EXDTB);
        system.assertEquals('a', actual.EXDPA);
        system.assertEquals('a', actual.EXPRE);
        system.assertEquals('a', actual.EXDT5);
        system.assertEquals('a', actual.LADEL);
        system.assertEquals('a', actual.AUSFU);
        system.assertEquals('a', actual.EIOKW);
        system.assertEquals('a', actual.AUSOK);
        system.assertEquals('a', actual.LAZL1);
        system.assertEquals('a', actual.LAZL2);
        system.assertEquals('a', actual.LAZL3);
        system.assertEquals('a', actual.LAZL4);
        system.assertEquals('a', actual.LAZL5);
        system.assertEquals('a', actual.LAZL6);
        system.assertEquals('a', actual.AZOLL);
        system.assertEquals('a', actual.AHBAS);
        system.assertEquals('a', actual.REFNR);
        system.assertEquals(Date.newInstance(2000,1,1), actual.MABSD);
        system.assertEquals('a', actual.BFMAR);
        system.assertEquals('a', actual.CUDCL);

        sapDelivery.ET_FOREIGN_TRADE_HEADER actual0 = new sapDelivery.ET_FOREIGN_TRADE_HEADER();
    }
    @istest
    private static void TestET_FOREIGN_TRADE_ITEM() {
        sapDelivery.ET_FOREIGN_TRADE_ITEM actual = new sapDelivery.ET_FOREIGN_TRADE_ITEM('a','a','a','a','a','a','a','a',0,'a','a','a','a','a','a','a',0,'a','a','a','a','a','a','a','a','a',Date.newInstance(2000,1,1),'a','a',Date.newInstance(2000,1,1),'a','a');

        actual.VOISO = 'a';
        actual.PREFA = 'a';
        actual.PREFN = 'a';
        actual.PREDU = Date.newInstance(2000,1,1);
        actual.PRISO = 'a';
        actual.PRHOE = 'a';
        actual.PRUEL = Date.newInstance(2000,1,1);
        actual.NACAR = 'a';
        actual.NACNU = 'a';
        actual.NACDA = Date.newInstance(2000,1,1);
        actual.NAISO = 'a';
        actual.NAHOE = 'a';
        actual.NAUEL = Date.newInstance(2000,1,1);
        actual.NACA2 = 'a';
        actual.NACN2 = 'a';
        actual.NACD2 = Date.newInstance(2000,1,1);
        actual.NAIS2 = 'a';
        actual.NAHO2 = 'a';
        actual.NAUE2 = Date.newInstance(2000,1,1);
        actual.NACA3 = 'a';
        actual.NACN3 = 'a';
        actual.NACD3 = Date.newInstance(2000,1,1);
        actual.NAIS3 = 'a';
        actual.NAHO3 = 'a';
        actual.NAUE3 = Date.newInstance(2000,1,1);
        actual.NACA4 = 'a';
        actual.NACN4 = 'a';
        actual.NACD4 = Date.newInstance(2000,1,1);
        actual.NAIS4 = 'a';
        actual.NAHO4 = 'a';
        actual.NAUE4 = Date.newInstance(2000,1,1);
        actual.NACA5 = 'a';
        actual.NACN5 = 'a';
        actual.NACD5 = Date.newInstance(2000,1,1);
        actual.NAIS5 = 'a';
        actual.NAHO5 = 'a';
        actual.NAUE5 = Date.newInstance(2000,1,1);
        actual.EXDAR = 'a';
        actual.EXDAA = 'a';
        actual.EXDAB = 'a';
        actual.EXDTA = 'a';
        actual.EXDT2 = 'a';
        actual.EXDTB = 'a';
        actual.EXDPA = 'a';
        actual.EXPRE = 'a';
        actual.EXDT5 = 'a';
        actual.AUSOK = 'a';
        actual.COIMP = 'a';
        actual.HERSE = 'a';
        actual.COBLD = 'a';
        actual.EIOKW = 'a';
        actual.EIOKA = 'a';
        actual.GBNUM = 'a';
        actual.RGNNR = 'a';
        actual.PRENC = 'a';
        actual.PRENO = 'a';
        actual.PREND = Date.newInstance(2000,1,1);
        actual.KTNUM = 'a';
        actual.PLNUM = 'a';
        actual.POSAR = 'a';
        actual.PSTYV = 'a';
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.EXNUM);
        system.assertEquals('a', actual.EXPOS);
        system.assertEquals('a', actual.STAWN);
        system.assertEquals('a', actual.EXPRF);
        system.assertEquals('a', actual.EXART);
        system.assertEquals('a', actual.HERKL);
        system.assertEquals('a', actual.HERKR);
        system.assertEquals(0, actual.GRWRT);
        system.assertEquals('a', actual.PREFPACOD);
        system.assertEquals('a', actual.SEGAL);
        system.assertEquals('a', actual.MOWNR);
        system.assertEquals('a', actual.MOGRU);
        system.assertEquals('a', actual.GPNUM);
        system.assertEquals('a', actual.CASNR);
        system.assertEquals('a', actual.STEUC);
        system.assertEquals(0, actual.WZOLL);
        system.assertEquals('a', actual.VERLD);
        system.assertEquals('a', actual.HANLD);
        system.assertEquals('a', actual.TEXT1);
        system.assertEquals('a', actual.TEXT2);
        system.assertEquals('a', actual.TEXT3);
        system.assertEquals('a', actual.COKON);
        system.assertEquals('a', actual.COPHA);
        system.assertEquals('a', actual.COADI);
        system.assertEquals('a', actual.PRONU);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRODA);
        system.assertEquals('a', actual.VORPA);
        system.assertEquals('a', actual.VORNU);
        system.assertEquals(Date.newInstance(2000,1,1), actual.VORDA);
        system.assertEquals('a', actual.BEHOE);
        system.assertEquals('a', actual.KENNU);
        system.assertEquals('a', actual.VOISO);
        system.assertEquals('a', actual.PREFA);
        system.assertEquals('a', actual.PREFN);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PREDU);
        system.assertEquals('a', actual.PRISO);
        system.assertEquals('a', actual.PRHOE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PRUEL);
        system.assertEquals('a', actual.NACAR);
        system.assertEquals('a', actual.NACNU);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NACDA);
        system.assertEquals('a', actual.NAISO);
        system.assertEquals('a', actual.NAHOE);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NAUEL);
        system.assertEquals('a', actual.NACA2);
        system.assertEquals('a', actual.NACN2);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NACD2);
        system.assertEquals('a', actual.NAIS2);
        system.assertEquals('a', actual.NAHO2);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NAUE2);
        system.assertEquals('a', actual.NACA3);
        system.assertEquals('a', actual.NACN3);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NACD3);
        system.assertEquals('a', actual.NAIS3);
        system.assertEquals('a', actual.NAHO3);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NAUE3);
        system.assertEquals('a', actual.NACA4);
        system.assertEquals('a', actual.NACN4);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NACD4);
        system.assertEquals('a', actual.NAIS4);
        system.assertEquals('a', actual.NAHO4);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NAUE4);
        system.assertEquals('a', actual.NACA5);
        system.assertEquals('a', actual.NACN5);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NACD5);
        system.assertEquals('a', actual.NAIS5);
        system.assertEquals('a', actual.NAHO5);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NAUE5);
        system.assertEquals('a', actual.EXDAR);
        system.assertEquals('a', actual.EXDAA);
        system.assertEquals('a', actual.EXDAB);
        system.assertEquals('a', actual.EXDTA);
        system.assertEquals('a', actual.EXDT2);
        system.assertEquals('a', actual.EXDTB);
        system.assertEquals('a', actual.EXDPA);
        system.assertEquals('a', actual.EXPRE);
        system.assertEquals('a', actual.EXDT5);
        system.assertEquals('a', actual.AUSOK);
        system.assertEquals('a', actual.COIMP);
        system.assertEquals('a', actual.HERSE);
        system.assertEquals('a', actual.COBLD);
        system.assertEquals('a', actual.EIOKW);
        system.assertEquals('a', actual.EIOKA);
        system.assertEquals('a', actual.GBNUM);
        system.assertEquals('a', actual.RGNNR);
        system.assertEquals('a', actual.PRENC);
        system.assertEquals('a', actual.PRENO);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PREND);
        system.assertEquals('a', actual.KTNUM);
        system.assertEquals('a', actual.PLNUM);
        system.assertEquals('a', actual.POSAR);
        system.assertEquals('a', actual.PSTYV);

        sapDelivery.ET_FOREIGN_TRADE_ITEM actual0 = new sapDelivery.ET_FOREIGN_TRADE_ITEM();
    }
    @istest
    private static void TestET_HU_HEADER() {
        sapDelivery.ET_HU_HEADER actual = new sapDelivery.ET_HU_HEADER('a','a','a','a','a','a',0,0,0,0,'a',0,0,0,0,'a',0,'a',Date.newInstance(2000,1,1),'a','a',Date.newInstance(2000,1,1),'a','a','a','a','a','a','a','a',0,0);

        actual.HOEHE = 0;
        actual.MEABM = 'a';
        actual.ERLKZ = 'a';
        actual.GEWTO = 0;
        actual.VOLTO = 0;
        actual.MEINS = 'a';
        actual.VOLEH_MAX = 'a';
        actual.GEWEI_MAX = 'a';
        actual.VBELN_GEN = 'a';
        actual.POSNR_GEN = 'a';
        actual.INHALT = 'a';
        actual.VHART = 'a';
        actual.KAPPL = 'a';
        actual.KALSM = 'a';
        actual.KSCHL = 'a';
        actual.MAGRV = 'a';
        actual.WERKS = 'a';
        actual.PSTYV = 'a';
        actual.VKORG = 'a';
        actual.VTWEG = 'a';
        actual.LADLG = 0;
        actual.LADEH = 'a';
        actual.FARZT = 0;
        actual.FAREH = 'a';
        actual.ENTFE = 0;
        actual.EHENT = 'a';
        actual.LGORT = 'a';
        actual.GEWFX = 'a';
        actual.VELTP = 'a';
        actual.EXIDV2 = 'a';
        actual.LANDT = 'a';
        actual.LANDF = 'a';
        actual.NAMEF = 'a';
        actual.NAMBE = 'a';
        actual.VHILM_KU = 'a';
        actual.VPOBJ = 'a';
        actual.VPOBJKEY = 'a';
        actual.HANDLE = 'a';
        actual.WMSTA = 'a';
        actual.LGNUM = 'a';
        actual.SAPRL = 'a';
        actual.KZGVH = 'a';
        actual.ADGE_DG = 'a';
        actual.ADGE_DGPR = 'a';
        actual.UEVEL = 'a';
        actual.PACKVORSCHR = 'a';
        actual.PACKVORSCHR_ST = 'a';
        actual.LABELTYP = 'a';
        actual.ZUL_AUFL = 0;
        actual.STATUS = 'a';
        actual.HU_LGORT = 'a';
        actual.HU_SYSTEM = 'a';
        actual.SPE_HDALL = 'a';
        actual.DISP_STATUS_DEC_WMS = 'a';
        actual.SPE_DELDEC = 'a';
        actual.SPE_IDART_01 = 'a';
        actual.SPE_IDENT_01 = 'a';
        actual.SPE_IDART_02 = 'a';
        actual.SPE_IDENT_02 = 'a';
        actual.SPE_IDART_03 = 'a';
        actual.SPE_IDENT_03 = 'a';
        actual.SPE_IDART_04 = 'a';
        actual.SPE_IDENT_04 = 'a';
        system.assertEquals('a', actual.MANDT);
        system.assertEquals('a', actual.VENUM);
        system.assertEquals('a', actual.EXIDV);
        system.assertEquals('a', actual.EXIDA);
        system.assertEquals('a', actual.VSTEL);
        system.assertEquals('a', actual.LSTEL);
        system.assertEquals(0, actual.BRGEW);
        system.assertEquals(0, actual.NTGEW);
        system.assertEquals(0, actual.MAGEW);
        system.assertEquals(0, actual.TARAG);
        system.assertEquals('a', actual.GEWEI);
        system.assertEquals(0, actual.BTVOL);
        system.assertEquals(0, actual.NTVOL);
        system.assertEquals(0, actual.MAVOL);
        system.assertEquals(0, actual.TAVOL);
        system.assertEquals('a', actual.VOLEH);
        system.assertEquals(0, actual.ANZGL);
        system.assertEquals('a', actual.ERNAM);
        system.assertEquals(Date.newInstance(2000,1,1), actual.ERDAT);
        system.assertEquals('a', actual.ERUHR);
        system.assertEquals('a', actual.AENAM);
        system.assertEquals(Date.newInstance(2000,1,1), actual.AEDAT);
        system.assertEquals('a', actual.AEZET);
        system.assertEquals('a', actual.SORTL);
        system.assertEquals('a', actual.VEGR1);
        system.assertEquals('a', actual.VEGR2);
        system.assertEquals('a', actual.VEGR3);
        system.assertEquals('a', actual.VEGR4);
        system.assertEquals('a', actual.VEGR5);
        system.assertEquals('a', actual.VHILM);
        system.assertEquals(0, actual.LAENG);
        system.assertEquals(0, actual.BREIT);
        system.assertEquals(0, actual.HOEHE);
        system.assertEquals('a', actual.MEABM);
        system.assertEquals('a', actual.ERLKZ);
        system.assertEquals(0, actual.GEWTO);
        system.assertEquals(0, actual.VOLTO);
        system.assertEquals('a', actual.MEINS);
        system.assertEquals('a', actual.VOLEH_MAX);
        system.assertEquals('a', actual.GEWEI_MAX);
        system.assertEquals('a', actual.VBELN_GEN);
        system.assertEquals('a', actual.POSNR_GEN);
        system.assertEquals('a', actual.INHALT);
        system.assertEquals('a', actual.VHART);
        system.assertEquals('a', actual.KAPPL);
        system.assertEquals('a', actual.KALSM);
        system.assertEquals('a', actual.KSCHL);
        system.assertEquals('a', actual.MAGRV);
        system.assertEquals('a', actual.WERKS);
        system.assertEquals('a', actual.PSTYV);
        system.assertEquals('a', actual.VKORG);
        system.assertEquals('a', actual.VTWEG);
        system.assertEquals(0, actual.LADLG);
        system.assertEquals('a', actual.LADEH);
        system.assertEquals(0, actual.FARZT);
        system.assertEquals('a', actual.FAREH);
        system.assertEquals(0, actual.ENTFE);
        system.assertEquals('a', actual.EHENT);
        system.assertEquals('a', actual.LGORT);
        system.assertEquals('a', actual.GEWFX);
        system.assertEquals('a', actual.VELTP);
        system.assertEquals('a', actual.EXIDV2);
        system.assertEquals('a', actual.LANDT);
        system.assertEquals('a', actual.LANDF);
        system.assertEquals('a', actual.NAMEF);
        system.assertEquals('a', actual.NAMBE);
        system.assertEquals('a', actual.VHILM_KU);
        system.assertEquals('a', actual.VPOBJ);
        system.assertEquals('a', actual.VPOBJKEY);
        system.assertEquals('a', actual.HANDLE);
        system.assertEquals('a', actual.WMSTA);
        system.assertEquals('a', actual.LGNUM);
        system.assertEquals('a', actual.SAPRL);
        system.assertEquals('a', actual.KZGVH);
        system.assertEquals('a', actual.ADGE_DG);
        system.assertEquals('a', actual.ADGE_DGPR);
        system.assertEquals('a', actual.UEVEL);
        system.assertEquals('a', actual.PACKVORSCHR);
        system.assertEquals('a', actual.PACKVORSCHR_ST);
        system.assertEquals('a', actual.LABELTYP);
        system.assertEquals(0, actual.ZUL_AUFL);
        system.assertEquals('a', actual.STATUS);
        system.assertEquals('a', actual.HU_LGORT);
        system.assertEquals('a', actual.HU_SYSTEM);
        system.assertEquals('a', actual.SPE_HDALL);
        system.assertEquals('a', actual.DISP_STATUS_DEC_WMS);
        system.assertEquals('a', actual.SPE_DELDEC);
        system.assertEquals('a', actual.SPE_IDART_01);
        system.assertEquals('a', actual.SPE_IDENT_01);
        system.assertEquals('a', actual.SPE_IDART_02);
        system.assertEquals('a', actual.SPE_IDENT_02);
        system.assertEquals('a', actual.SPE_IDART_03);
        system.assertEquals('a', actual.SPE_IDENT_03);
        system.assertEquals('a', actual.SPE_IDART_04);
        system.assertEquals('a', actual.SPE_IDENT_04);

        sapDelivery.ET_HU_HEADER actual0 = new sapDelivery.ET_HU_HEADER();
    }
    @istest
    private static void TestET_ITEM_SERIAL_NO() {
        sapDelivery.ET_ITEM_SERIAL_NO actual = new sapDelivery.ET_ITEM_SERIAL_NO('a','a','a','a');

        system.assertEquals('a', actual.DELIV_NUMB);
        system.assertEquals('a', actual.ITM_NUMBER);
        system.assertEquals('a', actual.SERIALNO);
        system.assertEquals('a', actual.UII);

        sapDelivery.ET_ITEM_SERIAL_NO actual0 = new sapDelivery.ET_ITEM_SERIAL_NO();
    }
    @istest
    private static void TestEXTENSIONIN() {
        sapDelivery.EXTENSIONIN actual = new sapDelivery.EXTENSIONIN('a','a','a','a','a');

        system.assertEquals('a', actual.STRUCTURE);
        system.assertEquals('a', actual.VALUEPART1);
        system.assertEquals('a', actual.VALUEPART2);
        system.assertEquals('a', actual.VALUEPART3);
        system.assertEquals('a', actual.VALUEPART4);

        sapDelivery.EXTENSIONIN actual0 = new sapDelivery.EXTENSIONIN();
    }
    @istest
    private static void TestEXTENSIONOUT() {
        sapDelivery.EXTENSIONOUT actual = new sapDelivery.EXTENSIONOUT('a','a','a','a','a');

        system.assertEquals('a', actual.STRUCTURE);
        system.assertEquals('a', actual.VALUEPART1);
        system.assertEquals('a', actual.VALUEPART2);
        system.assertEquals('a', actual.VALUEPART3);
        system.assertEquals('a', actual.VALUEPART4);

        sapDelivery.EXTENSIONOUT actual0 = new sapDelivery.EXTENSIONOUT();
    }
    @istest
    private static void TestIT_ABLAD() {
        sapDelivery.IT_ABLAD actual = new sapDelivery.IT_ABLAD('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.UNLOAD_PT_LOW);
        system.assertEquals('a', actual.UNLOAD_PT_HIGH);

        sapDelivery.IT_ABLAD actual0 = new sapDelivery.IT_ABLAD();
    }
    @istest
    private static void TestIT_ABTNR() {
        sapDelivery.IT_ABTNR actual = new sapDelivery.IT_ABTNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DEPARTMENT_NO_LOW);
        system.assertEquals('a', actual.DEPARTMENT_NO_HIGH);

        sapDelivery.IT_ABTNR actual0 = new sapDelivery.IT_ABTNR();
    }
    @istest
    private static void TestIT_AUFNR() {
        sapDelivery.IT_AUFNR actual = new sapDelivery.IT_AUFNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.ORDERID_LOW);
        system.assertEquals('a', actual.ORDERID_HIGH);

        sapDelivery.IT_AUFNR actual0 = new sapDelivery.IT_AUFNR();
    }
    @istest
    private static void TestIT_AULWE() {
        sapDelivery.IT_AULWE actual = new sapDelivery.IT_AULWE('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.ROUTESCHED_LOW);
        system.assertEquals('a', actual.ROUTESCHED_HIGH);

        sapDelivery.IT_AULWE actual0 = new sapDelivery.IT_AULWE();
    }
    @istest
    private static void TestIT_BESTK() {
        sapDelivery.IT_BESTK actual = new sapDelivery.IT_BESTK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DELIV_CHECKED_LOW);
        system.assertEquals('a', actual.DELIV_CHECKED_HIGH);

        sapDelivery.IT_BESTK actual0 = new sapDelivery.IT_BESTK();
    }
    @istest
    private static void TestIT_BLDAT() {
        sapDelivery.IT_BLDAT actual = new sapDelivery.IT_BLDAT('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DOC_DATE_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DOC_DATE_HIGH);

        sapDelivery.IT_BLDAT actual0 = new sapDelivery.IT_BLDAT();
    }
    @istest
    private static void TestIT_CHARG() {
        sapDelivery.IT_CHARG actual = new sapDelivery.IT_CHARG('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.BATCH_LOW);
        system.assertEquals('a', actual.BATCH_HIGH);

        sapDelivery.IT_CHARG actual0 = new sapDelivery.IT_CHARG();
    }
    @istest
    private static void TestIT_CMFRE() {
        sapDelivery.IT_CMFRE actual = new sapDelivery.IT_CMFRE('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REL_DATE_CREDIT_MAN_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.REL_DATE_CREDIT_MAN_HIGH);

        sapDelivery.IT_CMFRE actual0 = new sapDelivery.IT_CMFRE();
    }
    @istest
    private static void TestIT_CMGST() {
        sapDelivery.IT_CMGST actual = new sapDelivery.IT_CMGST('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.STATUS_CREDIT_MAN_LOW);
        system.assertEquals('a', actual.STATUS_CREDIT_MAN_HIGH);

        sapDelivery.IT_CMGST actual0 = new sapDelivery.IT_CMGST();
    }
    @istest
    private static void TestIT_CMNGV() {
        sapDelivery.IT_CMNGV actual = new sapDelivery.IT_CMNGV('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NEXT_DATE_CREDIT_MAN_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NEXT_DATE_CREDIT_MAN_HIGH);

        sapDelivery.IT_CMNGV actual0 = new sapDelivery.IT_CMNGV();
    }
    @istest
    private static void TestIT_CTLPC() {
        sapDelivery.IT_CTLPC actual = new sapDelivery.IT_CTLPC('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.RISK_CATEG_LOW);
        system.assertEquals('a', actual.RISK_CATEG_HIGH);

        sapDelivery.IT_CTLPC actual0 = new sapDelivery.IT_CTLPC();
    }
    @istest
    private static void TestIT_EAN11() {
        sapDelivery.IT_EAN11 actual = new sapDelivery.IT_EAN11('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.EAN_UPC_LOW);
        system.assertEquals('a', actual.EAN_UPC_HIGH);

        sapDelivery.IT_EAN11 actual0 = new sapDelivery.IT_EAN11();
    }
    @istest
    private static void TestIT_ERDAT() {
        sapDelivery.IT_ERDAT actual = new sapDelivery.IT_ERDAT('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CR_ON_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.CR_ON_HIGH);

        sapDelivery.IT_ERDAT actual0 = new sapDelivery.IT_ERDAT();
    }
    @istest
    private static void TestIT_ERNAM() {
        sapDelivery.IT_ERNAM actual = new sapDelivery.IT_ERNAM('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.CREATED_BY_LOW);
        system.assertEquals('a', actual.CREATED_BY_HIGH);

        sapDelivery.IT_ERNAM actual0 = new sapDelivery.IT_ERNAM();
    }
    @istest
    private static void TestIT_FKSTK() {
        sapDelivery.IT_FKSTK actual = new sapDelivery.IT_FKSTK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.BILLSTATUS_LOW);
        system.assertEquals('a', actual.BILLSTATUS_HIGH);

        sapDelivery.IT_FKSTK actual0 = new sapDelivery.IT_FKSTK();
    }
    @istest
    private static void TestIT_GBSTK() {
        sapDelivery.IT_GBSTK actual = new sapDelivery.IT_GBSTK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.PRC_STAT_H_LOW);
        system.assertEquals('a', actual.PRC_STAT_H_HIGH);

        sapDelivery.IT_GBSTK actual0 = new sapDelivery.IT_GBSTK();
    }
    @istest
    private static void TestIT_GRUPP() {
        sapDelivery.IT_GRUPP actual = new sapDelivery.IT_GRUPP('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.CRED_GROUP_LOW);
        system.assertEquals('a', actual.CRED_GROUP_HIGH);

        sapDelivery.IT_GRUPP actual0 = new sapDelivery.IT_GRUPP();
    }
    @istest
    private static void TestIT_KDMAT() {
        sapDelivery.IT_KDMAT actual = new sapDelivery.IT_KDMAT('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.CUST_MAT_LOW);
        system.assertEquals('a', actual.CUST_MAT_HIGH);

        sapDelivery.IT_KDMAT actual0 = new sapDelivery.IT_KDMAT();
    }
    @istest
    private static void TestIT_KKBER() {
        sapDelivery.IT_KKBER actual = new sapDelivery.IT_KKBER('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.C_CTR_AREA_LOW);
        system.assertEquals('a', actual.C_CTR_AREA_HIGH);

        sapDelivery.IT_KKBER actual0 = new sapDelivery.IT_KKBER();
    }
    @istest
    private static void TestIT_KNKLI() {
        sapDelivery.IT_KNKLI actual = new sapDelivery.IT_KNKLI('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.CRED_ACCNT_LOW);
        system.assertEquals('a', actual.CRED_ACCNT_HIGH);

        sapDelivery.IT_KNKLI actual0 = new sapDelivery.IT_KNKLI();
    }
    @istest
    private static void TestIT_KODAT() {
        sapDelivery.IT_KODAT actual = new sapDelivery.IT_KODAT('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PICKING_DATE_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.PICKING_DATE_HIGH);

        sapDelivery.IT_KODAT actual0 = new sapDelivery.IT_KODAT();
    }
    @istest
    private static void TestIT_KOQUK() {
        sapDelivery.IT_KOQUK actual = new sapDelivery.IT_KOQUK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.ACK_STATUS_PICKING_LOW);
        system.assertEquals('a', actual.ACK_STATUS_PICKING_HIGH);

        sapDelivery.IT_KOQUK actual0 = new sapDelivery.IT_KOQUK();
    }
    @istest
    private static void TestIT_KOSTK() {
        sapDelivery.IT_KOSTK actual = new sapDelivery.IT_KOSTK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.OVERALLPIC_LOW);
        system.assertEquals('a', actual.OVERALLPIC_HIGH);

        sapDelivery.IT_KOSTK actual0 = new sapDelivery.IT_KOSTK();
    }
    @istest
    private static void TestIT_KUNN2() {
        sapDelivery.IT_KUNN2 actual = new sapDelivery.IT_KUNN2('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.CUSTOMER_LOW);
        system.assertEquals('a', actual.CUSTOMER_HIGH);

        sapDelivery.IT_KUNN2 actual0 = new sapDelivery.IT_KUNN2();
    }
    @istest
    private static void TestIT_KUNNR() {
        sapDelivery.IT_KUNNR actual = new sapDelivery.IT_KUNNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.CUSTOMER_VENDOR_LOW);
        system.assertEquals('a', actual.CUSTOMER_VENDOR_HIGH);

        sapDelivery.IT_KUNNR actual0 = new sapDelivery.IT_KUNNR();
    }
    @istest
    private static void TestIT_KUNWE() {
        sapDelivery.IT_KUNWE actual = new sapDelivery.IT_KUNWE('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SHIP_TO_LOW);
        system.assertEquals('a', actual.SHIP_TO_HIGH);

        sapDelivery.IT_KUNWE actual0 = new sapDelivery.IT_KUNWE();
    }
    @istest
    private static void TestIT_LDDAT() {
        sapDelivery.IT_LDDAT actual = new sapDelivery.IT_LDDAT('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LOAD_DATE_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.LOAD_DATE_HIGH);

        sapDelivery.IT_LDDAT actual0 = new sapDelivery.IT_LDDAT();
    }
    @istest
    private static void TestIT_LFART() {
        sapDelivery.IT_LFART actual = new sapDelivery.IT_LFART('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DLV_TYPE_LOW);
        system.assertEquals('a', actual.DLV_TYPE_HIGH);

        sapDelivery.IT_LFART actual0 = new sapDelivery.IT_LFART();
    }
    @istest
    private static void TestIT_LFDAT() {
        sapDelivery.IT_LFDAT actual = new sapDelivery.IT_LFDAT('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DELIV_DATE_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.DELIV_DATE_HIGH);

        sapDelivery.IT_LFDAT actual0 = new sapDelivery.IT_LFDAT();
    }
    @istest
    private static void TestIT_LGNUM() {
        sapDelivery.IT_LGNUM actual = new sapDelivery.IT_LGNUM('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.WHSENUMBER_LOW);
        system.assertEquals('a', actual.WHSENUMBER_HIGH);

        sapDelivery.IT_LGNUM actual0 = new sapDelivery.IT_LGNUM();
    }
    @istest
    private static void TestIT_LGORT() {
        sapDelivery.IT_LGORT actual = new sapDelivery.IT_LGORT('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.STGE_LOC_LOW);
        system.assertEquals('a', actual.STGE_LOC_HIGH);

        sapDelivery.IT_LGORT actual0 = new sapDelivery.IT_LGORT();
    }
    @istest
    private static void TestIT_LGTOR() {
        sapDelivery.IT_LGTOR actual = new sapDelivery.IT_LGTOR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DOOR_LOW);
        system.assertEquals('a', actual.DOOR_HIGH);

        sapDelivery.IT_LGTOR actual0 = new sapDelivery.IT_LGTOR();
    }
    @istest
    private static void TestIT_LIFEX() {
        sapDelivery.IT_LIFEX actual = new sapDelivery.IT_LIFEX('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.EXTDELV_NO_LOW);
        system.assertEquals('a', actual.EXTDELV_NO_HIGH);

        sapDelivery.IT_LIFEX actual0 = new sapDelivery.IT_LIFEX();
    }
    @istest
    private static void TestIT_LIFSK() {
        sapDelivery.IT_LIFSK actual = new sapDelivery.IT_LIFSK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DLV_BLOCK_LOW);
        system.assertEquals('a', actual.DLV_BLOCK_HIGH);

        sapDelivery.IT_LIFSK actual0 = new sapDelivery.IT_LIFSK();
    }
    @istest
    private static void TestIT_LPRIO() {
        sapDelivery.IT_LPRIO actual = new sapDelivery.IT_LPRIO('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DLV_PRIO_LOW);
        system.assertEquals('a', actual.DLV_PRIO_HIGH);

        sapDelivery.IT_LPRIO actual0 = new sapDelivery.IT_LPRIO();
    }
    @istest
    private static void TestIT_LSTEL() {
        sapDelivery.IT_LSTEL actual = new sapDelivery.IT_LSTEL('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.LOADING_PT_LOW);
        system.assertEquals('a', actual.LOADING_PT_HIGH);

        sapDelivery.IT_LSTEL actual0 = new sapDelivery.IT_LSTEL();
    }
    @istest
    private static void TestIT_LVSTK() {
        sapDelivery.IT_LVSTK actual = new sapDelivery.IT_LVSTK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.STATUS_WAREHOUSE_MAN_LOW);
        system.assertEquals('a', actual.STATUS_WAREHOUSE_MAN_HIGH);

        sapDelivery.IT_LVSTK actual0 = new sapDelivery.IT_LVSTK();
    }
    @istest
    private static void TestIT_MATKL() {
        sapDelivery.IT_MATKL actual = new sapDelivery.IT_MATKL('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.MATL_GROUP_LOW);
        system.assertEquals('a', actual.MATL_GROUP_HIGH);

        sapDelivery.IT_MATKL actual0 = new sapDelivery.IT_MATKL();
    }
    @istest
    private static void TestIT_MATNR() {
        sapDelivery.IT_MATNR actual = new sapDelivery.IT_MATNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.MATERIAL_LOW);
        system.assertEquals('a', actual.MATERIAL_HIGH);

        sapDelivery.IT_MATNR actual0 = new sapDelivery.IT_MATNR();
    }
    @istest
    private static void TestIT_PARNR() {
        sapDelivery.IT_PARNR actual = new sapDelivery.IT_PARNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.CONTACT_LOW);
        system.assertEquals('a', actual.CONTACT_HIGH);

        sapDelivery.IT_PARNR actual0 = new sapDelivery.IT_PARNR();
    }
    @istest
    private static void TestIT_PARVW() {
        sapDelivery.IT_PARVW actual = new sapDelivery.IT_PARVW('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.PARTN_ROLE_LOW);
        system.assertEquals('a', actual.PARTN_ROLE_HIGH);

        sapDelivery.IT_PARVW actual0 = new sapDelivery.IT_PARVW();
    }
    @istest
    private static void TestIT_PERNR() {
        sapDelivery.IT_PERNR actual = new sapDelivery.IT_PERNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.PERSON_NO_LOW);
        system.assertEquals('a', actual.PERSON_NO_HIGH);

        sapDelivery.IT_PERNR actual0 = new sapDelivery.IT_PERNR();
    }
    @istest
    private static void TestIT_PKSTK() {
        sapDelivery.IT_PKSTK actual = new sapDelivery.IT_PKSTK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.OVRALL_STATUS_PACKING_LOW);
        system.assertEquals('a', actual.OVRALL_STATUS_PACKING_HIGH);

        sapDelivery.IT_PKSTK actual0 = new sapDelivery.IT_PKSTK();
    }
    @istest
    private static void TestIT_PRVBE() {
        sapDelivery.IT_PRVBE actual = new sapDelivery.IT_PRVBE('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SUPPLYAREA_LOW);
        system.assertEquals('a', actual.SUPPLYAREA_HIGH);

        sapDelivery.IT_PRVBE actual0 = new sapDelivery.IT_PRVBE();
    }
    @istest
    private static void TestIT_ROUTE() {
        sapDelivery.IT_ROUTE actual = new sapDelivery.IT_ROUTE('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.ROUTE_LOW);
        system.assertEquals('a', actual.ROUTE_HIGH);

        sapDelivery.IT_ROUTE actual0 = new sapDelivery.IT_ROUTE();
    }
    @istest
    private static void TestIT_SAMMG() {
        sapDelivery.IT_SAMMG actual = new sapDelivery.IT_SAMMG('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.GROUP_NO_COLL_PROC_LOW);
        system.assertEquals('a', actual.GROUP_NO_COLL_PROC_HIGH);

        sapDelivery.IT_SAMMG actual0 = new sapDelivery.IT_SAMMG();
    }
    @istest
    private static void TestIT_SBGRP() {
        sapDelivery.IT_SBGRP actual = new sapDelivery.IT_SBGRP('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.REPR_GROUP_LOW);
        system.assertEquals('a', actual.REPR_GROUP_HIGH);

        sapDelivery.IT_SBGRP actual0 = new sapDelivery.IT_SBGRP();
    }
    @istest
    private static void TestIT_SPART() {
        sapDelivery.IT_SPART actual = new sapDelivery.IT_SPART('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DIVISION_LOW);
        system.assertEquals('a', actual.DIVISION_HIGH);

        sapDelivery.IT_SPART actual0 = new sapDelivery.IT_SPART();
    }
    @istest
    private static void TestIT_SPDNR() {
        sapDelivery.IT_SPDNR actual = new sapDelivery.IT_SPDNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.FWDAGENT_LOW);
        system.assertEquals('a', actual.FWDAGENT_HIGH);

        sapDelivery.IT_SPDNR actual0 = new sapDelivery.IT_SPDNR();
    }
    @istest
    private static void TestIT_TDDAT() {
        sapDelivery.IT_TDDAT actual = new sapDelivery.IT_TDDAT('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TP_DATE_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.TP_DATE_HIGH);

        sapDelivery.IT_TDDAT actual0 = new sapDelivery.IT_TDDAT();
    }
    @istest
    private static void TestIT_TKNUM() {
        sapDelivery.IT_TKNUM actual = new sapDelivery.IT_TKNUM('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SHIPMENTNUM_LOW);
        system.assertEquals('a', actual.SHIPMENTNUM_HIGH);

        sapDelivery.IT_TKNUM actual0 = new sapDelivery.IT_TKNUM();
    }
    @istest
    private static void TestIT_TRAID() {
        sapDelivery.IT_TRAID actual = new sapDelivery.IT_TRAID('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.TRANSP_ID_LOW);
        system.assertEquals('a', actual.TRANSP_ID_HIGH);

        sapDelivery.IT_TRAID actual0 = new sapDelivery.IT_TRAID();
    }
    @istest
    private static void TestIT_TRSTA() {
        sapDelivery.IT_TRSTA actual = new sapDelivery.IT_TRSTA('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.STATUS_TRANSP_DISPO_LOW);
        system.assertEquals('a', actual.STATUS_TRANSP_DISPO_HIGH);

        sapDelivery.IT_TRSTA actual0 = new sapDelivery.IT_TRSTA();
    }
    @istest
    private static void TestIT_VBELN() {
        sapDelivery.IT_VBELN actual = new sapDelivery.IT_VBELN('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DELIV_NUMB_LOW);
        system.assertEquals('a', actual.DELIV_NUMB_HIGH);

        sapDelivery.IT_VBELN actual0 = new sapDelivery.IT_VBELN();
    }
    @istest
    private static void TestIT_VBTYP() {
        sapDelivery.IT_VBTYP actual = new sapDelivery.IT_VBTYP('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SD_DOC_CAT_LOW);
        system.assertEquals('a', actual.SD_DOC_CAT_HIGH);

        sapDelivery.IT_VBTYP actual0 = new sapDelivery.IT_VBTYP();
    }
    @istest
    private static void TestIT_VGBEL() {
        sapDelivery.IT_VGBEL actual = new sapDelivery.IT_VGBEL('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.REF_DOC_LOW);
        system.assertEquals('a', actual.REF_DOC_HIGH);

        sapDelivery.IT_VGBEL actual0 = new sapDelivery.IT_VGBEL();
    }
    @istest
    private static void TestIT_VGSYS() {
        sapDelivery.IT_VGSYS actual = new sapDelivery.IT_VGSYS('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.REF_DOC_LOGSYS_LOW);
        system.assertEquals('a', actual.REF_DOC_LOGSYS_HIGH);

        sapDelivery.IT_VGSYS actual0 = new sapDelivery.IT_VGSYS();
    }
    @istest
    private static void TestIT_VKBUR() {
        sapDelivery.IT_VKBUR actual = new sapDelivery.IT_VKBUR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SALES_OFF_LOW);
        system.assertEquals('a', actual.SALES_OFF_HIGH);

        sapDelivery.IT_VKBUR actual0 = new sapDelivery.IT_VKBUR();
    }
    @istest
    private static void TestIT_VKGRP() {
        sapDelivery.IT_VKGRP actual = new sapDelivery.IT_VKGRP('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SALES_GRP_LOW);
        system.assertEquals('a', actual.SALES_GRP_HIGH);

        sapDelivery.IT_VKGRP actual0 = new sapDelivery.IT_VKGRP();
    }
    @istest
    private static void TestIT_VKORG() {
        sapDelivery.IT_VKORG actual = new sapDelivery.IT_VKORG('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SALESORG_LOW);
        system.assertEquals('a', actual.SALESORG_HIGH);

        sapDelivery.IT_VKORG actual0 = new sapDelivery.IT_VKORG();
    }
    @istest
    private static void TestIT_VSBED() {
        sapDelivery.IT_VSBED actual = new sapDelivery.IT_VSBED('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SHIP_COND_LOW);
        system.assertEquals('a', actual.SHIP_COND_HIGH);

        sapDelivery.IT_VSBED actual0 = new sapDelivery.IT_VSBED();
    }
    @istest
    private static void TestIT_VSTEL() {
        sapDelivery.IT_VSTEL actual = new sapDelivery.IT_VSTEL('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.SHIP_POINT_LOW);
        system.assertEquals('a', actual.SHIP_POINT_HIGH);

        sapDelivery.IT_VSTEL actual0 = new sapDelivery.IT_VSTEL();
    }
    @istest
    private static void TestIT_VTWEG() {
        sapDelivery.IT_VTWEG actual = new sapDelivery.IT_VTWEG('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.DISTR_CHAN_LOW);
        system.assertEquals('a', actual.DISTR_CHAN_HIGH);

        sapDelivery.IT_VTWEG actual0 = new sapDelivery.IT_VTWEG();
    }
    @istest
    private static void TestIT_WADAT() {
        sapDelivery.IT_WADAT actual = new sapDelivery.IT_WADAT('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE_HIGH);

        sapDelivery.IT_WADAT actual0 = new sapDelivery.IT_WADAT();
    }
    @istest
    private static void TestIT_WADAT_IST() {
        sapDelivery.IT_WADAT_IST actual = new sapDelivery.IT_WADAT_IST('a','a',Date.newInstance(2000,1,1),Date.newInstance(2000,1,1));

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE_LOW);
        system.assertEquals(Date.newInstance(2000,1,1), actual.GI_DATE_HIGH);

        sapDelivery.IT_WADAT_IST actual0 = new sapDelivery.IT_WADAT_IST();
    }
    @istest
    private static void TestIT_WAKTI() {
        sapDelivery.IT_WAKTI actual = new sapDelivery.IT_WAKTI('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.PROMOTION_LOW);
        system.assertEquals('a', actual.PROMOTION_HIGH);

        sapDelivery.IT_WAKTI actual0 = new sapDelivery.IT_WAKTI();
    }
    @istest
    private static void TestIT_WAUHR() {
        sapDelivery.IT_WAUHR actual = new sapDelivery.IT_WAUHR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.GI_TIME_LOW);
        system.assertEquals('a', actual.GI_TIME_HIGH);

        sapDelivery.IT_WAUHR actual0 = new sapDelivery.IT_WAUHR();
    }
    @istest
    private static void TestIT_WBSTK() {
        sapDelivery.IT_WBSTK actual = new sapDelivery.IT_WBSTK('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.OVERALL_STATUS_GOODS_MOVEM_LOW);
        system.assertEquals('a', actual.OVERALL_STATUS_GOODS_MOVE_HIGH);

        sapDelivery.IT_WBSTK actual0 = new sapDelivery.IT_WBSTK();
    }
    @istest
    private static void TestIT_WERKS() {
        sapDelivery.IT_WERKS actual = new sapDelivery.IT_WERKS('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.PLANT_LOW);
        system.assertEquals('a', actual.PLANT_HIGH);

        sapDelivery.IT_WERKS actual0 = new sapDelivery.IT_WERKS();
    }
    @istest
    private static void TestIT_XBLNR() {
        sapDelivery.IT_XBLNR actual = new sapDelivery.IT_XBLNR('a','a','a','a');

        system.assertEquals('a', actual.SIGN);
        system.assertEquals('a', actual.OPTION);
        system.assertEquals('a', actual.REF_DOC_NO_LOW);
        system.assertEquals('a', actual.REF_DOC_NO_HIGH);

        sapDelivery.IT_XBLNR actual0 = new sapDelivery.IT_XBLNR();
    }
    @istest
    private static void TestRETURN_x() {
        sapDelivery.RETURN_x actual = new sapDelivery.RETURN_x('a','a','a','a','a','a','a','a','a','a','a',0,'a','a');

        system.assertEquals('a', actual.TYPE_x);
        system.assertEquals('a', actual.ID);
        system.assertEquals('a', actual.NUMBER_x);
        system.assertEquals('a', actual.MESSAGE);
        system.assertEquals('a', actual.LOG_NO);
        system.assertEquals('a', actual.LOG_MSG_NO);
        system.assertEquals('a', actual.MESSAGE_V1);
        system.assertEquals('a', actual.MESSAGE_V2);
        system.assertEquals('a', actual.MESSAGE_V3);
        system.assertEquals('a', actual.MESSAGE_V4);
        system.assertEquals('a', actual.PARAMETER);
        system.assertEquals(0, actual.ROW);
        system.assertEquals('a', actual.FIELD);
        system.assertEquals('a', actual.SYSTEM_x);

        sapDelivery.RETURN_x actual0 = new sapDelivery.RETURN_x();
    }

    @istest
    private static void testRun() {
        sapDelivery request = testSetup();
        /*sapDelivery response = request.run();
        system.assertEquals('a', response.IS_DLV_DATA_CONTROL.BYPASSING_BUFFER);
        string requestid = request.runAsync(null, null, new Continuation(10));*///Commented by Sourav for Overcast uninstall
    }

    private static sapDelivery testSetup() {
        //overcast.TestingUtilities.SetupTestEnvironment('sapDelivery');//Commented by Sourav for Overcast uninstall
        sapDelivery request = new sapDelivery();
        request.IS_DLV_DATA_CONTROL.BYPASSING_BUFFER = 'a';

        string s = request.serialize();
        request.testResponse = '{"output":' + s + '}';
        return request;
    }


    @istest
    private static void TestSerialize() {
        sapDelivery input = new sapDelivery();
        input.IS_DLV_DATA_CONTROL.BYPASSING_BUFFER = 'a';
        sapDelivery actual = (sapDelivery)JSON.deserialize(input.serialize(), sapDelivery.class);
        system.assertEquals('a', actual.IS_DLV_DATA_CONTROL.BYPASSING_BUFFER);
    }

    @istest
    private static void TestDeserialize() {
        sapDelivery output = new sapDelivery();
        output.IS_DLV_DATA_CONTROL.BYPASSING_BUFFER = 'a';

        string s = output.serialize();
        sapDelivery actual = sapDelivery.deserialize('{"output":' + s + '}');
        system.assertEquals('a', actual.IS_DLV_DATA_CONTROL.BYPASSING_BUFFER);
    }

    @istest
    private static void TestDeserializeError() {
        try {
            sapDelivery actual = sapDelivery.deserialize('{"error":["A test error"]}');
            system.assert(false, 'No exception thrown');
        }
        catch (sapDelivery.sapDeliveryException e) {
            system.assertEquals('A test error', e.getMessage());
        }
    }

    @istest
    private static void TestGetterSetter() {
        sapDelivery output = new sapDelivery();
        output.set('SAMPLE1', new map<string, object>{
            'FIELD1' => 'VALUE1'
        });
        
        system.assertEquals(null, output.get('NOVAL'));
        
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));       
    }
    
    @istest
    private static void TestLoadAsyncResponse() {
        sapDelivery output = new sapDelivery();
        output.loadAsyncResponse('{"output":{"SAMPLE1":{"FIELD1":"VALUE1"}}}');
        system.assertEquals(null, output.get('NOVAL'));
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));
    }

    @istest
    private static void TestGetMetadata() {
        sapDelivery output = new sapDelivery();
        /*map<string, overcast.TypeInfo> metadata = output.getMetadata();
        
        set<string> keys = metadata.keySet();
        system.assert(keys.contains('BAPI_DELIVERY_GETLIST'));
        system.assert(keys.contains('IS_DLV_DATA_CONTROL'));
        system.assert(keys.contains('ET_DELIVERY_HEADER'));
        system.assert(keys.contains('ET_DELIVERY_HEADER_STS'));
        system.assert(keys.contains('ET_DELIVERY_ITEM'));
        system.assert(keys.contains('ET_DELIVERY_ITEM_STS'));
        system.assert(keys.contains('ET_DELIVERY_PARTNER'));
        system.assert(keys.contains('ET_DOCUMENT_FLOW'));
        system.assert(keys.contains('ET_FOREIGN_TRADE_HEADER'));
        system.assert(keys.contains('ET_FOREIGN_TRADE_ITEM'));
        system.assert(keys.contains('ET_HU_HEADER'));
        system.assert(keys.contains('ET_ITEM_SERIAL_NO'));
        system.assert(keys.contains('EXTENSIONIN'));
        system.assert(keys.contains('EXTENSIONOUT'));
        system.assert(keys.contains('IT_ABLAD'));
        system.assert(keys.contains('IT_ABTNR'));
        system.assert(keys.contains('IT_AUFNR'));
        system.assert(keys.contains('IT_AULWE'));
        system.assert(keys.contains('IT_BESTK'));
        system.assert(keys.contains('IT_BLDAT'));
        system.assert(keys.contains('IT_CHARG'));
        system.assert(keys.contains('IT_CMFRE'));
        system.assert(keys.contains('IT_CMGST'));
        system.assert(keys.contains('IT_CMNGV'));
        system.assert(keys.contains('IT_CTLPC'));
        system.assert(keys.contains('IT_EAN11'));
        system.assert(keys.contains('IT_ERDAT'));
        system.assert(keys.contains('IT_ERNAM'));
        system.assert(keys.contains('IT_FKSTK'));
        system.assert(keys.contains('IT_GBSTK'));
        system.assert(keys.contains('IT_GRUPP'));
        system.assert(keys.contains('IT_KDMAT'));
        system.assert(keys.contains('IT_KKBER'));
        system.assert(keys.contains('IT_KNKLI'));
        system.assert(keys.contains('IT_KODAT'));
        system.assert(keys.contains('IT_KOQUK'));
        system.assert(keys.contains('IT_KOSTK'));
        system.assert(keys.contains('IT_KUNN2'));
        system.assert(keys.contains('IT_KUNNR'));
        system.assert(keys.contains('IT_KUNWE'));
        system.assert(keys.contains('IT_LDDAT'));
        system.assert(keys.contains('IT_LFART'));
        system.assert(keys.contains('IT_LFDAT'));
        system.assert(keys.contains('IT_LGNUM'));
        system.assert(keys.contains('IT_LGORT'));
        system.assert(keys.contains('IT_LGTOR'));
        system.assert(keys.contains('IT_LIFEX'));
        system.assert(keys.contains('IT_LIFSK'));
        system.assert(keys.contains('IT_LPRIO'));
        system.assert(keys.contains('IT_LSTEL'));
        system.assert(keys.contains('IT_LVSTK'));
        system.assert(keys.contains('IT_MATKL'));
        system.assert(keys.contains('IT_MATNR'));
        system.assert(keys.contains('IT_PARNR'));
        system.assert(keys.contains('IT_PARVW'));
        system.assert(keys.contains('IT_PERNR'));
        system.assert(keys.contains('IT_PKSTK'));
        system.assert(keys.contains('IT_PRVBE'));
        system.assert(keys.contains('IT_ROUTE'));
        system.assert(keys.contains('IT_SAMMG'));
        system.assert(keys.contains('IT_SBGRP'));
        system.assert(keys.contains('IT_SPART'));
        system.assert(keys.contains('IT_SPDNR'));
        system.assert(keys.contains('IT_TDDAT'));
        system.assert(keys.contains('IT_TKNUM'));
        system.assert(keys.contains('IT_TRAID'));
        system.assert(keys.contains('IT_TRSTA'));
        system.assert(keys.contains('IT_VBELN'));
        system.assert(keys.contains('IT_VBTYP'));
        system.assert(keys.contains('IT_VGBEL'));
        system.assert(keys.contains('IT_VGSYS'));
        system.assert(keys.contains('IT_VKBUR'));
        system.assert(keys.contains('IT_VKGRP'));
        system.assert(keys.contains('IT_VKORG'));
        system.assert(keys.contains('IT_VSBED'));
        system.assert(keys.contains('IT_VSTEL'));
        system.assert(keys.contains('IT_VTWEG'));
        system.assert(keys.contains('IT_WADAT'));
        system.assert(keys.contains('IT_WADAT_IST'));
        system.assert(keys.contains('IT_WAKTI'));
        system.assert(keys.contains('IT_WAUHR'));
        system.assert(keys.contains('IT_WBSTK'));
        system.assert(keys.contains('IT_WERKS'));
        system.assert(keys.contains('IT_XBLNR'));
        system.assert(keys.contains('RETURN_x'));
        
        overcast.TypeInfo first = metadata.get(output.getTopTypeName());
        system.assertNotEquals(null, first);
        system.assertEquals('BAPI_DELIVERY_GETLIST', first.name);*///Commented by Sourav for Overcast uninstall
    }
}