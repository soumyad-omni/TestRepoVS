/* 
 * Generated by Overcast UTC 2020-01-05 06:46:00Z.
 * Changes to this class may cause incorrect behavior and will be lost if the scenario is re-activated.
 */
@istest
private class sapCreditDetailTest {
    @istest
    private static void testsapCreditDetail() {
        sapCreditDetail actual = new sapCreditDetail();
        system.assertNotEquals(null, actual.ISM_BAPI_CR_ACC_GETDETAIL);
        system.assertNotEquals(null, actual.PS_CREDIT_ACCOUNT_DETAIL_ALL);
        system.assertNotEquals(null, actual.RETURN_x);
    }

    @istest
    private static void TestISM_BAPI_CR_ACC_GETDETAIL() {
        sapCreditDetail.ISM_BAPI_CR_ACC_GETDETAIL actual = new sapCreditDetail.ISM_BAPI_CR_ACC_GETDETAIL('a','a','a','a');

        system.assertEquals('a', actual.PV_ALLOWED_AGING_IN_DAYS);
        system.assertEquals('a', actual.PV_ALLOWED_AGING_IN_HOURS);
        system.assertEquals('a', actual.PV_CREDIT_CONTROL_AREA);
        system.assertEquals('a', actual.PV_CUSTOMER);

        sapCreditDetail.ISM_BAPI_CR_ACC_GETDETAIL actual0 = new sapCreditDetail.ISM_BAPI_CR_ACC_GETDETAIL();
    }
    @istest
    private static void TestPS_CREDIT_ACCOUNT_DETAIL_ALL() {
        sapCreditDetail.PS_CREDIT_ACCOUNT_DETAIL_ALL actual = new sapCreditDetail.PS_CREDIT_ACCOUNT_DETAIL_ALL(0,'a',0,0,'a','a','a',Date.newInstance(2000,1,1),0,'a','a','a','a',0,0);

        system.assertEquals(0, actual.CRED_LIMIT);
        system.assertEquals('a', actual.CRED_ACCNT);
        system.assertEquals(0, actual.RCVBL_VALS);
        system.assertEquals(0, actual.CRED_LIAB);
        system.assertEquals('a', actual.CURRENCY_x);
        system.assertEquals('a', actual.RISK_CATEG);
        system.assertEquals('a', actual.BLOCKED);
        system.assertEquals(Date.newInstance(2000,1,1), actual.NXT_REVIEW);
        system.assertEquals(0, actual.SECURED_ITEMS);
        system.assertEquals('a', actual.DATA_TOO_OLD);
        system.assertEquals('a', actual.DATA_NOT_FOUND);
        system.assertEquals('a', actual.AGING_IN_DAYS);
        system.assertEquals('a', actual.AGING_IN_HOURS);
        system.assertEquals(0, actual.ORDER_VALS);
        system.assertEquals(0, actual.TOTAL_LIABILITIES);

        sapCreditDetail.PS_CREDIT_ACCOUNT_DETAIL_ALL actual0 = new sapCreditDetail.PS_CREDIT_ACCOUNT_DETAIL_ALL();
    }
    @istest
    private static void TestRETURN_x() {
        sapCreditDetail.RETURN_x actual = new sapCreditDetail.RETURN_x('a','a','a','a','a','a','a','a','a','a');

        system.assertEquals('a', actual.TYPE_x);
        system.assertEquals('a', actual.ID);
        system.assertEquals('a', actual.NUMBER_x);
        system.assertEquals('a', actual.MESSAGE);
        system.assertEquals('a', actual.LOG_NO);
        system.assertEquals('a', actual.LOG_MSG_NO);
        system.assertEquals('a', actual.MESSAGE_V1);
        system.assertEquals('a', actual.MESSAGE_V2);
        system.assertEquals('a', actual.MESSAGE_V3);
        system.assertEquals('a', actual.MESSAGE_V4);

        sapCreditDetail.RETURN_x actual0 = new sapCreditDetail.RETURN_x();
    }

    @istest
    private static void testRun() {
        sapCreditDetail request = testSetup();
        /*sapCreditDetail response = request.run();
        system.assertEquals('a', response.ISM_BAPI_CR_ACC_GETDETAIL.PV_ALLOWED_AGING_IN_DAYS);
        string requestid = request.runAsync(null, null, new Continuation(10));*///Commented by Sourav for Overcast uninstall
    }

    private static sapCreditDetail testSetup() {
        //overcast.TestingUtilities.SetupTestEnvironment('sapCreditDetail');//Commented by Sourav for Overcast uninstall
        sapCreditDetail request = new sapCreditDetail();
        request.ISM_BAPI_CR_ACC_GETDETAIL.PV_ALLOWED_AGING_IN_DAYS = 'a';

        string s = request.serialize();
        request.testResponse = '{"output":' + s + '}';
        return request;
    }


    @istest
    private static void TestSerialize() {
        sapCreditDetail input = new sapCreditDetail();
        input.ISM_BAPI_CR_ACC_GETDETAIL.PV_ALLOWED_AGING_IN_DAYS = 'a';
        sapCreditDetail actual = (sapCreditDetail)JSON.deserialize(input.serialize(), sapCreditDetail.class);
        system.assertEquals('a', actual.ISM_BAPI_CR_ACC_GETDETAIL.PV_ALLOWED_AGING_IN_DAYS);
    }

    @istest
    private static void TestDeserialize() {
        sapCreditDetail output = new sapCreditDetail();
        output.ISM_BAPI_CR_ACC_GETDETAIL.PV_ALLOWED_AGING_IN_DAYS = 'a';

        string s = output.serialize();
        sapCreditDetail actual = sapCreditDetail.deserialize('{"output":' + s + '}');
        system.assertEquals('a', actual.ISM_BAPI_CR_ACC_GETDETAIL.PV_ALLOWED_AGING_IN_DAYS);
    }

    @istest
    private static void TestDeserializeError() {
        try {
            sapCreditDetail actual = sapCreditDetail.deserialize('{"error":["A test error"]}');
            system.assert(false, 'No exception thrown');
        }
        catch (sapCreditDetail.sapCreditDetailException e) {
            system.assertEquals('A test error', e.getMessage());
        }
    }

    @istest
    private static void TestGetterSetter() {
        sapCreditDetail output = new sapCreditDetail();
        output.set('SAMPLE1', new map<string, object>{
            'FIELD1' => 'VALUE1'
        });
        
        system.assertEquals(null, output.get('NOVAL'));
        
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));       
    }
    
    @istest
    private static void TestLoadAsyncResponse() {
        sapCreditDetail output = new sapCreditDetail();
        output.loadAsyncResponse('{"output":{"SAMPLE1":{"FIELD1":"VALUE1"}}}');
        system.assertEquals(null, output.get('NOVAL'));
        map<string, object> sample1 = (map<string, object>)output.get('SAMPLE1');
        system.assertNotEquals(null, sample1);
        system.assertEquals('VALUE1', sample1.get('FIELD1'));
    }

    @istest
    private static void TestGetMetadata() {
        sapCreditDetail output = new sapCreditDetail();
        /*map<string, overcast.TypeInfo> metadata = output.getMetadata();
        
        set<string> keys = metadata.keySet();
        system.assert(keys.contains('ISM_BAPI_CR_ACC_GETDETAIL'));
        system.assert(keys.contains('PS_CREDIT_ACCOUNT_DETAIL_ALL'));
        system.assert(keys.contains('RETURN_x'));
        
        overcast.TypeInfo first = metadata.get(output.getTopTypeName());
        system.assertNotEquals(null, first);
        system.assertEquals('ISM_BAPI_CR_ACC_GETDETAIL', first.name);*///Commented by Sourav for Overcast uninstall
    }
}